android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs
android.support.v4.app.ActionBarDrawerToggle
android.support.v4.app.ActionBarDrawerToggle$1
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable
android.support.v4.app.ActionBarDrawerToggleHoneycomb
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo
android.support.v4.app.ActivityCompat
android.support.v4.app.ActivityCompatHoneycomb
android.support.v4.app.ActivityCompatJB
android.support.v4.app.ActivityOptionsCompat
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB
android.support.v4.app.ActivityOptionsCompatJB
android.support.v4.app.BackStackRecord
android.support.v4.app.BackStackRecord$Op
android.support.v4.app.BackStackState
android.support.v4.app.BackStackState$1
android.support.v4.app.DialogFragment
android.support.v4.app.Fragment
android.support.v4.app.Fragment$1
android.support.v4.app.Fragment$InstantiationException
android.support.v4.app.Fragment$SavedState
android.support.v4.app.Fragment$SavedState$1
android.support.v4.app.FragmentActivity
android.support.v4.app.FragmentActivity$1
android.support.v4.app.FragmentActivity$2
android.support.v4.app.FragmentActivity$FragmentTag
android.support.v4.app.FragmentActivity$NonConfigurationInstances
android.support.v4.app.FragmentContainer
android.support.v4.app.FragmentManager
android.support.v4.app.FragmentManager$BackStackEntry
android.support.v4.app.FragmentManager$OnBackStackChangedListener
android.support.v4.app.FragmentManagerImpl
android.support.v4.app.FragmentManagerImpl$1
android.support.v4.app.FragmentManagerImpl$2
android.support.v4.app.FragmentManagerImpl$3
android.support.v4.app.FragmentManagerImpl$4
android.support.v4.app.FragmentManagerImpl$5
android.support.v4.app.FragmentManagerState
android.support.v4.app.FragmentManagerState$1
android.support.v4.app.FragmentPagerAdapter
android.support.v4.app.FragmentState
android.support.v4.app.FragmentState$1
android.support.v4.app.FragmentStatePagerAdapter
android.support.v4.app.FragmentTabHost
android.support.v4.app.FragmentTabHost$1
android.support.v4.app.FragmentTabHost$DummyTabFactory
android.support.v4.app.FragmentTabHost$SavedState
android.support.v4.app.FragmentTabHost$SavedState$1
android.support.v4.app.FragmentTabHost$TabInfo
android.support.v4.app.FragmentTransaction
android.support.v4.app.ListFragment
android.support.v4.app.ListFragment$1
android.support.v4.app.ListFragment$2
android.support.v4.app.LoaderManager
android.support.v4.app.LoaderManager$LoaderCallbacks
android.support.v4.app.LoaderManagerImpl
android.support.v4.app.LoaderManagerImpl$LoaderInfo
android.support.v4.app.NavUtils
android.support.v4.app.NavUtils$NavUtilsImpl
android.support.v4.app.NavUtils$NavUtilsImplBase
android.support.v4.app.NavUtils$NavUtilsImplJB
android.support.v4.app.NavUtilsJB
android.support.v4.app.NoSaveStateFrameLayout
android.support.v4.app.NotificationCompat
android.support.v4.app.NotificationCompat$Action
android.support.v4.app.NotificationCompat$BigPictureStyle
android.support.v4.app.NotificationCompat$BigTextStyle
android.support.v4.app.NotificationCompat$Builder
android.support.v4.app.NotificationCompat$InboxStyle
android.support.v4.app.NotificationCompat$NotificationCompatImpl
android.support.v4.app.NotificationCompat$NotificationCompatImplBase
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean
android.support.v4.app.NotificationCompat$Style
android.support.v4.app.NotificationCompatHoneycomb
android.support.v4.app.NotificationCompatIceCreamSandwich
android.support.v4.app.NotificationCompatJellybean
android.support.v4.app.ServiceCompat
android.support.v4.app.ShareCompat
android.support.v4.app.ShareCompat$IntentBuilder
android.support.v4.app.ShareCompat$IntentReader
android.support.v4.app.ShareCompat$ShareCompatImpl
android.support.v4.app.ShareCompat$ShareCompatImplBase
android.support.v4.app.ShareCompat$ShareCompatImplICS
android.support.v4.app.ShareCompat$ShareCompatImplJB
android.support.v4.app.ShareCompatICS
android.support.v4.app.ShareCompatJB
android.support.v4.app.SuperNotCalledException
android.support.v4.app.TaskStackBuilder
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean
android.support.v4.app.TaskStackBuilderHoneycomb
android.support.v4.app.TaskStackBuilderJellybean
android.support.v4.content.AsyncTaskLoader
android.support.v4.content.AsyncTaskLoader$LoadTask
android.support.v4.content.ContextCompat
android.support.v4.content.ContextCompatHoneycomb
android.support.v4.content.ContextCompatJellybean
android.support.v4.content.CursorLoader
android.support.v4.content.FileProvider
android.support.v4.content.FileProvider$PathStrategy
android.support.v4.content.FileProvider$SimplePathStrategy
android.support.v4.content.IntentCompat
android.support.v4.content.IntentCompat$IntentCompatImpl
android.support.v4.content.IntentCompat$IntentCompatImplBase
android.support.v4.content.IntentCompat$IntentCompatImplHC
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1
android.support.v4.content.IntentCompatHoneycomb
android.support.v4.content.IntentCompatIcsMr1
android.support.v4.content.Loader
android.support.v4.content.Loader$ForceLoadContentObserver
android.support.v4.content.Loader$OnLoadCompleteListener
android.support.v4.content.LocalBroadcastManager
android.support.v4.content.LocalBroadcastManager$1
android.support.v4.content.LocalBroadcastManager$BroadcastRecord
android.support.v4.content.LocalBroadcastManager$ReceiverRecord
android.support.v4.content.ModernAsyncTask
android.support.v4.content.ModernAsyncTask$1
android.support.v4.content.ModernAsyncTask$2
android.support.v4.content.ModernAsyncTask$3
android.support.v4.content.ModernAsyncTask$4
android.support.v4.content.ModernAsyncTask$AsyncTaskResult
android.support.v4.content.ModernAsyncTask$InternalHandler
android.support.v4.content.ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$WorkerRunnable
android.support.v4.content.pm.ActivityInfoCompat
android.support.v4.database.DatabaseUtilsCompat
android.support.v4.net.ConnectivityManagerCompat
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompatGingerbread
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2
android.support.v4.net.ConnectivityManagerCompatJellyBean
android.support.v4.net.TrafficStatsCompat
android.support.v4.net.TrafficStatsCompat$1
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl
android.support.v4.net.TrafficStatsCompatIcs
android.support.v4.os.ParcelableCompat
android.support.v4.os.ParcelableCompat$CompatCreator
android.support.v4.os.ParcelableCompatCreatorCallbacks
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub
android.support.v4.util.AtomicFile
android.support.v4.util.DebugUtils
android.support.v4.util.LogWriter
android.support.v4.util.LongSparseArray
android.support.v4.util.LruCache
android.support.v4.util.SparseArrayCompat
android.support.v4.util.TimeUtils
android.support.v4.view.AccessibilityDelegateCompat
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl
android.support.v4.view.AccessibilityDelegateCompatIcs
android.support.v4.view.AccessibilityDelegateCompatIcs$1
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge
android.support.v4.view.AccessibilityDelegateCompatJellyBean
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean
android.support.v4.view.GestureDetectorCompat
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2
android.support.v4.view.GravityCompat
android.support.v4.view.GravityCompat$GravityCompatImpl
android.support.v4.view.GravityCompat$GravityCompatImplBase
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1
android.support.v4.view.GravityCompatJellybeanMr1
android.support.v4.view.KeyEventCompat
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl
android.support.v4.view.KeyEventCompatEclair
android.support.v4.view.KeyEventCompatHoneycomb
android.support.v4.view.MenuCompat
android.support.v4.view.MenuCompat$BaseMenuVersionImpl
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl
android.support.v4.view.MenuCompat$MenuVersionImpl
android.support.v4.view.MenuItemCompat
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl
android.support.v4.view.MenuItemCompat$MenuVersionImpl
android.support.v4.view.MenuItemCompatHoneycomb
android.support.v4.view.MotionEventCompat
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl
android.support.v4.view.MotionEventCompatEclair
android.support.v4.view.PagerAdapter
android.support.v4.view.PagerTabStrip
android.support.v4.view.PagerTabStrip$1
android.support.v4.view.PagerTabStrip$2
android.support.v4.view.PagerTitleStrip
android.support.v4.view.PagerTitleStrip$1
android.support.v4.view.PagerTitleStrip$PageListener
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs
android.support.v4.view.PagerTitleStripIcs
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform
android.support.v4.view.VelocityTrackerCompat
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl
android.support.v4.view.VelocityTrackerCompatHoneycomb
android.support.v4.view.ViewCompat
android.support.v4.view.ViewCompat$BaseViewCompatImpl
android.support.v4.view.ViewCompat$GBViewCompatImpl
android.support.v4.view.ViewCompat$HCViewCompatImpl
android.support.v4.view.ViewCompat$ICSViewCompatImpl
android.support.v4.view.ViewCompat$JBViewCompatImpl
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl
android.support.v4.view.ViewCompat$ViewCompatImpl
android.support.v4.view.ViewCompatGingerbread
android.support.v4.view.ViewCompatHC
android.support.v4.view.ViewCompatICS
android.support.v4.view.ViewCompatJB
android.support.v4.view.ViewCompatJellybeanMr1
android.support.v4.view.ViewConfigurationCompat
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl
android.support.v4.view.ViewConfigurationCompatFroyo
android.support.v4.view.ViewGroupCompat
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl
android.support.v4.view.ViewGroupCompatHC
android.support.v4.view.ViewGroupCompatIcs
android.support.v4.view.ViewPager
android.support.v4.view.ViewPager$1
android.support.v4.view.ViewPager$2
android.support.v4.view.ViewPager$3
android.support.v4.view.ViewPager$Decor
android.support.v4.view.ViewPager$ItemInfo
android.support.v4.view.ViewPager$LayoutParams
android.support.v4.view.ViewPager$MyAccessibilityDelegate
android.support.v4.view.ViewPager$OnAdapterChangeListener
android.support.v4.view.ViewPager$OnPageChangeListener
android.support.v4.view.ViewPager$PageTransformer
android.support.v4.view.ViewPager$PagerObserver
android.support.v4.view.ViewPager$SavedState
android.support.v4.view.ViewPager$SavedState$1
android.support.v4.view.ViewPager$SimpleOnPageChangeListener
android.support.v4.view.ViewPager$ViewPositionComparator
android.support.v4.view.accessibility.AccessibilityEventCompat
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl
android.support.v4.view.accessibility.AccessibilityEventCompatIcs
android.support.v4.view.accessibility.AccessibilityManagerCompat
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge
android.support.v4.view.accessibility.AccessibilityRecordCompat
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean
android.support.v4.widget.CursorAdapter
android.support.v4.widget.CursorAdapter$1
android.support.v4.widget.CursorAdapter$ChangeObserver
android.support.v4.widget.CursorAdapter$MyDataSetObserver
android.support.v4.widget.CursorFilter
android.support.v4.widget.CursorFilter$CursorFilterClient
android.support.v4.widget.DrawerLayout
android.support.v4.widget.DrawerLayout$AccessibilityDelegate
android.support.v4.widget.DrawerLayout$DrawerListener
android.support.v4.widget.DrawerLayout$LayoutParams
android.support.v4.widget.DrawerLayout$SavedState
android.support.v4.widget.DrawerLayout$SavedState$1
android.support.v4.widget.DrawerLayout$SimpleDrawerListener
android.support.v4.widget.DrawerLayout$ViewDragCallback
android.support.v4.widget.DrawerLayout$ViewDragCallback$1
android.support.v4.widget.EdgeEffectCompat
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl
android.support.v4.widget.EdgeEffectCompatIcs
android.support.v4.widget.ResourceCursorAdapter
android.support.v4.widget.ScrollerCompat
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs
android.support.v4.widget.ScrollerCompatGingerbread
android.support.v4.widget.ScrollerCompatIcs
android.support.v4.widget.SearchViewCompat
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl
android.support.v4.widget.SearchViewCompatHoneycomb
android.support.v4.widget.SearchViewCompatHoneycomb$1
android.support.v4.widget.SearchViewCompatHoneycomb$2
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge
android.support.v4.widget.SearchViewCompatIcs
android.support.v4.widget.SearchViewCompatIcs$MySearchView
android.support.v4.widget.SimpleCursorAdapter
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter
android.support.v4.widget.SimpleCursorAdapter$ViewBinder
android.support.v4.widget.SlidingPaneLayout
android.support.v4.widget.SlidingPaneLayout$1
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback
android.support.v4.widget.SlidingPaneLayout$LayoutParams
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener
android.support.v4.widget.SlidingPaneLayout$SavedState
android.support.v4.widget.SlidingPaneLayout$SavedState$1
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1
android.support.v4.widget.ViewDragHelper
android.support.v4.widget.ViewDragHelper$1
android.support.v4.widget.ViewDragHelper$2
android.support.v4.widget.ViewDragHelper$Callback
com.af.dodgybat.BuildConfig
com.af.dodgybat.R
com.af.dodgybat.R$attr
com.af.dodgybat.R$dimen
com.af.dodgybat.R$drawable
com.af.dodgybat.R$id
com.af.dodgybat.R$layout
com.af.dodgybat.R$menu
com.af.dodgybat.R$string
com.af.dodgybat.R$style
com.af.dodgybat.model.Bat:
    25:26:public void setVelocity(com.badlogic.gdx.math.Vector2)
    37:38:public void setPosition(com.badlogic.gdx.math.Vector2)
    41:42:public void setBounds(com.badlogic.gdx.math.Rectangle)
    65:65:public float getDistance()
    76:76:public boolean isDoubleTap()
com.af.dodgybat.model.Bat$State:
    1:1:public static com.af.dodgybat.model.Bat$State[] values()
    1:1:public static com.af.dodgybat.model.Bat$State valueOf(java.lang.String)
com.af.dodgybat.model.Block
com.af.dodgybat.model.Pipe:
    26:27:public void setPosition(com.badlogic.gdx.math.Vector2)
com.af.dodgybat.screens.FlapAboutScreen:
    67:67:public boolean mouseMoved(int,int)
    72:72:public boolean scrolled(int)
com.af.dodgybat.screens.FlapMenuScreen:
    79:79:public boolean mouseMoved(int,int)
    84:84:public boolean scrolled(int)
com.af.dodgybat.screens.FlapPlayScreen:
    56:57:public void reinit()
    76:77:public void dispose()
    143:143:public boolean mouseMoved(int,int)
    149:149:public boolean scrolled(int)
com.af.dodgybat.screens.FlapReadyScreen:
    63:63:public boolean mouseMoved(int,int)
    68:68:public boolean scrolled(int)
com.af.dodgybat.screens.FlapScoreScreen:
    103:103:public boolean mouseMoved(int,int)
    108:108:public boolean scrolled(int)
com.af.dodgybat.screens.FlapSplashScreen:
    79:79:public void dispose()
com.af.dodgybat.sound.SoundEffects:
    35:38:public void destroySounds()
com.af.dodgybat.utils.AtMaker
com.af.dodgybat.utils.FlapAssetManager:
    8:8:public FlapAssetManager()
com.af.dodgybat.view.WorldRenderer:
    private static final float FRAME_DURATION
    108:110:public void dispose()
com.af.dodgybat.view.WorldRenderer$Mode:
    1:1:public static com.af.dodgybat.view.WorldRenderer$Mode[] values()
    1:1:public static com.af.dodgybat.view.WorldRenderer$Mode valueOf(java.lang.String)
com.badlogic.gdx.Application:
    public static final int LOG_NONE
    public static final int LOG_DEBUG
    public static final int LOG_INFO
    public static final int LOG_ERROR
    public abstract com.badlogic.gdx.ApplicationListener getApplicationListener()
    public abstract com.badlogic.gdx.Audio getAudio()
    public abstract com.badlogic.gdx.Input getInput()
    public abstract com.badlogic.gdx.Files getFiles()
    public abstract com.badlogic.gdx.Net getNet()
    public abstract void log(java.lang.String,java.lang.String,java.lang.Exception)
    public abstract void error(java.lang.String,java.lang.String)
    public abstract void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void setLogLevel(int)
    public abstract int getVersion()
    public abstract long getJavaHeap()
    public abstract long getNativeHeap()
    public abstract com.badlogic.gdx.utils.Clipboard getClipboard()
    public abstract void exit()
    public abstract void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
    public abstract void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.Application$ApplicationType:
    101:101:public static com.badlogic.gdx.Application$ApplicationType[] values()
    101:101:public static com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String)
com.badlogic.gdx.ApplicationAdapter:
    24:24:public void create()
    28:28:public void resize(int,int)
    32:32:public void render()
    36:36:public void pause()
    40:40:public void resume()
    44:44:public void dispose()
com.badlogic.gdx.Audio:
    public abstract com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    public abstract com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
com.badlogic.gdx.Files:
    public abstract com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
    public abstract com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
    public abstract com.badlogic.gdx.files.FileHandle local(java.lang.String)
    public abstract boolean isExternalStorageAvailable()
    public abstract java.lang.String getLocalStoragePath()
    public abstract boolean isLocalStorageAvailable()
com.badlogic.gdx.Files$FileType:
    29:29:public static com.badlogic.gdx.Files$FileType valueOf(java.lang.String)
com.badlogic.gdx.Game:
    69:69:public com.badlogic.gdx.Screen getScreen()
com.badlogic.gdx.Graphics:
    public abstract boolean isGL11Available()
    public abstract com.badlogic.gdx.graphics.GLCommon getGLCommon()
    public abstract float getRawDeltaTime()
    public abstract int getFramesPerSecond()
    public abstract com.badlogic.gdx.Graphics$GraphicsType getType()
    public abstract float getPpiX()
    public abstract float getPpiY()
    public abstract float getPpcX()
    public abstract float getPpcY()
    public abstract float getDensity()
    public abstract boolean supportsDisplayModeChange()
    public abstract com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    public abstract com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode()
    public abstract boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    public abstract boolean setDisplayMode(int,int,boolean)
    public abstract void setTitle(java.lang.String)
    public abstract void setVSync(boolean)
    public abstract com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    public abstract void setContinuousRendering(boolean)
    public abstract boolean isContinuousRendering()
    public abstract boolean isFullscreen()
com.badlogic.gdx.Graphics$DisplayMode:
    74:79:protected Graphics$DisplayMode(int,int,int,int)
com.badlogic.gdx.Graphics$GraphicsType:
    61:61:public static com.badlogic.gdx.Graphics$GraphicsType[] values()
    61:61:public static com.badlogic.gdx.Graphics$GraphicsType valueOf(java.lang.String)
com.badlogic.gdx.Input:
    public abstract float getAccelerometerX()
    public abstract float getAccelerometerY()
    public abstract float getAccelerometerZ()
    public abstract int getX()
    public abstract int getX(int)
    public abstract int getDeltaX()
    public abstract int getDeltaX(int)
    public abstract int getY()
    public abstract int getY(int)
    public abstract int getDeltaY()
    public abstract int getDeltaY(int)
    public abstract boolean isTouched()
    public abstract boolean justTouched()
    public abstract void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    public abstract void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    public abstract void vibrate(int)
    public abstract void vibrate(long[],int)
    public abstract void cancelVibrate()
    public abstract float getAzimuth()
    public abstract float getPitch()
    public abstract float getRoll()
    public abstract void getRotationMatrix(float[])
    public abstract void setCatchBackKey(boolean)
    public abstract void setCatchMenuKey(boolean)
    public abstract com.badlogic.gdx.InputProcessor getInputProcessor()
    public abstract boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    public abstract int getRotation()
    public abstract com.badlogic.gdx.Input$Orientation getNativeOrientation()
    public abstract void setCursorCatched(boolean)
    public abstract boolean isCursorCatched()
    public abstract void setCursorPosition(int,int)
com.badlogic.gdx.Input$Buttons:
    public static final int LEFT
    public static final int RIGHT
    public static final int MIDDLE
com.badlogic.gdx.Input$Keys:
    public static final int ANY_KEY
    public static final int NUM_0
    public static final int NUM_1
    public static final int NUM_2
    public static final int NUM_3
    public static final int NUM_4
    public static final int NUM_5
    public static final int NUM_6
    public static final int NUM_7
    public static final int NUM_8
    public static final int NUM_9
    public static final int A
    public static final int ALT_LEFT
    public static final int ALT_RIGHT
    public static final int APOSTROPHE
    public static final int AT
    public static final int B
    public static final int BACK
    public static final int BACKSLASH
    public static final int C
    public static final int CALL
    public static final int CAMERA
    public static final int CLEAR
    public static final int COMMA
    public static final int D
    public static final int DEL
    public static final int BACKSPACE
    public static final int FORWARD_DEL
    public static final int DPAD_CENTER
    public static final int DPAD_DOWN
    public static final int DPAD_LEFT
    public static final int DPAD_RIGHT
    public static final int DPAD_UP
    public static final int CENTER
    public static final int DOWN
    public static final int LEFT
    public static final int RIGHT
    public static final int UP
    public static final int E
    public static final int ENDCALL
    public static final int ENTER
    public static final int ENVELOPE
    public static final int EQUALS
    public static final int EXPLORER
    public static final int F
    public static final int FOCUS
    public static final int G
    public static final int GRAVE
    public static final int H
    public static final int HEADSETHOOK
    public static final int HOME
    public static final int I
    public static final int J
    public static final int K
    public static final int L
    public static final int LEFT_BRACKET
    public static final int M
    public static final int MEDIA_FAST_FORWARD
    public static final int MEDIA_NEXT
    public static final int MEDIA_PLAY_PAUSE
    public static final int MEDIA_PREVIOUS
    public static final int MEDIA_REWIND
    public static final int MEDIA_STOP
    public static final int MENU
    public static final int MINUS
    public static final int MUTE
    public static final int N
    public static final int NOTIFICATION
    public static final int NUM
    public static final int O
    public static final int P
    public static final int PERIOD
    public static final int PLUS
    public static final int POUND
    public static final int POWER
    public static final int Q
    public static final int R
    public static final int RIGHT_BRACKET
    public static final int S
    public static final int SEARCH
    public static final int SEMICOLON
    public static final int SHIFT_LEFT
    public static final int SHIFT_RIGHT
    public static final int SLASH
    public static final int SOFT_LEFT
    public static final int SOFT_RIGHT
    public static final int SPACE
    public static final int STAR
    public static final int SYM
    public static final int T
    public static final int TAB
    public static final int U
    public static final int UNKNOWN
    public static final int V
    public static final int VOLUME_DOWN
    public static final int VOLUME_UP
    public static final int W
    public static final int X
    public static final int Y
    public static final int Z
    public static final int META_ALT_LEFT_ON
    public static final int META_ALT_ON
    public static final int META_ALT_RIGHT_ON
    public static final int META_SHIFT_LEFT_ON
    public static final int META_SHIFT_ON
    public static final int META_SHIFT_RIGHT_ON
    public static final int META_SYM_ON
    public static final int CONTROL_LEFT
    public static final int CONTROL_RIGHT
    public static final int ESCAPE
    public static final int END
    public static final int INSERT
    public static final int PAGE_UP
    public static final int PAGE_DOWN
    public static final int PICTSYMBOLS
    public static final int SWITCH_CHARSET
    public static final int BUTTON_CIRCLE
    public static final int BUTTON_A
    public static final int BUTTON_B
    public static final int BUTTON_C
    public static final int BUTTON_X
    public static final int BUTTON_Y
    public static final int BUTTON_Z
    public static final int BUTTON_L1
    public static final int BUTTON_R1
    public static final int BUTTON_L2
    public static final int BUTTON_R2
    public static final int BUTTON_THUMBL
    public static final int BUTTON_THUMBR
    public static final int BUTTON_START
    public static final int BUTTON_SELECT
    public static final int BUTTON_MODE
    public static final int COLON
    public static final int F1
    public static final int F2
    public static final int F3
    public static final int F4
    public static final int F5
    public static final int F6
    public static final int F7
    public static final int F8
    public static final int F9
    public static final int F10
    public static final int F11
    public static final int F12
com.badlogic.gdx.Input$Orientation:
    413:413:public static com.badlogic.gdx.Input$Orientation[] values()
    413:413:public static com.badlogic.gdx.Input$Orientation valueOf(java.lang.String)
com.badlogic.gdx.Input$Peripheral:
    232:232:public static com.badlogic.gdx.Input$Peripheral[] values()
    232:232:public static com.badlogic.gdx.Input$Peripheral valueOf(java.lang.String)
com.badlogic.gdx.InputAdapter:
    49:49:public boolean mouseMoved(int,int)
    54:54:public boolean scrolled(int)
com.badlogic.gdx.InputMultiplexer:
    30:33:public varargs InputMultiplexer(com.badlogic.gdx.InputProcessor[])
    36:37:public void addProcessor(int,com.badlogic.gdx.InputProcessor)
    40:41:public void removeProcessor(int)
    44:45:public void addProcessor(com.badlogic.gdx.InputProcessor)
    48:49:public void removeProcessor(com.badlogic.gdx.InputProcessor)
    53:53:public int size()
    57:58:public void clear()
    61:62:public void setProcessors(com.badlogic.gdx.utils.Array)
    65:65:public com.badlogic.gdx.utils.Array getProcessors()
    106:108:public boolean mouseMoved(int,int)
    113:115:public boolean scrolled(int)
com.badlogic.gdx.InputProcessor:
    public abstract boolean mouseMoved(int,int)
    public abstract boolean scrolled(int)
com.badlogic.gdx.InputProcessorQueue:
    private static final int KEY_DOWN
    private static final int KEY_UP
    private static final int KEY_TYPED
    private static final int TOUCH_DOWN
    private static final int TOUCH_UP
    private static final int TOUCH_DRAGGED
    private static final int MOUSE_MOVED
    private static final int SCROLLED
    private com.badlogic.gdx.InputProcessor processor
    private long currentEventTime
    27:29:public InputProcessorQueue(com.badlogic.gdx.InputProcessor)
    32:33:public void setProcessor(com.badlogic.gdx.InputProcessor)
    36:36:public com.badlogic.gdx.InputProcessor getProcessor()
    40:79:public void drain()
    138:142:public synchronized boolean mouseMoved(int,int)
    146:149:public synchronized boolean scrolled(int)
    153:153:public long getCurrentEventTime()
com.badlogic.gdx.Net:
    public abstract void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    public abstract com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
    public abstract com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
    public abstract void openURI(java.lang.String)
com.badlogic.gdx.Net$HttpMethods:
    public static final java.lang.String GET
    public static final java.lang.String POST
    public static final java.lang.String PUT
    public static final java.lang.String DELETE
com.badlogic.gdx.Net$HttpRequest:
    private final java.lang.String httpMethod
    private java.lang.String url
    private java.util.Map headers
    private int timeOut
    private long contentLength
    148:151:public Net$HttpRequest(java.lang.String)
    156:157:public void setUrl(java.lang.String)
    164:165:public void setHeader(java.lang.String,java.lang.String)
    172:173:public void setContent(java.lang.String)
    178:180:public void setContent(java.io.InputStream,long)
    186:187:public void setTimeOut(int)
    192:192:public int getTimeOut()
    197:197:public java.lang.String getMethod()
    202:202:public java.lang.String getUrl()
    217:217:public long getContentLength()
    222:222:public java.util.Map getHeaders()
com.badlogic.gdx.Net$HttpResponse:
    public abstract byte[] getResult()
    public abstract java.lang.String getResultAsString()
    public abstract java.io.InputStream getResultAsStream()
    public abstract com.badlogic.gdx.net.HttpStatus getStatus()
    public abstract java.lang.String getHeader(java.lang.String)
    public abstract java.util.Map getHeaders()
com.badlogic.gdx.Net$Protocol:
    268:268:public static com.badlogic.gdx.Net$Protocol[] values()
    268:268:public static com.badlogic.gdx.Net$Protocol valueOf(java.lang.String)
com.badlogic.gdx.Preferences:
    public abstract void putLong(java.lang.String,long)
    public abstract void putFloat(java.lang.String,float)
    public abstract void putString(java.lang.String,java.lang.String)
    public abstract void put(java.util.Map)
    public abstract boolean getBoolean(java.lang.String)
    public abstract int getInteger(java.lang.String)
    public abstract long getLong(java.lang.String)
    public abstract float getFloat(java.lang.String)
    public abstract java.lang.String getString(java.lang.String)
    public abstract long getLong(java.lang.String,long)
    public abstract float getFloat(java.lang.String,float)
    public abstract java.lang.String getString(java.lang.String,java.lang.String)
    public abstract java.util.Map get()
    public abstract boolean contains(java.lang.String)
    public abstract void clear()
    public abstract void remove(java.lang.String)
com.badlogic.gdx.Screen:
    public abstract void dispose()
com.badlogic.gdx.assets.AssetManager:
    101:108:public synchronized java.lang.Object get(java.lang.String)
    189:195:public synchronized boolean containsAsset(java.lang.Object)
    221:225:public synchronized boolean isLoaded(java.lang.String,java.lang.Class)
    232:232:public com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class)
    310:311:public synchronized void load(com.badlogic.gdx.assets.AssetDescriptor)
    316:326:private void disposeDependencies(java.lang.String)
    352:357:public synchronized boolean update(int)
    535:535:public synchronized int getLoadedAssets()
    540:540:public synchronized int getQueuedAssets()
    545:546:public synchronized float getProgress()
    552:553:public synchronized void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener)
    606:606:public com.badlogic.gdx.utils.Logger getLogger()
    627:651:public synchronized java.lang.String getDiagnostics()
    656:656:public synchronized com.badlogic.gdx.utils.Array getAssetNames()
    661:661:public synchronized com.badlogic.gdx.utils.Array getDependencies(java.lang.String)
    666:666:public synchronized java.lang.Class getAssetType(java.lang.String)
com.badlogic.gdx.assets.RefCountedContainer:
    49:50:public void setObject(java.lang.Object)
com.badlogic.gdx.assets.loaders.ModelLoader:
    31:31:public com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle)
    36:37:public com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider,com.badlogic.gdx.assets.AssetLoaderParameters)
    42:42:public com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
    47:47:public com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider)
    52:52:public com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter:
    65:67:public SkinLoader$SkinParameter(java.lang.String)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter:
    82:84:public TextureAtlasLoader$TextureAtlasParameter(boolean)
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver:
    39:42:public varargs ResolutionFileResolver(com.badlogic.gdx.assets.loaders.FileHandleResolver,com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[])
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution:
    29:33:public ResolutionFileResolver$Resolution(int,int,java.lang.String)
com.badlogic.gdx.audio.AudioDevice:
    public abstract boolean isMono()
    public abstract void writeSamples(short[],int,int)
    public abstract void writeSamples(float[],int,int)
    public abstract int getLatency()
    public abstract void dispose()
    public abstract void setVolume(float)
com.badlogic.gdx.audio.AudioRecorder:
    public abstract void read(short[],int,int)
    public abstract void dispose()
com.badlogic.gdx.audio.Music:
    public abstract void play()
    public abstract void pause()
    public abstract void stop()
    public abstract boolean isPlaying()
    public abstract void setLooping(boolean)
    public abstract boolean isLooping()
    public abstract void setVolume(float)
    public abstract float getVolume()
    public abstract void setPan(float,float)
    public abstract float getPosition()
    public abstract void dispose()
    public abstract void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener)
com.badlogic.gdx.audio.Sound:
    public abstract long play()
    public abstract long play(float,float,float)
    public abstract long loop()
    public abstract long loop(float)
    public abstract long loop(float,float,float)
    public abstract void stop()
    public abstract void dispose()
    public abstract void stop(long)
    public abstract void setLooping(long,boolean)
    public abstract void setPitch(long,float)
    public abstract void setVolume(long,float)
    public abstract void setPan(long,float,float)
    public abstract void setPriority(long,int)
com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard
    87:90:public void initialize(com.badlogic.gdx.ApplicationListener,boolean)
    172:174:public android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean)
    191:209:public android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    270:270:public com.badlogic.gdx.ApplicationListener getApplicationListener()
    310:310:public long getJavaHeap()
    315:315:public long getNativeHeap()
    327:330:public com.badlogic.gdx.utils.Clipboard getClipboard()
    351:357:public void exit()
    368:371:public void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    385:386:public void error(java.lang.String,java.lang.String)
    395:396:public void setLogLevel(int)
    400:403:public void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
    407:410:public void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.backends.android.AndroidApplication$1:
    351:351:AndroidApplication$1(com.badlogic.gdx.backends.android.AndroidApplication)
com.badlogic.gdx.backends.android.AndroidAudio:
    79:79:public com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    146:146:public com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
com.badlogic.gdx.backends.android.AndroidAudioDevice:
    private short[] buffer
    private final boolean isMono
    private final int latency
    41:49:AndroidAudioDevice(int,boolean)
    59:59:public boolean isMono()
    64:67:public void writeSamples(short[],int,int)
    71:85:public void writeSamples(float[],int,int)
    89:89:public int getLatency()
    94:95:public void setVolume(float)
com.badlogic.gdx.backends.android.AndroidAudioRecorder:
    32:40:public AndroidAudioRecorder(int,boolean)
    50:54:public void read(short[],int,int)
com.badlogic.gdx.backends.android.AndroidClipboard:
    android.content.Context context
    27:29:protected AndroidClipboard(android.content.Context)
com.badlogic.gdx.backends.android.AndroidDaydream:
    protected android.os.Handler handler
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard
    86:89:public void initialize(com.badlogic.gdx.ApplicationListener,boolean)
    102:123:public void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    126:129:protected android.widget.FrameLayout$LayoutParams createLayoutParams()
    133:137:protected void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    140:151:protected void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    165:167:public android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean)
    184:202:public android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    261:261:public com.badlogic.gdx.ApplicationListener getApplicationListener()
    296:296:public int getVersion()
    301:301:public long getJavaHeap()
    306:306:public long getNativeHeap()
    318:321:public com.badlogic.gdx.utils.Clipboard getClipboard()
    342:348:public void exit()
    359:362:public void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    371:372:public void log(java.lang.String,java.lang.String,java.lang.Exception)
    376:377:public void error(java.lang.String,java.lang.String)
    386:387:public void setLogLevel(int)
    391:394:public void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
    398:401:public void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.backends.android.AndroidDaydream$1:
    342:342:AndroidDaydream$1(com.badlogic.gdx.backends.android.AndroidDaydream)
com.badlogic.gdx.backends.android.AndroidFileHandle:
    53:55:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    81:92:public com.badlogic.gdx.files.FileHandle[] list()
    96:117:public com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
    121:128:public boolean isDirectory()
    166:166:public long lastModified()
com.badlogic.gdx.backends.android.AndroidFiles:
    33:36:public AndroidFiles(android.content.res.AssetManager)
    45:45:public com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
    65:65:public com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
    70:71:public com.badlogic.gdx.files.FileHandle local(java.lang.String)
    81:81:public boolean isExternalStorageAvailable()
    86:86:public java.lang.String getLocalStoragePath()
    91:91:public boolean isLocalStorageAvailable()
com.badlogic.gdx.backends.android.AndroidGL10:
    36:37:public final void glActiveTexture(int)
    41:42:public final void glAlphaFunc(int,float)
    66:67:public final void glClearDepthf(float)
    71:72:public final void glClearStencil(int)
    81:82:public final void glColor4f(float,float,float,float)
    86:87:public final void glColorMask(boolean,boolean,boolean,boolean)
    103:104:public final void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    108:109:public final void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    113:114:public final void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    118:119:public final void glCullFace(int)
    128:129:public final void glDepthFunc(int)
    138:139:public final void glDepthRangef(float,float)
    173:174:public final void glFinish()
    178:179:public final void glFlush()
    183:184:public final void glFogf(int,float)
    188:189:public final void glFogfv(int,java.nio.FloatBuffer)
    193:194:public final void glFrontFace(int)
    198:199:public final void glFrustumf(float,float,float,float,float,float)
    208:208:public final int glGetError()
    223:224:public final void glHint(int,int)
    228:229:public final void glLightModelf(int,float)
    233:234:public final void glLightModelfv(int,java.nio.FloatBuffer)
    238:239:public final void glLightf(int,int,float)
    243:244:public final void glLightfv(int,int,java.nio.FloatBuffer)
    248:249:public final void glLineWidth(float)
    253:254:public final void glLoadIdentity()
    258:259:public final void glLoadMatrixf(java.nio.FloatBuffer)
    263:264:public final void glLogicOp(int)
    268:269:public final void glMaterialf(int,int,float)
    273:274:public final void glMaterialfv(int,int,java.nio.FloatBuffer)
    283:284:public final void glMultMatrixf(java.nio.FloatBuffer)
    288:289:public final void glMultiTexCoord4f(int,float,float,float,float)
    293:294:public final void glNormal3f(float,float,float)
    303:304:public final void glOrthof(float,float,float,float,float,float)
    313:314:public final void glPointSize(float)
    318:319:public final void glPolygonOffset(float,float)
    323:324:public final void glPopMatrix()
    328:329:public final void glPushMatrix()
    333:334:public final void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    338:339:public final void glRotatef(float,float,float,float)
    343:344:public final void glSampleCoverage(float,boolean)
    348:349:public final void glScalef(float,float,float)
    353:354:public final void glScissor(int,int,int,int)
    358:359:public final void glShadeModel(int)
    363:364:public final void glStencilFunc(int,int,int)
    368:369:public final void glStencilMask(int)
    373:374:public final void glStencilOp(int,int,int)
    383:384:public final void glTexEnvf(int,int,float)
    388:389:public final void glTexEnvfv(int,int,java.nio.FloatBuffer)
    405:406:public final void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    410:411:public final void glTranslatef(float,float,float)
    420:421:public final void glViewport(int,int,int,int)
    425:426:public final void glDeleteTextures(int,int[],int)
    430:431:public final void glFogfv(int,float[],int)
    435:436:public final void glGenTextures(int,int[],int)
    440:441:public final void glGetIntegerv(int,int[],int)
    445:446:public final void glLightModelfv(int,float[],int)
    450:451:public final void glLightfv(int,int,float[],int)
    460:461:public final void glMaterialfv(int,int,float[],int)
    465:466:public final void glMultMatrixf(float[],int)
    470:471:public final void glTexEnvfv(int,int,float[],int)
    476:476:public void glPolygonMode(int,int)
com.badlogic.gdx.backends.android.AndroidGL11:
    55:56:public void glClipPlanef(int,java.nio.FloatBuffer)
    60:61:public void glColor4ub(byte,byte,byte,byte)
    75:76:public void glGetBooleanv(int,java.nio.IntBuffer)
    80:81:public void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    85:86:public void glGetClipPlanef(int,java.nio.FloatBuffer)
    90:91:public void glGetFloatv(int,java.nio.FloatBuffer)
    95:96:public void glGetLightfv(int,int,java.nio.FloatBuffer)
    100:101:public void glGetMaterialfv(int,int,java.nio.FloatBuffer)
    105:106:public void glGetPointerv(int,java.nio.Buffer[])
    110:111:public void glGetTexEnviv(int,int,java.nio.IntBuffer)
    115:116:public void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    120:121:public void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    125:125:public boolean glIsBuffer(int)
    130:130:public boolean glIsEnabled(int)
    135:135:public boolean glIsTexture(int)
    140:141:public void glPointParameterf(int,float)
    145:146:public void glPointParameterfv(int,java.nio.FloatBuffer)
    150:151:public void glPointSizePointerOES(int,int,java.nio.Buffer)
    155:156:public void glTexEnvi(int,int,int)
    160:161:public void glTexEnviv(int,int,java.nio.IntBuffer)
    165:166:public void glTexParameterfv(int,int,java.nio.FloatBuffer)
    170:171:public void glTexParameteri(int,int,int)
    175:176:public void glTexParameteriv(int,int,java.nio.IntBuffer)
    180:181:public void glClipPlanef(int,float[],int)
    185:186:public void glDeleteBuffers(int,int[],int)
    190:191:public void glGenBuffers(int,int[],int)
    195:196:public void glGetBooleanv(int,boolean[],int)
    200:201:public void glGetBufferParameteriv(int,int,int[],int)
    205:206:public void glGetClipPlanef(int,float[],int)
    210:211:public void glGetFloatv(int,float[],int)
    215:216:public void glGetLightfv(int,int,float[],int)
    220:221:public void glGetMaterialfv(int,int,float[],int)
    225:226:public void glGetTexEnviv(int,int,int[],int)
    230:231:public void glGetTexParameterfv(int,int,float[],int)
    235:236:public void glGetTexParameteriv(int,int,int[],int)
    240:241:public void glPointParameterfv(int,float[],int)
    245:246:public void glTexEnviv(int,int,int[],int)
    250:251:public void glTexParameterfv(int,int,float[],int)
    255:256:public void glTexParameteriv(int,int,int[],int)
com.badlogic.gdx.backends.android.AndroidGL20:
    public native void glActiveTexture(int)
    public native void glBindAttribLocation(int,int,java.lang.String)
    public native void glBlendColor(float,float,float,float)
    public native void glBlendEquation(int)
    public native void glBlendEquationSeparate(int,int)
    public native void glBlendFuncSeparate(int,int,int,int)
    public native void glClearDepthf(float)
    public native void glClearStencil(int)
    public native void glColorMask(boolean,boolean,boolean,boolean)
    public native void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public native void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public native void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public native void glCullFace(int)
    public native void glDepthFunc(int)
    public native void glDepthRangef(float,float)
    public native void glDetachShader(int,int)
    public native void glFinish()
    public native void glFlush()
    public native void glFrontFace(int)
    public native void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public native void glGetBooleanv(int,java.nio.Buffer)
    public native void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public native int glGetError()
    public native void glGetFloatv(int,java.nio.FloatBuffer)
    public native void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public native void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public native void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public native void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String)
    public native void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public native void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public native void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public native void glGetUniformiv(int,int,java.nio.IntBuffer)
    public native void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public native void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public native void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public native void glHint(int,int)
    public native boolean glIsBuffer(int)
    public native boolean glIsEnabled(int)
    public native boolean glIsFramebuffer(int)
    public native boolean glIsProgram(int)
    public native boolean glIsRenderbuffer(int)
    public native boolean glIsShader(int)
    public native boolean glIsTexture(int)
    public native void glLineWidth(float)
    public native void glPolygonOffset(float,float)
    public native void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    public native void glReleaseShaderCompiler()
    public native void glSampleCoverage(float,boolean)
    public native void glScissor(int,int,int,int)
    public native void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public native void glStencilFunc(int,int,int)
    public native void glStencilFuncSeparate(int,int,int,int)
    public native void glStencilMask(int)
    public native void glStencilMaskSeparate(int,int)
    public native void glStencilOp(int,int,int)
    public native void glStencilOpSeparate(int,int,int,int)
    public native void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public native void glTexParameteri(int,int,int)
    public native void glTexParameteriv(int,int,java.nio.IntBuffer)
    public native void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public native void glUniform1f(int,float)
    public native void glUniform1fv(int,int,java.nio.FloatBuffer)
    public native void glUniform1iv(int,int,java.nio.IntBuffer)
    public native void glUniform2f(int,float,float)
    public native void glUniform2fv(int,int,java.nio.FloatBuffer)
    public native void glUniform2i(int,int,int)
    public native void glUniform2iv(int,int,java.nio.IntBuffer)
    public native void glUniform3f(int,float,float,float)
    public native void glUniform3fv(int,int,java.nio.FloatBuffer)
    public native void glUniform3i(int,int,int,int)
    public native void glUniform3iv(int,int,java.nio.IntBuffer)
    public native void glUniform4f(int,float,float,float,float)
    public native void glUniform4fv(int,int,java.nio.FloatBuffer)
    public native void glUniform4i(int,int,int,int,int)
    public native void glUniform4iv(int,int,java.nio.IntBuffer)
    public native void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public native void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public native void glValidateProgram(int)
    public native void glVertexAttrib1f(int,float)
    public native void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib2f(int,float,float)
    public native void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib3f(int,float,float,float)
    public native void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib4f(int,float,float,float,float)
    public native void glVertexAttrib4fv(int,java.nio.FloatBuffer)
    public native void glViewport(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGraphics:
    264:264:public boolean isGL11Available()
    274:274:private static boolean isPowerOfTwo(int)
    531:531:public float getRawDeltaTime()
    537:537:public com.badlogic.gdx.Graphics$GraphicsType getType()
    543:543:public int getFramesPerSecond()
    565:565:public com.badlogic.gdx.graphics.GLCommon getGLCommon()
    570:570:public float getPpiX()
    575:575:public float getPpiY()
    580:580:public float getPpcX()
    585:585:public float getPpcY()
    590:590:public float getDensity()
    595:595:public boolean supportsDisplayModeChange()
    600:600:public boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    605:605:public com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    610:610:public boolean setDisplayMode(int,int,boolean)
    616:616:public void setTitle(java.lang.String)
    626:628:public com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode()
    633:633:public com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    638:638:public void setVSync(boolean)
    671:671:public boolean isFullscreen()
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode:
    final synthetic com.badlogic.gdx.backends.android.AndroidGraphics this$0
    619:621:protected AndroidGraphics$AndroidDisplayMode(com.badlogic.gdx.backends.android.AndroidGraphics,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream:
    private final com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config
    106:113:public AndroidGraphicsDaydream(com.badlogic.gdx.backends.android.AndroidDaydream,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    116:132:private void setPreserveContext(android.view.View)
    135:172:private android.view.View createGLSurfaceView(android.service.dreams.DreamService,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    178:178:private android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser()
    194:208:private boolean checkGL20()
    244:244:public boolean isGL11Available()
    254:254:private static boolean isPowerOfTwo(int)
    511:511:public float getRawDeltaTime()
    517:517:public com.badlogic.gdx.Graphics$GraphicsType getType()
    523:523:public int getFramesPerSecond()
    539:539:public android.view.View getView()
    545:545:public com.badlogic.gdx.graphics.GLCommon getGLCommon()
    550:550:public float getPpiX()
    555:555:public float getPpiY()
    560:560:public float getPpcX()
    565:565:public float getPpcY()
    570:570:public float getDensity()
    575:575:public boolean supportsDisplayModeChange()
    580:580:public boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    585:585:public com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    590:590:public boolean setDisplayMode(int,int,boolean)
    596:596:public void setTitle(java.lang.String)
    606:608:public com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode()
    613:613:public com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    618:618:public void setVSync(boolean)
    651:651:public boolean isFullscreen()
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1:
    final synthetic com.badlogic.gdx.backends.android.AndroidGraphicsDaydream this$0
    151:151:AndroidGraphicsDaydream$1(com.badlogic.gdx.backends.android.AndroidGraphicsDaydream,android.content.Context,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode:
    final synthetic com.badlogic.gdx.backends.android.AndroidGraphicsDaydream this$0
    599:601:protected AndroidGraphicsDaydream$AndroidDisplayMode(com.badlogic.gdx.backends.android.AndroidGraphicsDaydream,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper:
    protected android.opengl.GLU glu
    private final com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config
    protected boolean isContinuous
    97:102:public AndroidGraphicsLiveWallpaper(com.badlogic.gdx.backends.android.AndroidLiveWallpaper,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    108:124:private void setPreserveContext(java.lang.Object)
    144:208:private android.view.View createGLSurfaceView(android.content.Context,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    247:247:private android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser()
    288:302:protected boolean checkGL20()
    338:338:public boolean isGL11Available()
    348:348:private static boolean isPowerOfTwo(int)
    518:531:void pause()
    535:547:void destroy()
    658:658:public float getRawDeltaTime()
    664:664:public com.badlogic.gdx.Graphics$GraphicsType getType()
    670:670:public int getFramesPerSecond()
    690:690:public android.view.View getView()
    696:696:public com.badlogic.gdx.graphics.GLCommon getGLCommon()
    701:701:public float getPpiX()
    706:706:public float getPpiY()
    711:711:public float getPpcX()
    716:716:public float getPpcY()
    721:721:public float getDensity()
    726:726:public boolean supportsDisplayModeChange()
    731:731:public boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    736:736:public com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    741:741:public boolean setDisplayMode(int,int,boolean)
    747:747:public void setTitle(java.lang.String)
    757:759:public com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode()
    764:764:public com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    769:769:public void setVSync(boolean)
    779:789:public void setContinuousRendering(boolean)
    792:792:public boolean isContinuousRendering()
    808:808:public boolean isFullscreen()
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1:
    147:147:AndroidGraphicsLiveWallpaper$1(com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper,android.content.Context,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    154:155:public void onDestroy()
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2:
    171:171:AndroidGraphicsLiveWallpaper$2(com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper,android.content.Context,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    184:185:public void onDestroy()
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$3:
    195:195:AndroidGraphicsLiveWallpaper$3(com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper,android.content.Context,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode:
    final synthetic com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0
    750:752:protected AndroidGraphicsLiveWallpaper$AndroidDisplayMode(com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidInput:
    final boolean hasMultitouch
    private java.lang.String text
    private com.badlogic.gdx.Input$TextInputListener textListener
    protected final android.os.Vibrator vibrator
    private float azimuth
    private float pitch
    private float roll
    private float inclination
    private final com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard
    final float[] R
    final float[] orientation
    132:170:public AndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    174:174:public float getAccelerometerX()
    179:179:public float getAccelerometerY()
    184:184:public float getAccelerometerZ()
    189:231:public void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    234:266:public void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    270:272:public int getX()
    277:279:public int getY()
    284:286:public int getX(int)
    291:293:public int getY(int)
    418:419:public void onTap(int,int)
    425:426:public void onDrop(int,int)
    429:447:protected void postTap(int,int)
    543:544:public void setCatchBackKey(boolean)
    548:549:public void setCatchMenuKey(boolean)
    553:554:public void vibrate(int)
    558:559:public void vibrate(long[],int)
    563:564:public void cancelVibrate()
    568:568:public boolean justTouched()
    583:589:private void updateOrientation()
    597:598:public void getRotationMatrix(float[])
    602:605:public float getAzimuth()
    610:613:public float getPitch()
    618:621:public float getRoll()
    672:672:public com.badlogic.gdx.InputProcessor getInputProcessor()
    677:683:public boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    714:732:public int getRotation()
    738:738:public com.badlogic.gdx.Input$Orientation getNativeOrientation()
    743:743:public void setCursorCatched(boolean)
    747:747:public boolean isCursorCatched()
    752:752:public int getDeltaX()
    757:757:public int getDeltaX(int)
    762:762:public int getDeltaY()
    767:767:public int getDeltaY(int)
    772:772:public void setCursorPosition(int,int)
    780:781:public void addKeyListener(android.view.View$OnKeyListener)
com.badlogic.gdx.backends.android.AndroidInput$1:
    final synthetic com.badlogic.gdx.backends.android.AndroidInput this$0
    79:79:AndroidInput$1(com.badlogic.gdx.backends.android.AndroidInput,int,int)
com.badlogic.gdx.backends.android.AndroidInput$2:
    final synthetic com.badlogic.gdx.backends.android.AndroidInput this$0
    85:85:AndroidInput$2(com.badlogic.gdx.backends.android.AndroidInput,int,int)
com.badlogic.gdx.backends.android.AndroidInput$3:
    189:189:AndroidInput$3(com.badlogic.gdx.backends.android.AndroidInput,java.lang.String,java.lang.String,com.badlogic.gdx.Input$TextInputListener)
com.badlogic.gdx.backends.android.AndroidInput$4:
    234:234:AndroidInput$4(com.badlogic.gdx.backends.android.AndroidInput,java.lang.String,java.lang.String,com.badlogic.gdx.Input$TextInputListener)
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    static final int KEY_DOWN
    static final int KEY_UP
    static final int KEY_TYPED
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    static final int TOUCH_DOWN
    static final int TOUCH_UP
    static final int TOUCH_DRAGGED
com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    22:29:public AndroidInputThreePlus(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    39:40:public void addGenericMotionListener(android.view.View$OnGenericMotionListener)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper:
    protected com.badlogic.gdx.backends.android.AndroidNet net
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard
    92:110:public void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    184:226:public void onDestroy()
    233:233:public com.badlogic.gdx.backends.android.AndroidLiveWallpaperService getService()
    237:237:public com.badlogic.gdx.ApplicationListener getListener()
    249:249:public com.badlogic.gdx.Audio getAudio()
    254:254:public com.badlogic.gdx.Files getFiles()
    264:264:public com.badlogic.gdx.Input getInput()
    269:269:public com.badlogic.gdx.Net getNet()
    279:279:public int getVersion()
    284:284:public long getJavaHeap()
    289:289:public long getNativeHeap()
    301:304:public com.badlogic.gdx.utils.Clipboard getClipboard()
    316:319:public void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    328:329:public void log(java.lang.String,java.lang.String,java.lang.Exception)
    333:334:public void error(java.lang.String,java.lang.String)
    343:344:public void setLogLevel(int)
    349:349:public void exit()
    353:356:public void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
    360:363:public void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
    367:367:public com.badlogic.gdx.ApplicationListener getApplicationListener()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService:
    static final java.lang.String TAG
    135:139:public void onCreate()
    148:151:public android.service.wallpaper.WallpaperService$Engine onCreateEngine()
    170:173:public void initialize(com.badlogic.gdx.ApplicationListener,boolean)
    188:196:public void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    244:255:public void onDestroy()
    269:269:public com.badlogic.gdx.backends.android.AndroidLiveWallpaper getLiveWallpaper()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine:
    297:299:public AndroidLiveWallpaperService$AndroidWallpaperEngine(com.badlogic.gdx.backends.android.AndroidLiveWallpaperService)
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler:
    94:112:private void logAction(int,int)
    125:125:public boolean supportsMultitouch(android.content.Context)
com.badlogic.gdx.backends.android.AndroidMusic:
    59:59:public boolean isLooping()
    91:92:public void setLooping(boolean)
    96:98:public void setVolume(float)
    102:102:public float getVolume()
    107:118:public void setPan(float,float)
    122:127:public void stop()
    131:131:public float getPosition()
    136:137:public void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener)
com.badlogic.gdx.backends.android.AndroidNet:
    77:78:public void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    82:82:public com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
    87:87:public com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
    92:103:public void openURI(java.lang.String)
com.badlogic.gdx.backends.android.AndroidNet$1:
    97:97:AndroidNet$1(com.badlogic.gdx.backends.android.AndroidNet,android.net.Uri)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard:
    final com.badlogic.gdx.backends.android.AndroidInput input
    59:63:public AndroidOnscreenKeyboard(android.content.Context,android.os.Handler,com.badlogic.gdx.backends.android.AndroidInput)
    122:167:public void setVisible(boolean)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2:
    127:127:AndroidOnscreenKeyboard$2(com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard)
com.badlogic.gdx.backends.android.AndroidPreferences:
    49:51:public void putLong(java.lang.String,long)
    55:57:public void putFloat(java.lang.String,float)
    61:63:public void putString(java.lang.String,java.lang.String)
    67:75:public void put(java.util.Map)
    79:79:public boolean getBoolean(java.lang.String)
    84:84:public int getInteger(java.lang.String)
    89:89:public long getLong(java.lang.String)
    94:94:public float getFloat(java.lang.String)
    99:99:public java.lang.String getString(java.lang.String)
    114:114:public long getLong(java.lang.String,long)
    119:119:public float getFloat(java.lang.String,float)
    124:124:public java.lang.String getString(java.lang.String,java.lang.String)
    129:129:public java.util.Map get()
    134:134:public boolean contains(java.lang.String)
    139:141:public void clear()
    153:155:public void remove(java.lang.String)
com.badlogic.gdx.backends.android.AndroidServerSocket:
    private com.badlogic.gdx.Net$Protocol protocol
    42:70:public AndroidServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
    74:74:public com.badlogic.gdx.Net$Protocol getProtocol()
    80:83:public com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints)
com.badlogic.gdx.backends.android.AndroidSingleTouchHandler:
    75:75:public boolean supportsMultitouch(android.content.Context)
com.badlogic.gdx.backends.android.AndroidSocket:
    39:57:public AndroidSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
    59:62:public AndroidSocket(java.net.Socket,com.badlogic.gdx.net.SocketHints)
    65:81:private void applyHints(com.badlogic.gdx.net.SocketHints)
    85:89:public boolean isConnected()
    96:99:public java.io.InputStream getInputStream()
    106:109:public java.io.OutputStream getOutputStream()
com.badlogic.gdx.backends.android.AndroidSound:
    44:44:public long play()
    59:61:public void stop()
    65:66:public void stop(long)
    70:71:public void setPitch(long,float)
    75:76:public void setVolume(long,float)
    80:80:public long loop()
    85:91:public long loop(float)
    96:97:public void setLooping(long,boolean)
    101:111:public void setPan(long,float,float)
    115:128:public long play(float,float,float)
    133:146:public long loop(float,float,float)
    151:152:public void setPriority(long,int)
com.badlogic.gdx.backends.android.AndroidTouchHandler:
    public abstract boolean supportsMultitouch(android.content.Context)
com.badlogic.gdx.backends.android.InputProcessorLW:
    public abstract void touchDrop(int,int)
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView:
    28:30:public DefaultGLSurfaceView(android.content.Context,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    33:35:public DefaultGLSurfaceView(android.content.Context,android.util.AttributeSet,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW:
    final com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy
    28:30:public DefaultGLSurfaceViewLW(android.service.wallpaper.WallpaperService$Engine,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    34:36:public DefaultGLSurfaceViewLW(android.service.wallpaper.WallpaperService$Engine,android.util.AttributeSet,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper:
    34:39:public EGLLogWrapper(javax.microedition.khronos.egl.EGL,int,java.io.Writer)
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy:
    24:27:public FixedResolutionStrategy(int,int)
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView:
    private static final boolean LOG_THREADS
    private static final boolean LOG_SURFACE
    private static final boolean LOG_RENDERER
    private static final boolean DRAW_TWICE_AFTER_SIZE_CHANGED
    public static final int RENDERMODE_WHEN_DIRTY
    public static final int RENDERMODE_CONTINUOUSLY
    public static final int DEBUG_CHECK_GL_ERROR
    public static final int DEBUG_LOG_GL_CALLS
    163:165:public GLBaseSurfaceView(android.content.Context)
    169:171:public GLBaseSurfaceView(android.content.Context,android.util.AttributeSet)
    176:178:private void init()
    189:190:public void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper)
    252:254:public void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory)
    262:264:public void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory)
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW:
    private final java.lang.String TAG
    private static final boolean LOG_VIEW
    private static final boolean LOG_THREADS
    private static final boolean LOG_SURFACE
    private static final boolean LOG_RENDERER
    private static final boolean DRAW_TWICE_AFTER_SIZE_CHANGED
    public static final int RENDERMODE_WHEN_DIRTY
    public static final int RENDERMODE_CONTINUOUSLY
    public static final int DEBUG_CHECK_GL_ERROR
    public static final int DEBUG_LOG_GL_CALLS
    183:186:public GLBaseSurfaceViewLW(android.service.wallpaper.WallpaperService$Engine)
    191:194:public GLBaseSurfaceViewLW(android.service.wallpaper.WallpaperService$Engine,android.util.AttributeSet)
    200:203:private void init()
    222:223:public void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper)
    233:234:public void setDebugFlags(int)
    241:241:public int getDebugFlags()
    270:282:public void setRenderer(android.opengl.GLSurfaceView$Renderer)
    293:295:public void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory)
    305:307:public void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory)
    319:321:public void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser)
    335:336:public void setEGLConfigChooser(boolean)
    349:350:public void setEGLConfigChooser(int,int,int,int,int,int)
    367:368:public void setRenderMode(int)
    377:377:public int getRenderMode()
    386:387:public void requestRender()
    439:440:public void onPause()
    453:454:public void onResume()
    462:463:public void queueEvent(java.lang.Runnable)
    471:472:public void onDestroy()
    1195:1198:private void checkRenderThreadState()
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser:
    579:581:public GLBaseSurfaceViewLW$BaseConfigChooser(int[])
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser:
    609:620:public GLBaseSurfaceViewLW$ComponentSizeChooser(int,int,int,int,int,int)
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread:
    822:829:GLBaseSurfaceViewLW$GLThread(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW,android.opengl.GLSurfaceView$Renderer)
    1010:1017:public void setRenderMode(int)
    1020:1022:public int getRenderMode()
    1026:1030:public void requestRender()
    1060:1067:public void onPause()
    1070:1078:public void onResume()
    1111:1125:public void requestExitAndWait()
    1132:1139:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager:
    final synthetic com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0
    1200:1200:GLBaseSurfaceViewLW$GLThreadManager(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW)
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser:
    668:674:public GLBaseSurfaceViewLW$SimpleEGLConfigChooser(boolean)
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper:
    public static final int CONFIG_CHECK_GL_ERROR
    public static final int CONFIG_CHECK_THREAD
    public static final int CONFIG_LOG_ARGUMENT_NAMES
    public static final int ERROR_WRONG_THREAD
    72:75:public static javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer)
com.badlogic.gdx.backends.android.surfaceview.GLException:
    40:40:int getError()
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper:
    private static final int FORMAT_INT
    private static final int FORMAT_FLOAT
    private static final int FORMAT_FIXED
    248:264:public static java.lang.String getErrorString(int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    private static final boolean DEBUG
    56:60:public GLSurfaceView20(android.content.Context,boolean,int,int,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    222:228:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    231:262:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW:
    private static final boolean DEBUG
    final com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy
    47:50:public GLSurfaceView20LW(android.service.wallpaper.WallpaperService$Engine,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    53:57:public GLSurfaceView20LW(android.service.wallpaper.WallpaperService$Engine,boolean,int,int,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    66:84:private void init(boolean,int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser:
    116:123:public GLSurfaceView20LW$ConfigChooser(int,int,int,int,int,int)
    190:196:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    199:230:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake:
    public static final int RENDERMODE_WHEN_DIRTY
    public static final int RENDERMODE_CONTINUOUSLY
    public static final int DEBUG_CHECK_GL_ERROR
    public static final int DEBUG_LOG_GL_CALLS
    private int mDebugFlags
    169:172:public GLSurfaceViewCupcake(android.content.Context,android.util.AttributeSet,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    198:199:public void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper)
    207:208:public void setDebugFlags(int)
    213:213:public int getDebugFlags()
    271:272:public void setEGLConfigChooser(boolean)
    309:309:public int getRenderMode()
    382:385:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread:
    757:759:public int getRenderMode()
    822:825:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase:
    331:331:public void glBindFramebufferOES(int,int)
    335:335:public void glBindRenderbufferOES(int,int)
    339:339:public void glBlendEquation(int)
    343:343:public void glBlendEquationSeparate(int,int)
    347:347:public void glBlendFuncSeparate(int,int,int,int)
    351:351:int glCheckFramebufferStatusOES(int)
    355:355:public void glCompressedTexImage2D(int,int,int,int,int,int,int)
    359:359:public void glDeleteFramebuffersOES(int,int[],int)
    363:363:public void glDeleteFramebuffersOES(int,java.nio.IntBuffer)
    367:367:public void glDeleteRenderbuffersOES(int,int[],int)
    371:371:public void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)
    375:375:public void glFramebufferRenderbufferOES(int,int,int,int)
    379:379:public void glFramebufferTexture2DOES(int,int,int,int,int)
    383:383:public void glGenerateMipmapOES(int)
    387:387:public void glGenFramebuffersOES(int,int[],int)
    391:391:public void glGenFramebuffersOES(int,java.nio.IntBuffer)
    395:395:public void glGenRenderbuffersOES(int,int[],int)
    399:399:public void glGenRenderbuffersOES(int,java.nio.IntBuffer)
    403:403:public void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)
    407:407:public void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)
    411:411:public void glGetRenderbufferParameterivOES(int,int,int[],int)
    415:415:public void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)
    419:419:public void glGetTexGenfv(int,int,float[],int)
    423:423:public void glGetTexGenfv(int,int,java.nio.FloatBuffer)
    427:427:public void glGetTexGeniv(int,int,int[],int)
    431:431:public void glGetTexGeniv(int,int,java.nio.IntBuffer)
    435:435:public void glGetTexGenxv(int,int,int[],int)
    439:439:public void glGetTexGenxv(int,int,java.nio.IntBuffer)
    443:443:public boolean glIsFramebufferOES(int)
    447:447:public boolean glIsRenderbufferOES(int)
    451:451:public void glRenderbufferStorageOES(int,int,int,int)
    455:455:public void glTexGenf(int,int,float)
    459:459:public void glTexGenfv(int,int,float[],int)
    463:463:public void glTexGenfv(int,int,java.nio.FloatBuffer)
    467:467:public void glTexGeni(int,int,int)
    471:471:public void glTexGeniv(int,int,int[],int)
    475:475:public void glTexGeniv(int,int,java.nio.IntBuffer)
    479:479:public void glTexGenx(int,int,int)
    483:483:public void glTexGenxv(int,int,int[],int)
    487:487:public void glTexGenxv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    private static final int EGL_OPENGL_ES2_BIT
    public static final int EGL_COVERAGE_BUFFERS_NV
    public static final int EGL_COVERAGE_SAMPLES_NV
    private static final java.lang.String TAG
    163:169:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    172:207:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy:
    29:31:public RatioResolutionStrategy(float)
    33:35:public RatioResolutionStrategy(float,float)
com.badlogic.gdx.files.FileHandle:
    65:68:public FileHandle(java.io.File)
    147:147:public java.io.BufferedInputStream read(int)
    153:153:public java.io.Reader reader()
    160:162:public java.io.Reader reader(java.lang.String)
    169:169:public java.io.BufferedReader reader(int)
    176:178:public java.io.BufferedReader reader(int,java.lang.String)
    263:279:public int readBytes(byte[],int,int)
    287:295:public java.io.OutputStream write(boolean)
    305:327:public void write(java.io.InputStream,boolean)
    334:334:public java.io.Writer writer(boolean)
    343:355:public java.io.Writer writer(boolean,java.lang.String)
    364:365:public void writeString(java.lang.String,boolean)
    373:385:public void writeString(java.lang.String,boolean,java.lang.String)
    392:403:public void writeBytes(byte[],boolean)
    410:421:public void writeBytes(byte[],int,int,boolean)
    428:434:public com.badlogic.gdx.files.FileHandle[] list()
    442:458:public com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
    465:466:public boolean isDirectory()
    481:482:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    498:501:public void mkdirs()
    519:521:public boolean delete()
    527:529:public boolean deleteDirectory()
    535:536:public void emptyDirectory()
    541:544:public void emptyDirectory(boolean)
    555:569:public void copyTo(com.badlogic.gdx.files.FileHandle)
    575:580:public void moveTo(com.badlogic.gdx.files.FileHandle)
    605:605:public long lastModified()
    614:616:public static com.badlogic.gdx.files.FileHandle tempFile(java.lang.String)
    622:627:public static com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String)
    632:645:private static void emptyDirectory(java.io.File,boolean)
    648:649:private static boolean deleteDirectory(java.io.File)
    654:659:private static void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    662:672:private static void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.files.FileHandleStream:
    31:32:public FileHandleStream(java.lang.String)
    35:35:public boolean isDirectory()
    51:51:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    63:63:public java.io.OutputStream write(boolean)
    67:67:public com.badlogic.gdx.files.FileHandle[] list()
    71:71:public void mkdirs()
    75:75:public boolean delete()
    79:79:public boolean deleteDirectory()
    83:83:public void copyTo(com.badlogic.gdx.files.FileHandle)
    87:87:public void moveTo(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.Camera:
    public abstract void update(boolean)
    78:82:public void apply(com.badlogic.gdx.graphics.GL10)
    89:91:public void lookAt(float,float,float)
    96:98:public void lookAt(com.badlogic.gdx.math.Vector3)
    103:105:public void normalizeUp()
    115:117:public void rotate(float,float,float,float)
    134:136:public void rotate(com.badlogic.gdx.math.Matrix4)
    143:145:public void rotate(com.badlogic.gdx.math.Quaternion)
    166:168:public void transform(com.badlogic.gdx.math.Matrix4)
    215:216:public void unproject(com.badlogic.gdx.math.Vector3)
    224:225:public void project(com.badlogic.gdx.math.Vector3)
    240:244:public void project(com.badlogic.gdx.math.Vector3,float,float,float,float)
    256:259:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float,float,float,float,float)
    270:270:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float)
com.badlogic.gdx.graphics.Color:
    51:53:public Color(int)
    92:96:public com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color)
    104:108:public com.badlogic.gdx.graphics.Color mul(float)
    116:120:public com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color)
    128:132:public com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color)
    167:168:public com.badlogic.gdx.graphics.Color set(int)
    173:177:public com.badlogic.gdx.graphics.Color add(float,float,float,float)
    182:186:public com.badlogic.gdx.graphics.Color sub(float,float,float,float)
    191:195:public com.badlogic.gdx.graphics.Color mul(float,float,float,float)
    204:208:public com.badlogic.gdx.graphics.Color lerp(com.badlogic.gdx.graphics.Color,float)
    220:224:public com.badlogic.gdx.graphics.Color lerp(float,float,float,float,float)
    287:289:public static float toFloatBits(int,int,int,int)
    296:297:public static float toFloatBits(float,float,float,float)
    308:308:public static int toIntBits(int,int,int,int)
    312:312:public static int alpha(float)
    316:316:public static int luminanceAlpha(float,float)
    320:320:public static int rgb565(float,float,float)
    324:324:public static int rgba4444(float,float,float,float)
    328:328:public static int rgb888(float,float,float)
    336:336:public static int rgb565(com.badlogic.gdx.graphics.Color)
    340:340:public static int rgba4444(com.badlogic.gdx.graphics.Color)
    344:344:public static int rgb888(com.badlogic.gdx.graphics.Color)
    348:348:public static int rgba8888(com.badlogic.gdx.graphics.Color)
    357:360:public static void rgb565ToColor(com.badlogic.gdx.graphics.Color,int)
    368:372:public static void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int)
    380:383:public static void rgb888ToColor(com.badlogic.gdx.graphics.Color,int)
    391:395:public static void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int)
    401:401:public com.badlogic.gdx.graphics.Color tmp()
com.badlogic.gdx.graphics.FPSLogger:
    34:38:public void log()
com.badlogic.gdx.graphics.GL10:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_OES_read_format
    public static final int GL_OES_compressed_paletted_texture
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_FOG
    public static final int GL_LIGHTING
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_ALPHA_TEST
    public static final int GL_BLEND
    public static final int GL_COLOR_LOGIC_OP
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_POINT_SMOOTH
    public static final int GL_LINE_SMOOTH
    public static final int GL_SCISSOR_TEST
    public static final int GL_COLOR_MATERIAL
    public static final int GL_NORMALIZE
    public static final int GL_RESCALE_NORMAL
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_VERTEX_ARRAY
    public static final int GL_NORMAL_ARRAY
    public static final int GL_COLOR_ARRAY
    public static final int GL_TEXTURE_COORD_ARRAY
    public static final int GL_MULTISAMPLE
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_ALPHA_TO_ONE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_STACK_OVERFLOW
    public static final int GL_STACK_UNDERFLOW
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_EXP
    public static final int GL_EXP2
    public static final int GL_FOG_DENSITY
    public static final int GL_FOG_START
    public static final int GL_FOG_END
    public static final int GL_FOG_MODE
    public static final int GL_FOG_COLOR
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_SMOOTH_POINT_SIZE_RANGE
    public static final int GL_SMOOTH_LINE_WIDTH_RANGE
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
    public static final int GL_MAX_LIGHTS
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_MODELVIEW_STACK_DEPTH
    public static final int GL_MAX_PROJECTION_STACK_DEPTH
    public static final int GL_MAX_TEXTURE_STACK_DEPTH
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_PERSPECTIVE_CORRECTION_HINT
    public static final int GL_POINT_SMOOTH_HINT
    public static final int GL_LINE_SMOOTH_HINT
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_FOG_HINT
    public static final int GL_LIGHT_MODEL_AMBIENT
    public static final int GL_LIGHT_MODEL_TWO_SIDE
    public static final int GL_AMBIENT
    public static final int GL_DIFFUSE
    public static final int GL_SPECULAR
    public static final int GL_POSITION
    public static final int GL_SPOT_DIRECTION
    public static final int GL_SPOT_EXPONENT
    public static final int GL_SPOT_CUTOFF
    public static final int GL_CONSTANT_ATTENUATION
    public static final int GL_LINEAR_ATTENUATION
    public static final int GL_QUADRATIC_ATTENUATION
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_FLOAT
    public static final int GL_CLEAR
    public static final int GL_AND
    public static final int GL_AND_REVERSE
    public static final int GL_COPY
    public static final int GL_AND_INVERTED
    public static final int GL_NOOP
    public static final int GL_XOR
    public static final int GL_OR
    public static final int GL_NOR
    public static final int GL_EQUIV
    public static final int GL_INVERT
    public static final int GL_OR_REVERSE
    public static final int GL_COPY_INVERTED
    public static final int GL_OR_INVERTED
    public static final int GL_NAND
    public static final int GL_SET
    public static final int GL_EMISSION
    public static final int GL_SHININESS
    public static final int GL_AMBIENT_AND_DIFFUSE
    public static final int GL_MODELVIEW
    public static final int GL_PROJECTION
    public static final int GL_TEXTURE
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FLAT
    public static final int GL_SMOOTH
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_MODULATE
    public static final int GL_DECAL
    public static final int GL_ADD
    public static final int GL_TEXTURE_ENV_MODE
    public static final int GL_TEXTURE_ENV_COLOR
    public static final int GL_TEXTURE_ENV
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_PALETTE4_RGB8_OES
    public static final int GL_PALETTE4_RGBA8_OES
    public static final int GL_PALETTE4_R5_G6_B5_OES
    public static final int GL_PALETTE4_RGBA4_OES
    public static final int GL_PALETTE4_RGB5_A1_OES
    public static final int GL_PALETTE8_RGB8_OES
    public static final int GL_PALETTE8_RGBA8_OES
    public static final int GL_PALETTE8_R5_G6_B5_OES
    public static final int GL_PALETTE8_RGBA4_OES
    public static final int GL_PALETTE8_RGB5_A1_OES
    public static final int GL_LIGHT0
    public static final int GL_LIGHT1
    public static final int GL_LIGHT2
    public static final int GL_LIGHT3
    public static final int GL_LIGHT4
    public static final int GL_LIGHT5
    public static final int GL_LIGHT6
    public static final int GL_LIGHT7
    public static final int GL_POINT
    public static final int GL_LINE
    public static final int GL_FILL
    public abstract void glAlphaFunc(int,float)
    public abstract void glColor4f(float,float,float,float)
    public abstract void glDeleteTextures(int,int[],int)
    public abstract void glFogf(int,float)
    public abstract void glFogfv(int,float[],int)
    public abstract void glFogfv(int,java.nio.FloatBuffer)
    public abstract void glFrustumf(float,float,float,float,float,float)
    public abstract void glGenTextures(int,int[],int)
    public abstract void glGetIntegerv(int,int[],int)
    public abstract void glLightModelf(int,float)
    public abstract void glLightModelfv(int,float[],int)
    public abstract void glLightModelfv(int,java.nio.FloatBuffer)
    public abstract void glLightf(int,int,float)
    public abstract void glLightfv(int,int,float[],int)
    public abstract void glLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glLoadIdentity()
    public abstract void glLoadMatrixf(java.nio.FloatBuffer)
    public abstract void glLogicOp(int)
    public abstract void glMaterialf(int,int,float)
    public abstract void glMaterialfv(int,int,float[],int)
    public abstract void glMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glMultMatrixf(float[],int)
    public abstract void glMultMatrixf(java.nio.FloatBuffer)
    public abstract void glMultiTexCoord4f(int,float,float,float,float)
    public abstract void glNormal3f(float,float,float)
    public abstract void glOrthof(float,float,float,float,float,float)
    public abstract void glPointSize(float)
    public abstract void glPopMatrix()
    public abstract void glPushMatrix()
    public abstract void glRotatef(float,float,float,float)
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glScalef(float,float,float)
    public abstract void glShadeModel(int)
    public abstract void glTexEnvf(int,int,float)
    public abstract void glTexEnvfv(int,int,float[],int)
    public abstract void glTexEnvfv(int,int,java.nio.FloatBuffer)
    public abstract void glTranslatef(float,float,float)
    public abstract void glPolygonMode(int,int)
com.badlogic.gdx.graphics.GL11:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_VERSION_ES_CM_1_0
    public static final int GL_VERSION_ES_CL_1_0
    public static final int GL_VERSION_ES_CM_1_1
    public static final int GL_VERSION_ES_CL_1_1
    public static final int GL_CLIP_PLANE0
    public static final int GL_CLIP_PLANE1
    public static final int GL_CLIP_PLANE2
    public static final int GL_CLIP_PLANE3
    public static final int GL_CLIP_PLANE4
    public static final int GL_CLIP_PLANE5
    public static final int GL_CURRENT_COLOR
    public static final int GL_CURRENT_NORMAL
    public static final int GL_CURRENT_TEXTURE_COORDS
    public static final int GL_POINT_SIZE
    public static final int GL_POINT_SIZE_MIN
    public static final int GL_POINT_SIZE_MAX
    public static final int GL_POINT_FADE_THRESHOLD_SIZE
    public static final int GL_POINT_DISTANCE_ATTENUATION
    public static final int GL_LINE_WIDTH
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_SHADE_MODEL
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_MATRIX_MODE
    public static final int GL_VIEWPORT
    public static final int GL_MODELVIEW_STACK_DEPTH
    public static final int GL_PROJECTION_STACK_DEPTH
    public static final int GL_TEXTURE_STACK_DEPTH
    public static final int GL_MODELVIEW_MATRIX
    public static final int GL_PROJECTION_MATRIX
    public static final int GL_TEXTURE_MATRIX
    public static final int GL_ALPHA_TEST_FUNC
    public static final int GL_ALPHA_TEST_REF
    public static final int GL_BLEND_DST
    public static final int GL_BLEND_SRC
    public static final int GL_LOGIC_OP_MODE
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_MAX_CLIP_PLANES
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_VERTEX_ARRAY_SIZE
    public static final int GL_VERTEX_ARRAY_TYPE
    public static final int GL_VERTEX_ARRAY_STRIDE
    public static final int GL_NORMAL_ARRAY_TYPE
    public static final int GL_NORMAL_ARRAY_STRIDE
    public static final int GL_COLOR_ARRAY_SIZE
    public static final int GL_COLOR_ARRAY_TYPE
    public static final int GL_COLOR_ARRAY_STRIDE
    public static final int GL_TEXTURE_COORD_ARRAY_SIZE
    public static final int GL_TEXTURE_COORD_ARRAY_TYPE
    public static final int GL_TEXTURE_COORD_ARRAY_STRIDE
    public static final int GL_VERTEX_ARRAY_POINTER
    public static final int GL_NORMAL_ARRAY_POINTER
    public static final int GL_COLOR_ARRAY_POINTER
    public static final int GL_TEXTURE_COORD_ARRAY_POINTER
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_CLIENT_ACTIVE_TEXTURE
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_VERTEX_ARRAY_BUFFER_BINDING
    public static final int GL_NORMAL_ARRAY_BUFFER_BINDING
    public static final int GL_COLOR_ARRAY_BUFFER_BINDING
    public static final int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_SUBTRACT
    public static final int GL_COMBINE
    public static final int GL_COMBINE_RGB
    public static final int GL_COMBINE_ALPHA
    public static final int GL_RGB_SCALE
    public static final int GL_ADD_SIGNED
    public static final int GL_INTERPOLATE
    public static final int GL_CONSTANT
    public static final int GL_PRIMARY_COLOR
    public static final int GL_PREVIOUS
    public static final int GL_OPERAND0_RGB
    public static final int GL_OPERAND1_RGB
    public static final int GL_OPERAND2_RGB
    public static final int GL_OPERAND0_ALPHA
    public static final int GL_OPERAND1_ALPHA
    public static final int GL_OPERAND2_ALPHA
    public static final int GL_ALPHA_SCALE
    public static final int GL_SRC0_RGB
    public static final int GL_SRC1_RGB
    public static final int GL_SRC2_RGB
    public static final int GL_SRC0_ALPHA
    public static final int GL_SRC1_ALPHA
    public static final int GL_SRC2_ALPHA
    public static final int GL_DOT3_RGB
    public static final int GL_DOT3_RGBA
    public static final int GL_POINT_SIZE_ARRAY_OES
    public static final int GL_POINT_SIZE_ARRAY_TYPE_OES
    public static final int GL_POINT_SIZE_ARRAY_STRIDE_OES
    public static final int GL_POINT_SIZE_ARRAY_POINTER_OES
    public static final int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES
    public static final int GL_POINT_SPRITE_OES
    public static final int GL_COORD_REPLACE_OES
    public static final int GL_OES_point_size_array
    public static final int GL_OES_point_sprite
    public abstract void glClipPlanef(int,float[],int)
    public abstract void glClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetClipPlanef(int,float[],int)
    public abstract void glGetClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetFloatv(int,float[],int)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetLightfv(int,int,float[],int)
    public abstract void glGetLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetMaterialfv(int,int,float[],int)
    public abstract void glGetMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameterfv(int,int,float[],int)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glPointParameterf(int,float)
    public abstract void glPointParameterfv(int,float[],int)
    public abstract void glPointParameterfv(int,java.nio.FloatBuffer)
    public abstract void glTexParameterfv(int,int,float[],int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glColor4ub(byte,byte,byte,byte)
    public abstract void glDeleteBuffers(int,int[],int)
    public abstract void glGetBooleanv(int,boolean[],int)
    public abstract void glGetBooleanv(int,java.nio.IntBuffer)
    public abstract void glGetBufferParameteriv(int,int,int[],int)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGenBuffers(int,int[],int)
    public abstract void glGetPointerv(int,java.nio.Buffer[])
    public abstract void glGetTexEnviv(int,int,int[],int)
    public abstract void glGetTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glGetTexParameteriv(int,int,int[],int)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsTexture(int)
    public abstract void glTexEnvi(int,int,int)
    public abstract void glTexEnviv(int,int,int[],int)
    public abstract void glTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,int[],int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glPointSizePointerOES(int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20:
    public static final int GL_ES_VERSION_2_0
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FUNC_ADD
    public static final int GL_BLEND_EQUATION
    public static final int GL_BLEND_EQUATION_RGB
    public static final int GL_BLEND_EQUATION_ALPHA
    public static final int GL_FUNC_SUBTRACT
    public static final int GL_FUNC_REVERSE_SUBTRACT
    public static final int GL_BLEND_DST_RGB
    public static final int GL_BLEND_SRC_RGB
    public static final int GL_BLEND_DST_ALPHA
    public static final int GL_BLEND_SRC_ALPHA
    public static final int GL_CONSTANT_COLOR
    public static final int GL_ONE_MINUS_CONSTANT_COLOR
    public static final int GL_CONSTANT_ALPHA
    public static final int GL_ONE_MINUS_CONSTANT_ALPHA
    public static final int GL_BLEND_COLOR
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_STREAM_DRAW
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_CURRENT_VERTEX_ATTRIB
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_BLEND
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_SCISSOR_TEST
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_LINE_WIDTH
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_STENCIL_BACK_FUNC
    public static final int GL_STENCIL_BACK_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_PASS
    public static final int GL_STENCIL_BACK_REF
    public static final int GL_STENCIL_BACK_VALUE_MASK
    public static final int GL_STENCIL_BACK_WRITEMASK
    public static final int GL_VIEWPORT
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_INT
    public static final int GL_UNSIGNED_INT
    public static final int GL_FLOAT
    public static final int GL_FIXED
    public static final int GL_DEPTH_COMPONENT
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FRAGMENT_SHADER
    public static final int GL_VERTEX_SHADER
    public static final int GL_MAX_VERTEX_ATTRIBS
    public static final int GL_MAX_VERTEX_UNIFORM_VECTORS
    public static final int GL_MAX_VARYING_VECTORS
    public static final int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_FRAGMENT_UNIFORM_VECTORS
    public static final int GL_SHADER_TYPE
    public static final int GL_DELETE_STATUS
    public static final int GL_LINK_STATUS
    public static final int GL_VALIDATE_STATUS
    public static final int GL_ATTACHED_SHADERS
    public static final int GL_ACTIVE_UNIFORMS
    public static final int GL_ACTIVE_UNIFORM_MAX_LENGTH
    public static final int GL_ACTIVE_ATTRIBUTES
    public static final int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    public static final int GL_SHADING_LANGUAGE_VERSION
    public static final int GL_CURRENT_PROGRAM
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_INVERT
    public static final int GL_INCR_WRAP
    public static final int GL_DECR_WRAP
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE
    public static final int GL_TEXTURE_CUBE_MAP
    public static final int GL_TEXTURE_BINDING_CUBE_MAP
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    public static final int GL_MAX_CUBE_MAP_TEXTURE_SIZE
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_MIRRORED_REPEAT
    public static final int GL_FLOAT_VEC2
    public static final int GL_FLOAT_VEC3
    public static final int GL_FLOAT_VEC4
    public static final int GL_INT_VEC2
    public static final int GL_INT_VEC3
    public static final int GL_INT_VEC4
    public static final int GL_BOOL
    public static final int GL_BOOL_VEC2
    public static final int GL_BOOL_VEC3
    public static final int GL_BOOL_VEC4
    public static final int GL_FLOAT_MAT2
    public static final int GL_FLOAT_MAT3
    public static final int GL_FLOAT_MAT4
    public static final int GL_SAMPLER_2D
    public static final int GL_SAMPLER_CUBE
    public static final int GL_VERTEX_ATTRIB_ARRAY_ENABLED
    public static final int GL_VERTEX_ATTRIB_ARRAY_SIZE
    public static final int GL_VERTEX_ATTRIB_ARRAY_STRIDE
    public static final int GL_VERTEX_ATTRIB_ARRAY_TYPE
    public static final int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    public static final int GL_VERTEX_ATTRIB_ARRAY_POINTER
    public static final int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT
    public static final int GL_COMPILE_STATUS
    public static final int GL_INFO_LOG_LENGTH
    public static final int GL_SHADER_SOURCE_LENGTH
    public static final int GL_SHADER_COMPILER
    public static final int GL_SHADER_BINARY_FORMATS
    public static final int GL_NUM_SHADER_BINARY_FORMATS
    public static final int GL_LOW_FLOAT
    public static final int GL_MEDIUM_FLOAT
    public static final int GL_HIGH_FLOAT
    public static final int GL_LOW_INT
    public static final int GL_MEDIUM_INT
    public static final int GL_HIGH_INT
    public static final int GL_FRAMEBUFFER
    public static final int GL_RENDERBUFFER
    public static final int GL_RGBA4
    public static final int GL_RGB5_A1
    public static final int GL_RGB565
    public static final int GL_DEPTH_COMPONENT16
    public static final int GL_STENCIL_INDEX
    public static final int GL_STENCIL_INDEX8
    public static final int GL_RENDERBUFFER_WIDTH
    public static final int GL_RENDERBUFFER_HEIGHT
    public static final int GL_RENDERBUFFER_INTERNAL_FORMAT
    public static final int GL_RENDERBUFFER_RED_SIZE
    public static final int GL_RENDERBUFFER_GREEN_SIZE
    public static final int GL_RENDERBUFFER_BLUE_SIZE
    public static final int GL_RENDERBUFFER_ALPHA_SIZE
    public static final int GL_RENDERBUFFER_DEPTH_SIZE
    public static final int GL_RENDERBUFFER_STENCIL_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    public static final int GL_COLOR_ATTACHMENT0
    public static final int GL_DEPTH_ATTACHMENT
    public static final int GL_STENCIL_ATTACHMENT
    public static final int GL_NONE
    public static final int GL_FRAMEBUFFER_COMPLETE
    public static final int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    public static final int GL_FRAMEBUFFER_UNSUPPORTED
    public static final int GL_FRAMEBUFFER_BINDING
    public static final int GL_RENDERBUFFER_BINDING
    public static final int GL_MAX_RENDERBUFFER_SIZE
    public static final int GL_INVALID_FRAMEBUFFER_OPERATION
    public static final int GL_VERTEX_PROGRAM_POINT_SIZE
    public static final int GL_COVERAGE_BUFFER_BIT_NV
    public abstract void glBindAttribLocation(int,int,java.lang.String)
    public abstract void glBlendColor(float,float,float,float)
    public abstract void glBlendEquation(int)
    public abstract void glBlendEquationSeparate(int,int)
    public abstract void glBlendFuncSeparate(int,int,int,int)
    public abstract void glDetachShader(int,int)
    public abstract void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public abstract void glGetBooleanv(int,java.nio.Buffer)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public abstract void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetUniformiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsFramebuffer(int)
    public abstract boolean glIsProgram(int)
    public abstract boolean glIsRenderbuffer(int)
    public abstract boolean glIsShader(int)
    public abstract boolean glIsTexture(int)
    public abstract void glReleaseShaderCompiler()
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public abstract void glStencilFuncSeparate(int,int,int,int)
    public abstract void glStencilMaskSeparate(int,int)
    public abstract void glStencilOpSeparate(int,int,int,int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glUniform1f(int,float)
    public abstract void glUniform1fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform1iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform2f(int,float,float)
    public abstract void glUniform2fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform2i(int,int,int)
    public abstract void glUniform2iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform3f(int,float,float,float)
    public abstract void glUniform3fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform3i(int,int,int,int)
    public abstract void glUniform3iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform4f(int,float,float,float,float)
    public abstract void glUniform4fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform4i(int,int,int,int,int)
    public abstract void glUniform4iv(int,int,java.nio.IntBuffer)
    public abstract void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glValidateProgram(int)
    public abstract void glVertexAttrib1f(int,float)
    public abstract void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib2f(int,float,float)
    public abstract void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib3f(int,float,float,float)
    public abstract void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib4f(int,float,float,float,float)
    public abstract void glVertexAttrib4fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GLCommon:
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_TEXTURE_MAX_ANISOTROPY_EXT
    public static final int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    public abstract void glActiveTexture(int)
    public abstract void glClearDepthf(float)
    public abstract void glClearStencil(int)
    public abstract void glColorMask(boolean,boolean,boolean,boolean)
    public abstract void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCullFace(int)
    public abstract void glDepthFunc(int)
    public abstract void glDepthRangef(float,float)
    public abstract void glFinish()
    public abstract void glFlush()
    public abstract void glFrontFace(int)
    public abstract int glGetError()
    public abstract void glHint(int,int)
    public abstract void glLineWidth(float)
    public abstract void glPolygonOffset(float,float)
    public abstract void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glScissor(int,int,int,int)
    public abstract void glStencilFunc(int,int,int)
    public abstract void glStencilMask(int)
    public abstract void glStencilOp(int,int,int)
    public abstract void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glViewport(int,int,int,int)
com.badlogic.gdx.graphics.Mesh:
    142:167:public Mesh(boolean,boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
    204:228:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.math.Matrix4[])
    239:239:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[])
    252:293:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[],com.badlogic.gdx.math.Matrix4[])
    302:304:public com.badlogic.gdx.graphics.Mesh setVertices(float[])
    323:324:public void getVertices(float[])
    330:331:public void getVertices(int,float[])
    338:339:public void getVertices(int,int,float[])
    348:362:public void getVertices(int,int,float[],int)
    381:383:public com.badlogic.gdx.graphics.Mesh setIndices(short[],int,int)
    389:390:public void getIndices(short[])
    396:403:public void getIndices(short[],int)
    407:407:public int getNumIndices()
    412:412:public int getNumVertices()
    417:417:public int getMaxVertices()
    422:422:public int getMaxIndices()
    427:427:public int getVertexSize()
    509:510:public void render(int)
    590:591:public void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int)
    708:710:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox()
    718:748:public void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    756:756:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int)
    765:765:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4)
    774:774:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int)
    784:824:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4)
    876:911:public void scale(float,float,float)
    919:920:public void transform(com.badlogic.gdx.math.Matrix4)
    924:936:protected void transform(com.badlogic.gdx.math.Matrix4,int,int)
    949:983:public static void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int)
    991:992:public void transformUV(com.badlogic.gdx.math.Matrix3)
    996:1007:protected void transformUV(com.badlogic.gdx.math.Matrix3,int,int)
    1019:1031:public static void transformUV(com.badlogic.gdx.math.Matrix3,float[],int,int,int,int)
    1043:1126:public com.badlogic.gdx.graphics.Mesh copy(boolean,boolean,int[])
    1134:1134:public com.badlogic.gdx.graphics.Mesh copy(boolean)
com.badlogic.gdx.graphics.Mesh$VertexDataType:
    72:72:public static com.badlogic.gdx.graphics.Mesh$VertexDataType[] values()
    72:72:public static com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String)
com.badlogic.gdx.graphics.OrthographicCamera:
    53:59:public OrthographicCamera(float,float,float)
    62:82:public void findDirectionForIsoView(float,float,int)
    85:96:private float calculateAngle(float)
    100:104:private com.badlogic.gdx.math.Vector3 calculateDirection(float)
    133:134:public void setToOrtho(boolean)
    142:150:public void setToOrtho(boolean,float,float)
    155:156:public void rotate(float)
    162:163:public void translate(float,float)
    168:169:public void translate(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.PerspectiveCamera:
    38:43:public PerspectiveCamera(float,float,float)
com.badlogic.gdx.graphics.Pixmap:
    106:107:public static void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter)
    123:129:public Pixmap(byte[],int,int)
    146:148:public Pixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap)
    153:154:public void setColor(int)
    169:170:public void setColor(com.badlogic.gdx.graphics.Color)
    191:192:public void drawLine(int,int,int,int)
    202:203:public void drawRectangle(int,int,int,int)
    211:212:public void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int)
    253:254:public void fillRectangle(int,int,int,int)
    262:263:public void drawCircle(int,int,int)
    271:272:public void fillCircle(int,int,int)
    283:284:public void fillTriangle(int,int,int,int,int,int)
    292:292:public int getPixel(int,int)
    317:318:public void drawPixel(int,int)
    326:327:public void drawPixel(int,int,int)
com.badlogic.gdx.graphics.Pixmap$Blending:
    76:76:public static com.badlogic.gdx.graphics.Pixmap$Blending[] values()
    76:76:public static com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String)
com.badlogic.gdx.graphics.Pixmap$Filter:
    83:83:public static com.badlogic.gdx.graphics.Pixmap$Filter[] values()
    83:83:public static com.badlogic.gdx.graphics.Pixmap$Filter valueOf(java.lang.String)
com.badlogic.gdx.graphics.Pixmap$Format:
    49:49:public static com.badlogic.gdx.graphics.Pixmap$Format[] values()
com.badlogic.gdx.graphics.PixmapIO:
    41:42:public static void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
    55:59:public static void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$CIM:
    private static final int BUFFER_SIZE
    68:107:public static void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$PNG:
    static int[] crcTable
    static final int ZLIB_BLOCK_SIZE
    157:167:static byte[] write(com.badlogic.gdx.graphics.Pixmap)
    171:180:private static byte[] createHeaderChunk(int,int)
    184:206:private static byte[] createDataChunk(com.badlogic.gdx.graphics.Pixmap)
    210:210:private static byte[] createTrailerChunk()
    214:233:private static byte[] toChunk(java.lang.String,byte[])
    237:244:private static void createCRCTable()
    247:250:private static int updateCRC(int,byte[])
    259:278:private static byte[] toZLIB(byte[])
    283:290:private static void writeUncompressedDeflateBlock(java.io.DataOutputStream,boolean,byte[],int,char)
    293:300:private static int calcADLER32(byte[])
com.badlogic.gdx.graphics.Texture:
    118:119:public Texture(java.lang.String)
    138:139:public Texture(com.badlogic.gdx.graphics.Pixmap)
    142:143:public Texture(com.badlogic.gdx.graphics.Pixmap,boolean)
    146:147:public Texture(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
    250:252:public void bind(int)
    261:266:public void draw(com.badlogic.gdx.graphics.Pixmap,int,int)
    300:300:public boolean isManaged()
    344:345:public static void setEnforcePotImages(boolean)
    424:425:public static void setAssetManager(com.badlogic.gdx.assets.AssetManager)
    440:440:public static int getNumManagedTextures()
com.badlogic.gdx.graphics.Texture$TextureFilter:
    74:74:public static com.badlogic.gdx.graphics.Texture$TextureFilter[] values()
com.badlogic.gdx.graphics.Texture$TextureWrap:
    94:94:public static com.badlogic.gdx.graphics.Texture$TextureWrap[] values()
    94:94:public static com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String)
com.badlogic.gdx.graphics.TextureData$TextureDataType:
    41:41:public static com.badlogic.gdx.graphics.TextureData$TextureDataType[] values()
    41:41:public static com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String)
com.badlogic.gdx.graphics.VertexAttribute:
    114:114:public int getKey()
com.badlogic.gdx.graphics.VertexAttributes:
    65:67:public int getOffset(int)
    73:76:public com.badlogic.gdx.graphics.VertexAttribute findByUsage(int)
    167:174:public long getMask()
com.badlogic.gdx.graphics.VertexAttributes$Usage:
    public static final int Position
    public static final int Color
    public static final int ColorPacked
    public static final int Normal
    public static final int TextureCoordinates
    public static final int Generic
    public static final int BoneWeight
    public static final int Tangent
    public static final int BiNormal
com.badlogic.gdx.graphics.g2d.Animation:
    public static final int NORMAL
    public static final int REVERSED
    public static final int LOOP
    public static final int LOOP_REVERSED
    public static final int LOOP_PINGPONG
    public static final int LOOP_RANDOM
    46:55:public Animation(float,com.badlogic.gdx.utils.Array)
    62:72:public Animation(float,com.badlogic.gdx.utils.Array,int)
    168:168:public int getPlayMode()
    175:176:public void setPlayMode(int)
    182:183:public boolean isAnimationFinished(float)
com.badlogic.gdx.graphics.g2d.BitmapFont:
    private static final int LOG2_PAGE_SIZE
    private static final int PAGE_SIZE
    private static final int PAGES
    81:83:public BitmapFont(boolean)
    205:208:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float)
    214:217:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,int,int)
    223:226:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float)
    233:236:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    243:246:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float)
    254:257:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    269:269:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    470:471:public void setColor(float)
    474:475:public void setColor(com.badlogic.gdx.graphics.Color)
    478:479:public void setColor(float,float,float,float)
    484:484:public com.badlogic.gdx.graphics.Color getColor()
    488:500:public void setScale(float,float)
    507:508:public void setScale(float)
    512:513:public void scale(float)
    516:516:public float getScaleX()
    520:520:public float getScaleY()
    524:524:public com.badlogic.gdx.graphics.g2d.TextureRegion getRegion()
    529:529:public float getLineHeight()
    534:534:public float getSpaceWidth()
    539:539:public float getXHeight()
    550:550:public float getAscent()
    561:561:public boolean isFlipped()
    572:585:public void setFixedWidthGlyphs(java.lang.CharSequence)
    594:596:public void setUseIntegerPositions(boolean)
    604:604:public com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData()
    611:611:public boolean ownsTexture()
    621:622:public void setOwnsTexture(boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    871:871:public com.badlogic.gdx.files.FileHandle getFontFile()
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment:
    685:685:public static com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] values()
    685:685:public static com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment valueOf(java.lang.String)
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds:
    675:677:public BitmapFont$TextBounds(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    private int idx
    private float x
    private float y
    56:57:public void setPosition(float,float)
    63:75:public void translate(float,float)
    78:83:public void setColor(float)
    86:92:public void setColor(com.badlogic.gdx.graphics.Color)
    95:102:public void setColor(float,float,float,float)
    107:111:public void setColor(com.badlogic.gdx.graphics.Color,int,int)
    114:115:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch)
    118:119:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,int,int)
    122:133:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    136:143:public com.badlogic.gdx.graphics.Color getColor()
    148:151:public void clear()
    154:160:private void require(int)
    163:215:private float addToCache(java.lang.CharSequence,float,float,int,int)
    219:261:private void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float,float)
    266:267:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float)
    273:274:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int)
    280:280:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float)
    290:294:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float,int,int)
    300:301:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float)
    307:308:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    314:314:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float)
    324:352:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    359:360:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float)
    367:368:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    374:374:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float)
    383:438:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    449:449:public float getX()
    454:454:public float getY()
    469:469:public boolean usesIntegerPositions()
    473:473:public float[] getVertices()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    public static final int GDX2D_FORMAT_ALPHA
    public static final int GDX2D_FORMAT_LUMINANCE_ALPHA
    public static final int GDX2D_FORMAT_RGB888
    public static final int GDX2D_FORMAT_RGBA8888
    public static final int GDX2D_FORMAT_RGB565
    public static final int GDX2D_FORMAT_RGBA4444
    public static final int GDX2D_SCALE_NEAREST
    public static final int GDX2D_SCALE_LINEAR
    public static final int GDX2D_BLEND_NONE
    public static final int GDX2D_BLEND_SRC_OVER
    65:82:public Gdx2DPixmap(java.io.InputStream,int)
    95:101:public Gdx2DPixmap(java.nio.ByteBuffer,long[])
    112:113:public void setPixel(int,int,int)
    116:116:public int getPixel(int,int)
    120:121:public void drawLine(int,int,int,int,int)
    124:125:public void drawRect(int,int,int,int,int)
    128:129:public void drawCircle(int,int,int,int)
    132:133:public void fillRect(int,int,int,int,int)
    136:137:public void fillCircle(int,int,int,int)
    140:141:public void fillTriangle(int,int,int,int,int,int,int)
    154:156:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int)
    162:164:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int)
    222:236:public java.lang.String getFormatString()
    private static native void setPixel(long,int,int,int)
    private static native int getPixel(long,int,int)
    private static native void drawLine(long,int,int,int,int,int)
    private static native void drawRect(long,int,int,int,int,int)
    private static native void drawCircle(long,int,int,int,int)
    private static native void fillRect(long,int,int,int,int,int)
    private static native void fillCircle(long,int,int,int,int)
    private static native void fillTriangle(long,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.NinePatch:
    public static final int TOP_LEFT
    public static final int TOP_CENTER
    public static final int TOP_RIGHT
    public static final int MIDDLE_LEFT
    public static final int MIDDLE_CENTER
    public static final int MIDDLE_RIGHT
    public static final int BOTTOM_LEFT
    public static final int BOTTOM_CENTER
    public static final int BOTTOM_RIGHT
    66:67:public NinePatch(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    122:124:public NinePatch(com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Color)
    128:129:public NinePatch(com.badlogic.gdx.graphics.Texture)
    133:135:public NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.graphics.Color)
    150:182:public varargs NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion[])
    185:186:public NinePatch(com.badlogic.gdx.graphics.g2d.NinePatch)
    303:321:private void set(int,float,float,float,float,float)
    324:342:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float)
    347:348:public void setColor(com.badlogic.gdx.graphics.Color)
    351:351:public com.badlogic.gdx.graphics.Color getColor()
    360:361:public void setLeftWidth(float)
    369:370:public void setRightWidth(float)
    378:379:public void setTopHeight(float)
    387:388:public void setBottomHeight(float)
    391:391:public float getMiddleWidth()
    398:399:public void setMiddleWidth(float)
    402:402:public float getMiddleHeight()
    409:410:public void setMiddleHeight(float)
    437:438:public void setPadLeft(int)
    448:449:public void setPadRight(int)
    459:460:public void setPadTop(int)
    470:471:public void setPadBottom(int)
    474:474:public com.badlogic.gdx.graphics.Texture getTexture()
com.badlogic.gdx.graphics.g2d.ParticleEffect:
    49:51:public void start()
    59:61:public void update(float)
    64:66:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch)
    69:71:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    74:76:public void allowCompletion()
    79:83:public boolean isComplete()
    87:93:public void setDuration(int)
    96:98:public void setPosition(float,float)
    101:103:public void setFlip(boolean,boolean)
    106:108:public void flipY()
    111:111:public com.badlogic.gdx.utils.Array getEmitters()
    116:120:public com.badlogic.gdx.graphics.g2d.ParticleEmitter findEmitter(java.lang.String)
    124:143:public void save(java.io.File)
    146:148:public void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    151:153:public void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas)
    156:177:public void loadEmitters(com.badlogic.gdx.files.FileHandle)
    180:191:public void loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas)
    194:201:public void loadEmitterImages(com.badlogic.gdx.files.FileHandle)
    204:204:protected com.badlogic.gdx.graphics.Texture loadTexture(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g2d.ParticleEffectPool:
    26:28:public ParticleEffectPool(com.badlogic.gdx.graphics.g2d.ParticleEffect,int,int)
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect:
    53:54:public void free()
com.badlogic.gdx.graphics.g2d.ParticleEmitter:
    private static final int UPDATE_SCALE
    private static final int UPDATE_ANGLE
    private static final int UPDATE_ROTATION
    private static final int UPDATE_VELOCITY
    private static final int UPDATE_WIND
    private static final int UPDATE_GRAVITY
    private static final int UPDATE_TINT
    private float accumulator
    private float x
    private float y
    private java.lang.String imagePath
    private boolean flipX
    private boolean flipY
    90:93:public ParticleEmitter(java.io.BufferedReader)
    144:155:public void addParticle()
    158:174:public void addParticles(int)
    177:222:public void update(float)
    225:236:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch)
    241:299:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    351:351:protected com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite)
    355:497:private void activateParticle(int)
    500:553:private boolean updateParticle(com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle,float,int)
    557:566:public void setPosition(float,float)
    569:580:public void setSprite(com.badlogic.gdx.graphics.g2d.Sprite)
    585:587:public void allowCompletion()
    594:594:public java.lang.String getName()
    598:599:public void setName(java.lang.String)
    602:602:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLife()
    606:606:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getScale()
    610:610:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getRotation()
    614:614:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue getTint()
    618:618:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getVelocity()
    622:622:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getWind()
    626:626:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getGravity()
    630:630:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getAngle()
    634:634:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getEmission()
    638:638:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getTransparency()
    642:642:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDuration()
    646:646:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDelay()
    650:650:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLifeOffset()
    654:654:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getXOffsetValue()
    658:658:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getYOffsetValue()
    662:662:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnWidth()
    666:666:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnHeight()
    670:670:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue getSpawnShape()
    674:674:public boolean isAttached()
    678:679:public void setAttached(boolean)
    682:682:public boolean isContinuous()
    686:687:public void setContinuous(boolean)
    690:690:public boolean isAligned()
    694:695:public void setAligned(boolean)
    698:698:public boolean isAdditive()
    702:703:public void setAdditive(boolean)
    706:706:public boolean isBehind()
    710:711:public void setBehind(boolean)
    714:714:public int getMinParticleCount()
    718:719:public void setMinParticleCount(int)
    722:722:public int getMaxParticleCount()
    726:727:public boolean isComplete()
    731:732:public float getPercentComplete()
    736:736:public float getX()
    740:740:public float getY()
    744:744:public int getActiveCount()
    748:748:public java.lang.String getImagePath()
    752:753:public void setImagePath(java.lang.String)
    756:763:public void setFlip(boolean,boolean)
    766:779:public void flipY()
    782:828:public void save(java.io.Writer)
    832:882:public void load(java.io.BufferedReader)
    885:887:static java.lang.String readString(java.io.BufferedReader,java.lang.String)
    891:891:static boolean readBoolean(java.io.BufferedReader,java.lang.String)
    895:895:static int readInt(java.io.BufferedReader,java.lang.String)
    899:899:static float readFloat(java.io.BufferedReader,java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue:
    1172:1172:public float[] getTimeline()
    1176:1177:public void setTimeline(float[])
    1180:1180:public float[] getColors()
    1184:1185:public void setColors(float[])
    1188:1215:public float[] getColor(float)
    1219:1227:public void save(java.io.Writer)
    1230:1238:public void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue:
    private float value
    963:963:public float getValue()
    967:968:public void setValue(float)
    971:974:public void save(java.io.Writer)
    977:980:public void load(java.io.BufferedReader)
    983:985:public void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle:
    protected int life
    protected int currentLife
    protected float scale
    protected float scaleDiff
    protected float rotation
    protected float rotationDiff
    protected float velocityDiff
    protected float angleDiff
    protected float transparency
    protected float transparencyDiff
    protected float wind
    protected float windDiff
    protected float gravity
    protected float gravityDiff
    protected float[] tint
    915:916:public ParticleEmitter$Particle(com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue:
    928:928:public boolean isAlwaysActive()
    932:932:public boolean isActive()
    936:937:public void setActive(boolean)
    940:944:public void save(java.io.Writer)
    947:951:public void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue:
    996:998:public void setLow(float)
    1001:1003:public void setLow(float,float)
    1006:1006:public float getLowMin()
    1010:1011:public void setLowMin(float)
    1014:1014:public float getLowMax()
    1018:1019:public void setLowMax(float)
    1022:1026:public void save(java.io.Writer)
    1029:1033:public void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue:
    1053:1055:public void setHigh(float)
    1058:1060:public void setHigh(float,float)
    1063:1063:public float getHighMin()
    1067:1068:public void setHighMin(float)
    1071:1071:public float getHighMax()
    1075:1076:public void setHighMax(float)
    1079:1079:public float[] getScaling()
    1083:1084:public void setScaling(float[])
    1087:1087:public float[] getTimeline()
    1091:1092:public void setTimeline(float[])
    1099:1100:public void setRelative(boolean)
    1103:1118:public float getScale(float)
    1122:1133:public void save(java.io.Writer)
    1136:1147:public void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide:
    1310:1310:public static com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide valueOf(java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape:
    1306:1306:public static com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape valueOf(java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue:
    1255:1255:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape getShape()
    1259:1260:public void setShape(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape)
    1263:1263:public boolean isEdges()
    1267:1268:public void setEdges(boolean)
    1271:1271:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide getSide()
    1275:1276:public void setSide(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide)
    1279:1286:public void save(java.io.Writer)
    1289:1296:public void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D:
    private static final float EPSILON
    59:61:public ParticleEmitterBox2D(com.badlogic.gdx.physics.box2d.World)
    70:72:public ParticleEmitterBox2D(com.badlogic.gdx.physics.box2d.World,java.io.BufferedReader)
    80:82:public ParticleEmitterBox2D(com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.graphics.g2d.ParticleEmitter)
    86:86:protected com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1:
    final synthetic com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D this$0
    46:46:ParticleEmitterBox2D$1(com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D)
    48:50:public float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D:
    91:93:public ParticleEmitterBox2D$ParticleBox2D(com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D,com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.graphics.g2d.PixmapPacker:
    final int pageWidth
    final int pageHeight
    final com.badlogic.gdx.graphics.Pixmap$Format pageFormat
    final int padding
    final boolean duplicateBorder
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page currPage
    137:144:public PixmapPacker(int,int,com.badlogic.gdx.graphics.Pixmap$Format,int,boolean)
    156:203:public synchronized com.badlogic.gdx.math.Rectangle pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap)
    207:213:private void newPage()
    216:258:private com.badlogic.gdx.graphics.g2d.PixmapPacker$Node insert(com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.math.Rectangle)
    264:264:public com.badlogic.gdx.utils.Array getPages()
    270:274:public synchronized com.badlogic.gdx.math.Rectangle getRect(java.lang.String)
    280:284:public synchronized com.badlogic.gdx.graphics.g2d.PixmapPacker$Page getPage(java.lang.String)
    303:323:public synchronized com.badlogic.gdx.graphics.g2d.TextureAtlas generateTextureAtlas(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
    331:365:public synchronized void updateTextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
    368:368:public int getPageWidth()
    372:372:public int getPageHeight()
    376:376:public int getPadding()
    380:380:public boolean duplicateBoarder()
com.badlogic.gdx.graphics.g2d.PixmapPacker$1:
    final synthetic com.badlogic.gdx.graphics.g2d.PixmapPacker this$0
    306:306:PixmapPacker$1(com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.g2d.PixmapPacker$2:
    final synthetic com.badlogic.gdx.graphics.g2d.PixmapPacker this$0
    334:334:PixmapPacker$2(com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData:
    final synthetic com.badlogic.gdx.graphics.g2d.PixmapPacker this$0
    384:386:public PixmapPacker$ManagedPixmapTextureData(com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node:
    public com.badlogic.gdx.graphics.g2d.PixmapPacker$Node leftChild
    public com.badlogic.gdx.graphics.g2d.PixmapPacker$Node rightChild
    public java.lang.String leaveName
    94:99:public PixmapPacker$Node(int,int,int,int,com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,java.lang.String)
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node root
    com.badlogic.gdx.utils.OrderedMap rects
    com.badlogic.gdx.graphics.Texture texture
    com.badlogic.gdx.utils.Array addedRects
    final synthetic com.badlogic.gdx.graphics.g2d.PixmapPacker this$0
    106:111:public PixmapPacker$Page(com.badlogic.gdx.graphics.g2d.PixmapPacker)
    114:114:public com.badlogic.gdx.graphics.Pixmap getPixmap()
com.badlogic.gdx.graphics.g2d.PolygonRegion:
    private float[] texCoords
    private float[] localVertices
    private final com.badlogic.gdx.graphics.g2d.TextureRegion region
    47:53:public PolygonRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)
    59:83:public PolygonRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,float[])
    94:130:private void loadPolygonDefinition(com.badlogic.gdx.files.FileHandle)
    136:144:private float[] calculateAtlasTexCoords(float[])
    149:149:public float[] getLocalVertices()
    154:154:public float[] getTextureCoords()
    159:159:public com.badlogic.gdx.graphics.g2d.TextureRegion getRegion()
com.badlogic.gdx.graphics.g2d.PolygonSprite:
    com.badlogic.gdx.graphics.g2d.PolygonRegion region
    private float x
    private float y
    private float width
    private float height
    private float scaleX
    private float scaleY
    private float rotation
    private float originX
    private float originY
    private float[] vertices
    private boolean dirty
    private com.badlogic.gdx.math.Rectangle bounds
    private final com.badlogic.gdx.graphics.Color color
    38:43:public PolygonSprite(com.badlogic.gdx.graphics.g2d.PolygonRegion)
    46:48:public PolygonSprite(com.badlogic.gdx.graphics.g2d.PolygonSprite)
    51:66:public void set(com.badlogic.gdx.graphics.g2d.PolygonSprite)
    71:77:public void setBounds(float,float,float,float)
    83:87:public void setSize(float,float)
    93:94:public void setPosition(float,float)
    100:101:public void setX(float)
    107:108:public void setY(float)
    113:121:public void translateX(float)
    126:134:public void translateY(float)
    139:149:public void translate(float,float)
    152:158:public void setColor(com.badlogic.gdx.graphics.Color)
    161:167:public void setColor(float,float,float,float)
    171:174:public void setOrigin(float,float)
    177:179:public void setRotation(float)
    183:185:public void rotate(float)
    188:191:public void setScale(float)
    194:197:public void setScale(float,float)
    201:204:public void scale(float)
    208:246:public float[] getVertices()
    255:274:public com.badlogic.gdx.math.Rectangle getBoundingRectangle()
    278:279:public void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch)
    282:289:public void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch,float)
    292:292:public float getX()
    296:296:public float getY()
    300:300:public float getWidth()
    304:304:public float getHeight()
    308:308:public float getOriginX()
    312:312:public float getOriginY()
    316:316:public float getRotation()
    320:320:public float getScaleX()
    324:324:public float getScaleY()
    330:336:public com.badlogic.gdx.graphics.Color getColor()
    340:355:public void setRegion(com.badlogic.gdx.graphics.g2d.PolygonRegion)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch:
    148:149:public PolygonSpriteBatch(int,int)
    230:247:public void begin()
    252:270:public void end()
    274:275:public void setColor(com.badlogic.gdx.graphics.Color)
    279:281:public void setColor(float,float,float,float)
    286:287:public void setColor(float)
    291:297:public com.badlogic.gdx.graphics.Color getColor()
    302:303:public void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float)
    307:329:public void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float)
    337:383:public void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float,float,float,float,float,float)
    388:403:public void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float[],int,int)
    407:408:public void flush()
    411:441:private void renderMesh()
    445:447:public void disableBlending()
    451:453:public void enableBlending()
    460:463:public void setBlendFunction(int,int)
    467:470:public void dispose()
    476:476:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    483:483:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    491:494:public void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
    501:504:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    507:525:private void setupMatrices()
    528:530:private void switchTexture(com.badlogic.gdx.graphics.Texture)
    547:562:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    566:566:public boolean isBlendingEnabled()
com.badlogic.gdx.graphics.g2d.Sprite:
    static final int VERTEX_SIZE
    static final int SPRITE_SIZE
    private com.badlogic.gdx.math.Rectangle bounds
    56:57:public Sprite(com.badlogic.gdx.graphics.Texture)
    63:64:public Sprite(com.badlogic.gdx.graphics.Texture,int,int)
    69:76:public Sprite(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    90:95:public Sprite(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    182:183:public void setPosition(float,float)
    189:190:public void setX(float)
    196:197:public void setY(float)
    202:211:public void translateX(float)
    216:225:public void translateY(float)
    273:278:public void setColor(float)
    288:290:public void setRotation(float)
    294:296:public void rotate(float)
    331:334:public void setScale(float)
    337:340:public void setScale(float,float)
    344:347:public void scale(float)
    351:415:public float[] getVertices()
    424:452:public com.badlogic.gdx.math.Rectangle getBoundingRectangle()
    456:457:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch)
    460:467:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    494:494:public float getRotation()
    498:498:public float getScaleX()
    502:502:public float getScaleY()
    508:515:public com.badlogic.gdx.graphics.Color getColor()
    536:539:public void setU(float)
    542:545:public void setV(float)
    548:551:public void setU2(float)
    554:557:public void setV2(float)
    581:602:public void scroll(float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch:
    public static final int X1
    public static final int Y1
    public static final int C1
    public static final int U1
    public static final int V1
    public static final int X2
    public static final int Y2
    public static final int C2
    public static final int U2
    public static final int V2
    public static final int X3
    public static final int Y3
    public static final int C3
    public static final int U3
    public static final int V3
    public static final int X4
    public static final int Y4
    public static final int C4
    public static final int U4
    public static final int V4
    127:128:public SpriteBatch(int,int)
    263:264:public void setColor(com.badlogic.gdx.graphics.Color)
    268:270:public void setColor(float,float,float,float)
    275:276:public void setColor(float)
    280:286:public com.badlogic.gdx.graphics.Color getColor()
    313:433:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
    452:500:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    513:549:public void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    561:593:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float)
    600:632:public void draw(com.badlogic.gdx.graphics.Texture,float,float)
    636:673:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    678:701:public void draw(com.badlogic.gdx.graphics.Texture,float[],int,int)
    705:706:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
    756:866:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float)
    876:1002:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
    1006:1007:public void flush()
    1046:1049:public void disableBlending()
    1053:1056:public void enableBlending()
    1063:1066:public void setBlendFunction(int,int)
    1078:1078:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    1084:1084:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    1091:1094:public void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
    1101:1104:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    1145:1160:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.SpriteCache:
    private boolean drawing
    private com.badlogic.gdx.graphics.g2d.SpriteCache$Cache currentCache
    132:133:public void setColor(com.badlogic.gdx.graphics.Color)
    137:139:public void setColor(float,float,float,float)
    144:145:public void setColor(float)
    148:154:public com.badlogic.gdx.graphics.Color getColor()
    159:164:public void beginCache()
    170:179:public void beginCache(int)
    183:224:public int endCache()
    229:231:public void clear()
    237:249:public void add(com.badlogic.gdx.graphics.Texture,float[],int,int)
    253:301:public void add(com.badlogic.gdx.graphics.Texture,float,float)
    306:354:public void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,float,float,float,float,float)
    358:412:public void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    418:483:public void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    490:627:public void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
    631:632:public void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
    636:688:public void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float)
    695:818:public void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float)
    822:833:public void add(com.badlogic.gdx.graphics.g2d.Sprite)
    837:872:public void begin()
    876:891:public void end()
    895:920:public void draw(int)
    926:961:public void draw(int,int,int)
    970:970:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    974:976:public void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
    979:979:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    983:985:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    1041:1042:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache:
    final int id
    final int offset
    int maxCount
    int textureCount
    com.badlogic.gdx.graphics.Texture[] textures
    int[] counts
    995:998:public SpriteCache$Cache(int,int)
com.badlogic.gdx.graphics.g2d.TextureAtlas:
    202:203:public TextureAtlas(java.lang.String)
    207:208:public TextureAtlas(com.badlogic.gdx.files.FileHandle)
    213:214:public TextureAtlas(com.badlogic.gdx.files.FileHandle,boolean)
    217:218:public TextureAtlas(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    222:223:public TextureAtlas(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    268:275:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int)
    280:280:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion)
    302:308:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int)
    326:329:public com.badlogic.gdx.utils.Array createSprites()
    337:339:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String)
    347:353:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int)
    361:366:public com.badlogic.gdx.utils.Array createSprites(java.lang.String)
    370:379:private com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
    387:397:public com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite:
    562:563:public void setPosition(float,float)
    666:666:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion getAtlasRegion()
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    191:191:public com.badlogic.gdx.utils.Array getRegions()
com.badlogic.gdx.graphics.g2d.TextureRegion:
    44:47:public TextureRegion(com.badlogic.gdx.graphics.Texture,int,int)
    56:59:public TextureRegion(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    75:77:public void setRegion(com.badlogic.gdx.graphics.Texture)
    115:116:public void setTexture(com.badlogic.gdx.graphics.Texture)
    119:119:public float getU()
    123:125:public void setU(float)
    128:128:public float getV()
    132:134:public void setV(float)
    137:137:public float getU2()
    141:143:public void setU2(float)
    146:146:public float getV2()
    150:152:public void setV2(float)
    159:160:public void setRegionX(int)
    167:168:public void setRegionY(int)
    176:177:public void setRegionWidth(int)
    185:186:public void setRegionHeight(int)
    202:202:public boolean isFlipX()
    206:206:public boolean isFlipY()
    214:224:public void scroll(float,float)
    235:252:public com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int)
    264:265:public static com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int)
com.badlogic.gdx.graphics.g3d.Model:
    87:88:public Model(com.badlogic.gdx.graphics.g3d.model.data.ModelData)
    305:307:public void manageDisposable(com.badlogic.gdx.utils.Disposable)
    343:344:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    350:353:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    358:358:public com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String)
    363:374:public com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String,boolean)
    379:379:public com.badlogic.gdx.graphics.g3d.materials.Material getMaterial(java.lang.String)
    384:395:public com.badlogic.gdx.graphics.g3d.materials.Material getMaterial(java.lang.String,boolean)
com.badlogic.gdx.graphics.g3d.ModelBatch:
    protected com.badlogic.gdx.graphics.Camera camera
    56:59:public ModelBatch(com.badlogic.gdx.graphics.g3d.utils.ShaderProvider)
    63:64:public ModelBatch(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    68:69:public ModelBatch(java.lang.String,java.lang.String)
    79:80:public void begin(com.badlogic.gdx.graphics.Camera)
    83:103:public void end()
    106:109:public void render(com.badlogic.gdx.graphics.g3d.Renderable)
    118:119:public void render(com.badlogic.gdx.graphics.g3d.RenderableProvider)
    128:129:public void render(java.lang.Iterable)
    140:141:public void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.lights.Lights)
    152:153:public void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.lights.Lights)
    164:165:public void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Shader)
    176:177:public void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Shader)
    190:199:public void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.lights.Lights,com.badlogic.gdx.graphics.g3d.Shader)
    212:214:public void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.lights.Lights,com.badlogic.gdx.graphics.g3d.Shader)
com.badlogic.gdx.graphics.g3d.ModelInstance:
    public final com.badlogic.gdx.utils.Array materials
    public final com.badlogic.gdx.utils.Array nodes
    public final com.badlogic.gdx.utils.Array animations
    public final com.badlogic.gdx.graphics.g3d.Model model
    public com.badlogic.gdx.math.Matrix4 transform
    public java.lang.Object userData
    private com.badlogic.gdx.utils.ObjectMap nodePartBones
    47:48:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model)
    54:55:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,java.lang.String,boolean)
    62:63:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String,boolean)
    71:72:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,java.lang.String,boolean,boolean)
    81:82:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String,boolean,boolean)
    90:91:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,java.lang.String,boolean,boolean,boolean)
    99:115:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String,boolean,boolean,boolean)
    119:120:public varargs ModelInstance(com.badlogic.gdx.graphics.g3d.Model,java.lang.String[])
    123:132:public varargs ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String[])
    136:137:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.utils.Array)
    140:146:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.utils.Array)
    150:152:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Vector3)
    156:158:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,float,float,float)
    162:163:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4)
    167:168:public ModelInstance(com.badlogic.gdx.graphics.g3d.ModelInstance)
    171:177:public ModelInstance(com.badlogic.gdx.graphics.g3d.ModelInstance,com.badlogic.gdx.math.Matrix4)
    181:181:public com.badlogic.gdx.graphics.g3d.ModelInstance copy()
    186:191:private void copyNodes(com.badlogic.gdx.utils.Array)
    194:204:private varargs void copyNodes(com.badlogic.gdx.utils.Array,java.lang.String[])
    207:217:private void copyNodes(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array)
    220:232:private void setBones()
    235:250:private com.badlogic.gdx.graphics.g3d.model.Node copyNode(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.Node)
    254:271:private com.badlogic.gdx.graphics.g3d.model.NodePart copyNodePart(com.badlogic.gdx.graphics.g3d.model.NodePart)
    275:299:private void copyAnimations(java.lang.Iterable)
    311:314:public void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool)
    318:318:public com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable)
    323:323:public com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.model.Node)
    327:335:public com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.NodePart)
    339:348:protected void getRenderables(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool)
    361:368:public void calculateTransforms()
    373:374:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    380:383:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    388:388:public com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String)
    393:404:public com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String,boolean)
    409:409:public com.badlogic.gdx.graphics.g3d.materials.Material getMaterial(java.lang.String)
    414:425:public com.badlogic.gdx.graphics.g3d.materials.Material getMaterial(java.lang.String,boolean)
    430:430:public com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String)
    436:436:public com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean)
    442:442:public com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean,boolean)
com.badlogic.gdx.graphics.g3d.Renderable:
    public int meshPartOffset
    public int meshPartSize
    public int primitiveType
    public com.badlogic.gdx.math.Matrix4[] bones
    public java.lang.Object userData
com.badlogic.gdx.graphics.g3d.RenderableProvider:
    public abstract void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool)
com.badlogic.gdx.graphics.g3d.Shader:
    public abstract void init()
    public abstract int compareTo(com.badlogic.gdx.graphics.g3d.Shader)
    public abstract boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable)
    public abstract void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext)
    public abstract void render(com.badlogic.gdx.graphics.g3d.Renderable)
    public abstract void end()
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy:
    private static final int GROUP_OPAQUE
    private static final int GROUP_BLEND
    com.badlogic.gdx.utils.Pool arrayPool
    com.badlogic.gdx.utils.Array usedArrays
    com.badlogic.gdx.utils.ObjectMap materialGroups
    com.badlogic.gdx.graphics.Camera camera
    private final java.util.Comparator cameraSorter
    99:107:public CameraGroupStrategy(com.badlogic.gdx.graphics.Camera)
    109:114:public CameraGroupStrategy(com.badlogic.gdx.graphics.Camera,java.util.Comparator)
    117:118:public void setCamera(com.badlogic.gdx.graphics.Camera)
    121:121:public com.badlogic.gdx.graphics.Camera getCamera()
    126:126:public int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal)
    131:156:public void beforeGroup(int,com.badlogic.gdx.utils.Array)
    160:163:public void afterGroup(int)
    167:179:public void beforeGroups()
    183:188:public void afterGroups()
    191:219:private void createDefaultShader()
    223:223:public com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1:
    final synthetic com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy this$0
    85:85:CameraGroupStrategy$1(com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy,int)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2:
    99:99:CameraGroupStrategy$2(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.graphics.g3d.decals.Decal:
    private static final int VERTEX_SIZE
    public static final int SIZE
    public int value
    public static final int X1
    public static final int Y1
    public static final int Z1
    public static final int C1
    public static final int U1
    public static final int V1
    public static final int X2
    public static final int Y2
    public static final int Z2
    public static final int C2
    public static final int U2
    public static final int V2
    public static final int X3
    public static final int Y3
    public static final int Z3
    public static final int C3
    public static final int U3
    public static final int V3
    public static final int X4
    public static final int Y4
    public static final int Z4
    public static final int C4
    public static final int U4
    public static final int V4
    70:76:public void setColor(float,float,float,float)
    80:85:public void setColor(com.badlogic.gdx.graphics.Color)
    89:93:public void setColor(float)
    99:101:public void setRotationX(float)
    107:109:public void setRotationY(float)
    115:117:public void setRotationZ(float)
    123:126:public void rotateX(float)
    132:135:public void rotateY(float)
    141:144:public void rotateZ(float)
    150:154:public void setRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    160:160:public com.badlogic.gdx.math.Quaternion getRotation()
    167:169:public void translateX(float)
    175:177:public void setX(float)
    181:181:public float getX()
    188:190:public void translateY(float)
    196:198:public void setY(float)
    202:202:public float getY()
    209:211:public void translateZ(float)
    217:219:public void setZ(float)
    232:234:public void translate(float,float,float)
    242:244:public void setPosition(float,float,float)
    250:250:public com.badlogic.gdx.math.Vector3 getPosition()
    257:259:public void setScaleX(float)
    263:263:public float getScaleX()
    270:272:public void setScaleY(float)
    276:276:public float getScaleY()
    284:286:public void setScale(float,float)
    292:294:public void setScale(float)
    300:302:public void setWidth(float)
    306:306:public float getWidth()
    313:315:public void setHeight(float)
    319:319:public float getHeight()
    327:329:public void setDimensions(float,float)
    336:336:public float[] getVertices()
    341:345:protected void update()
    359:454:protected void transformVertices()
    458:481:protected void resetVertices()
    485:498:protected void updateUVs()
    504:506:public void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    510:510:public com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
    518:520:public void setBlending(int,int)
    523:523:public com.badlogic.gdx.graphics.g3d.decals.DecalMaterial getMaterial()
    532:534:public void lookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    572:572:public static com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion)
    582:582:public static com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)
    596:596:public static com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion)
    607:607:public static com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)
    620:626:public static com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,int,int)
com.badlogic.gdx.graphics.g3d.decals.DecalBatch:
    private static final int DEFAULT_SIZE
    70:71:public DecalBatch(com.badlogic.gdx.graphics.g3d.decals.GroupStrategy)
    109:109:public int getSize()
    116:126:public void add(com.badlogic.gdx.graphics.g3d.decals.Decal)
    130:132:public void flush()
    136:144:protected void render()
    151:175:private void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.utils.Array)
    181:187:protected void flush(com.badlogic.gdx.graphics.glutils.ShaderProgram,int)
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial:
    public static final int NO_BLEND
    31:35:public void set()
    39:39:public boolean isOpaque()
    43:43:public int getSrcBlendFactor()
    47:47:public int getDstBlendFactor()
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy:
    private static final int GROUP_OPAQUE
    private static final int GROUP_BLEND
    78:78:public int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal)
    83:86:public void beforeGroup(int,com.badlogic.gdx.utils.Array)
    90:93:public void afterGroup(int)
    97:98:public void beforeGroups()
    102:103:public void afterGroups()
    107:107:public com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int)
com.badlogic.gdx.graphics.g3d.decals.GroupPlug:
    public abstract void beforeGroup(com.badlogic.gdx.utils.Array)
    public abstract void afterGroup()
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy:
    public abstract com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int)
    public abstract int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal)
    public abstract void beforeGroup(int,com.badlogic.gdx.utils.Array)
    public abstract void afterGroup(int)
    public abstract void beforeGroups()
    public abstract void afterGroups()
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy:
    29:30:public void beforeGroup(int,com.badlogic.gdx.utils.Array)
    34:35:public void afterGroup(int)
    41:42:public void plugIn(com.badlogic.gdx.graphics.g3d.decals.GroupPlug,int)
    48:48:public com.badlogic.gdx.graphics.g3d.decals.GroupPlug unPlug(int)
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy:
    private static final int GROUP_OPAQUE
    private static final int GROUP_BLEND
    76:76:public int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal)
    81:90:public void beforeGroup(int,com.badlogic.gdx.utils.Array)
    94:98:public void afterGroup(int)
    102:103:public void beforeGroups()
    107:108:public void afterGroups()
    120:120:public com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int)
com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap:
    9:9:private static final float clamp(float)
    18:23:public AmbientCubemap(float[])
    26:27:public AmbientCubemap(com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap)
    30:32:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap set(float[])
    36:36:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap set(com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap)
    40:40:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap set(com.badlogic.gdx.graphics.Color)
    44:49:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap set(float,float,float)
    53:54:public com.badlogic.gdx.graphics.Color getColor(com.badlogic.gdx.graphics.Color,int)
    58:60:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap clear()
    64:66:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap clamp()
    70:75:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(float,float,float)
    79:79:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(com.badlogic.gdx.graphics.Color)
    83:101:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(float,float,float,float,float,float)
    105:105:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3)
    109:109:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(float,float,float,com.badlogic.gdx.math.Vector3)
    113:113:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(com.badlogic.gdx.graphics.Color,float,float,float)
    117:117:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    121:122:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.graphics.g3d.lights.DirectionalLight:
    10:10:public com.badlogic.gdx.graphics.g3d.lights.DirectionalLight set(com.badlogic.gdx.graphics.g3d.lights.DirectionalLight)
    14:18:public com.badlogic.gdx.graphics.g3d.lights.DirectionalLight set(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3)
    22:25:public com.badlogic.gdx.graphics.g3d.lights.DirectionalLight set(float,float,float,com.badlogic.gdx.math.Vector3)
    29:32:public com.badlogic.gdx.graphics.g3d.lights.DirectionalLight set(com.badlogic.gdx.graphics.Color,float,float,float)
    36:38:public com.badlogic.gdx.graphics.g3d.lights.DirectionalLight set(float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.lights.Lights:
    public com.badlogic.gdx.graphics.Color fog
    15:17:public Lights(com.badlogic.gdx.graphics.Color)
    19:21:public Lights(float,float,float)
    24:26:public varargs Lights(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.g3d.lights.BaseLight[])
    29:32:public com.badlogic.gdx.graphics.g3d.lights.Lights clear()
    36:38:public varargs com.badlogic.gdx.graphics.g3d.lights.Lights add(com.badlogic.gdx.graphics.g3d.lights.BaseLight[])
    42:44:public com.badlogic.gdx.graphics.g3d.lights.Lights add(com.badlogic.gdx.utils.Array)
    48:54:public com.badlogic.gdx.graphics.g3d.lights.Lights add(com.badlogic.gdx.graphics.g3d.lights.BaseLight)
com.badlogic.gdx.graphics.g3d.lights.PointLight:
    11:11:public com.badlogic.gdx.graphics.g3d.lights.PointLight set(com.badlogic.gdx.graphics.g3d.lights.PointLight)
    15:20:public com.badlogic.gdx.graphics.g3d.lights.PointLight set(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,float)
    24:28:public com.badlogic.gdx.graphics.g3d.lights.PointLight set(float,float,float,com.badlogic.gdx.math.Vector3,float)
    32:36:public com.badlogic.gdx.graphics.g3d.lights.PointLight set(com.badlogic.gdx.graphics.Color,float,float,float,float)
    40:43:public com.badlogic.gdx.graphics.g3d.lights.PointLight set(float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader:
    public static final short VERSION_HI
    public static final short VERSION_LO
    38:39:public G3dModelLoader(com.badlogic.gdx.utils.BaseJsonReader)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader:
    87:87:public com.badlogic.gdx.graphics.g3d.Model loadObj(com.badlogic.gdx.files.FileHandle)
    97:97:public com.badlogic.gdx.graphics.g3d.Model loadObj(com.badlogic.gdx.files.FileHandle,boolean)
    102:102:public com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters:
    64:66:public ObjLoader$ObjLoaderParameters(boolean)
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute:
    public static final java.lang.String Alias
    12:12:public static final boolean is(long)
    31:32:public BlendingAttribute(int,int)
    42:42:public com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute copy()
    7:7:public bridge synthetic com.badlogic.gdx.graphics.g3d.materials.Material$Attribute copy()
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute:
    public static final java.lang.String DiffuseAlias
    public static final java.lang.String SpecularAlias
    public static final java.lang.String AmbientAlias
    public static final java.lang.String EmissiveAlias
    24:24:public static final com.badlogic.gdx.graphics.g3d.materials.ColorAttribute createDiffuse(com.badlogic.gdx.graphics.Color)
    28:28:public static final com.badlogic.gdx.graphics.g3d.materials.ColorAttribute createDiffuse(float,float,float,float)
    32:32:public static final com.badlogic.gdx.graphics.g3d.materials.ColorAttribute createSpecular(com.badlogic.gdx.graphics.Color)
    36:36:public static final com.badlogic.gdx.graphics.g3d.materials.ColorAttribute createSpecular(float,float,float,float)
    54:56:public ColorAttribute(long,float,float,float,float)
    59:60:public ColorAttribute(com.badlogic.gdx.graphics.g3d.materials.ColorAttribute)
    64:64:public com.badlogic.gdx.graphics.g3d.materials.Material$Attribute copy()
com.badlogic.gdx.graphics.g3d.materials.FloatAttribute:
    public static final java.lang.String ShininessAlias
    public static final java.lang.String AlphaTestAlias
    11:11:public static com.badlogic.gdx.graphics.g3d.materials.FloatAttribute createShininess(float)
    18:18:public static com.badlogic.gdx.graphics.g3d.materials.FloatAttribute createAlphaTest(float)
    24:25:public FloatAttribute(long)
    34:34:public com.badlogic.gdx.graphics.g3d.materials.Material$Attribute copy()
com.badlogic.gdx.graphics.g3d.materials.IntAttribute:
    public static final java.lang.String CullFaceAlias
    10:10:public static com.badlogic.gdx.graphics.g3d.materials.IntAttribute createCullFace(int)
    16:17:public IntAttribute(long)
    20:22:public IntAttribute(long,int)
    26:26:public com.badlogic.gdx.graphics.g3d.materials.Material$Attribute copy()
com.badlogic.gdx.graphics.g3d.materials.Material:
    86:88:public varargs Material(com.badlogic.gdx.graphics.g3d.materials.Material$Attribute[])
    91:93:public varargs Material(java.lang.String,com.badlogic.gdx.graphics.g3d.materials.Material$Attribute[])
    96:98:public Material(com.badlogic.gdx.utils.Array)
    101:103:public Material(java.lang.String,com.badlogic.gdx.utils.Array)
    106:107:public Material(com.badlogic.gdx.graphics.g3d.materials.Material)
    110:113:public Material(java.lang.String,com.badlogic.gdx.graphics.g3d.materials.Material)
    119:120:private final void disable(long)
    124:124:public final long getMask()
    157:159:public final varargs void set(com.badlogic.gdx.graphics.g3d.materials.Material$Attribute[])
    164:166:public final void set(com.badlogic.gdx.utils.Array)
    171:179:public final void remove(long)
    184:188:public final com.badlogic.gdx.graphics.g3d.materials.Material$Attribute get(long)
    194:197:public final com.badlogic.gdx.utils.Array get(com.badlogic.gdx.utils.Array,long)
    202:204:public final void clear()
    208:208:public int size()
    213:213:public final com.badlogic.gdx.graphics.g3d.materials.Material copy()
com.badlogic.gdx.graphics.g3d.materials.Material$Attribute:
    public abstract com.badlogic.gdx.graphics.g3d.materials.Material$Attribute copy()
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute:
    public static final java.lang.String DiffuseAlias
    public static final java.lang.String SpecularAlias
    public static final java.lang.String BumpAlias
    public static final java.lang.String NormalAlias
    29:29:public static com.badlogic.gdx.graphics.g3d.materials.TextureAttribute createDiffuse(com.badlogic.gdx.graphics.Texture)
    33:33:public static com.badlogic.gdx.graphics.g3d.materials.TextureAttribute createSpecular(com.badlogic.gdx.graphics.Texture)
    46:47:public TextureAttribute(long)
    50:51:public TextureAttribute(long,com.badlogic.gdx.graphics.Texture)
    54:55:public TextureAttribute(com.badlogic.gdx.graphics.g3d.materials.TextureAttribute)
    59:59:public com.badlogic.gdx.graphics.g3d.materials.Material$Attribute copy()
com.badlogic.gdx.graphics.g3d.model.Node:
    102:103:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    109:117:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    123:123:public com.badlogic.gdx.graphics.g3d.model.Node getChild(java.lang.String,boolean,boolean)
com.badlogic.gdx.graphics.g3d.model.NodePart:
    22:25:public NodePart(com.badlogic.gdx.graphics.g3d.model.MeshPart,com.badlogic.gdx.graphics.g3d.materials.Material)
    29:35:public com.badlogic.gdx.graphics.g3d.Renderable setRenderable(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.model.data.ModelData:
    25:31:public void addMesh(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial:
    public com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType type
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType:
    7:7:public static com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType[] values()
    7:7:public static com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType valueOf(java.lang.String)
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart:
    public int[][] uvMapping
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture:
    public static final int USAGE_UNKNOWN
    public static final int USAGE_NONE
    public static final int USAGE_DIFFUSE
    public static final int USAGE_EMISSIVE
    public static final int USAGE_AMBIENT
    public static final int USAGE_SPECULAR
    public static final int USAGE_SHININESS
    public static final int USAGE_NORMAL
    public static final int USAGE_BUMP
    public static final int USAGE_TRANSPARENCY
    public static final int USAGE_REFLECTION
com.badlogic.gdx.graphics.g3d.shaders.BaseShader:
    public static final int VERTEX_ATTRIBUTE
    public static final int GLOBAL_UNIFORM
    public static final int LOCAL_UNIFORM
    public com.badlogic.gdx.graphics.g3d.utils.RenderContext context
    public com.badlogic.gdx.graphics.Camera camera
    107:116:public com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input register(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input)
    120:120:public java.lang.Iterable getInputs()
    125:128:public com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input getInput(java.lang.String)
    133:157:public void init(com.badlogic.gdx.graphics.glutils.ShaderProgram,long,long,long)
    161:166:public void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext)
    170:174:public void render(com.badlogic.gdx.graphics.g3d.Renderable)
    178:179:public void end()
    192:192:public final boolean has(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input)
    196:199:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,com.badlogic.gdx.math.Matrix4)
    203:206:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,com.badlogic.gdx.math.Matrix3)
    210:213:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,com.badlogic.gdx.math.Vector3)
    217:220:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,com.badlogic.gdx.math.Vector2)
    224:227:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,com.badlogic.gdx.graphics.Color)
    231:234:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,float)
    238:241:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,float,float)
    245:248:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,float,float,float)
    252:255:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,float,float,float,float)
    259:262:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,int)
    266:269:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,int,int)
    273:276:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,int,int,int)
    280:283:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,int,int,int,int)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input:
    public final int scope
    public final java.lang.String name
    public final long materialFlags
    public final long vertexFlags
    public final long userFlags
    public final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input$Setter setter
    public int location
    52:52:public boolean compare(long,long,long)
    57:64:public BaseShader$Input(int,java.lang.String,long,long,long,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input$Setter)
    67:68:public BaseShader$Input(int,java.lang.String,long,long,long)
    71:72:public BaseShader$Input(int,java.lang.String,long,long,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input$Setter)
    75:76:public BaseShader$Input(int,java.lang.String,long,long)
    79:80:public BaseShader$Input(int,java.lang.String,long,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input$Setter)
    83:84:public BaseShader$Input(int,java.lang.String,long)
    87:88:public BaseShader$Input(int,java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input$Setter)
    91:92:public BaseShader$Input(int,java.lang.String)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input$Setter:
    public abstract void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext,com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader:
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_projTrans
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_cameraPosition
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_cameraDirection
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_cameraUp
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_worldTrans
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_normalMatrix
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_bones
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_shininess
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_opacity
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_diffuseColor
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_diffuseTexture
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_specularColor
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_specularTexture
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_normalTexture
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_alphaTest
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_ambientLight
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_ambientCubemap
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_dirLights0color
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_dirLights0direction
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_dirLights1color
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_pointLights0color
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_pointLights0position
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_pointLights0intensity
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_pointLights1color
    protected final com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_fogColor
    protected int dirLightsLoc
    protected int dirLightsColorOffset
    protected int dirLightsDirectionOffset
    protected int dirLightsSize
    protected int pointLightsLoc
    protected int pointLightsColorOffset
    protected int pointLightsPositionOffset
    protected int pointLightsIntensityOffset
    protected int pointLightsSize
    protected boolean lighting
    protected boolean fog
    protected final com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap ambientCubemap
    protected final com.badlogic.gdx.graphics.g3d.lights.DirectionalLight[] directionalLights
    protected final com.badlogic.gdx.graphics.g3d.lights.PointLight[] pointLights
    protected final float[] bones
    protected long materialMask
    protected long vertexMask
    protected static final long tangentAttribute
    protected static final long binormalAttribute
    private com.badlogic.gdx.graphics.Mesh currentMesh
    private com.badlogic.gdx.math.Matrix3 normalMatrix
    private com.badlogic.gdx.graphics.Camera camera
    com.badlogic.gdx.graphics.g3d.materials.Material currentMaterial
    com.badlogic.gdx.graphics.g3d.materials.TextureAttribute currentTextureAttribute
    private final com.badlogic.gdx.math.Vector3 tmpV1
    117:118:public DefaultShader(com.badlogic.gdx.graphics.g3d.materials.Material,com.badlogic.gdx.graphics.VertexAttributes,boolean,boolean,int,int,int,int)
    121:122:public DefaultShader(long,long,boolean,boolean,int,int,int,int)
    125:126:public DefaultShader(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.g3d.materials.Material,com.badlogic.gdx.graphics.VertexAttributes,boolean,boolean,int,int,int,int)
    129:131:public DefaultShader(java.lang.String,java.lang.String,long,long,boolean,boolean,int,int,int,int)
    134:135:public DefaultShader(java.lang.String,java.lang.String,java.lang.String,long,long,boolean,boolean,int,int,int,int)
    137:154:public DefaultShader(com.badlogic.gdx.graphics.glutils.ShaderProgram,long,long,boolean,boolean,int,int,int,int)
    158:172:public void init()
    181:191:protected static long getAttributesMask(com.badlogic.gdx.graphics.VertexAttributes)
    195:236:private static java.lang.String createPrefix(long,long,boolean,boolean,int,int,int,int)
    241:241:public boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable)
    248:248:private final boolean can(long)
    253:255:public int compareTo(com.badlogic.gdx.graphics.g3d.Shader)
    274:295:public void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext)
    298:300:private void setWorldTransform(com.badlogic.gdx.math.Matrix4)
    304:325:public void render(com.badlogic.gdx.graphics.g3d.Renderable)
    329:336:public void end()
    340:374:private final void bindMaterial(com.badlogic.gdx.graphics.g3d.Renderable)
    378:381:private final void bindTextureAttribute(int,com.badlogic.gdx.graphics.g3d.materials.TextureAttribute)
    385:443:private final void bindLights(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.shaders.GLES10Shader:
    private com.badlogic.gdx.graphics.Camera camera
    private com.badlogic.gdx.graphics.g3d.utils.RenderContext context
    private com.badlogic.gdx.math.Matrix4 currentTransform
    private com.badlogic.gdx.graphics.g3d.materials.Material currentMaterial
    private com.badlogic.gdx.graphics.Texture currentTexture0
    private com.badlogic.gdx.graphics.Mesh currentMesh
    44:44:public void init()
    48:48:public boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable)
    54:54:public int compareTo(com.badlogic.gdx.graphics.g3d.Shader)
    68:74:public void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext)
    80:115:private void bindLights(com.badlogic.gdx.graphics.g3d.lights.Lights)
    118:122:private static final float[] getValues(float[],float,float,float,float)
    126:126:private static final float[] getValues(float[],com.badlogic.gdx.graphics.Color)
    131:181:public void render(com.badlogic.gdx.graphics.g3d.Renderable)
    185:194:public void end()
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderConnection:
    9:14:ShaderConnection(com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode,com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderOutput,com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode,com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderInput)
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderDefine:
    7:10:ShaderDefine(java.lang.String,int)
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderGraph:
    private final com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode$ShaderNodeType type
    private final com.badlogic.gdx.utils.ObjectSet nodeSet
    private final com.badlogic.gdx.utils.ObjectMap connectionMap
    17:19:public ShaderGraph(com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode$ShaderNodeType)
    22:22:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode$ShaderNodeType getType()
    26:29:public void addNodeType(com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode)
    32:37:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode newNode(java.lang.String)
    41:53:public void connect(com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode,java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode,java.lang.String)
    56:62:private void addConnection(com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode,com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderConnection)
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderInput:
    14:18:ShaderInput(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderInput$ShaderInputQualifier)
    33:33:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderInput copy()
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderInput$ShaderInputQualifier:
    4:4:public static com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderInput$ShaderInputQualifier[] values()
    4:4:public static com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderInput$ShaderInputQualifier valueOf(java.lang.String)
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode:
    23:31:ShaderNode(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode$ShaderNodeType,com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array,java.lang.String)
    38:38:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode$ShaderNodeType getType()
    42:42:public com.badlogic.gdx.utils.Array getInputs()
    46:49:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderInput getInput(java.lang.String)
    53:53:public com.badlogic.gdx.utils.Array getOutputs()
    57:60:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderOutput getOutput(java.lang.String)
    64:64:public java.lang.String getCode()
    68:76:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode copy()
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode$ShaderNodeType:
    7:7:public static com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode$ShaderNodeType[] values()
    7:7:public static com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode$ShaderNodeType valueOf(java.lang.String)
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNodeBuilder:
    private java.lang.String name
    private com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode$ShaderNodeType type
    private java.lang.String code
    18:21:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNodeBuilder name(java.lang.String)
    25:27:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNodeBuilder type(com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode$ShaderNodeType)
    31:34:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNodeBuilder define(java.lang.String,int)
    38:41:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNodeBuilder require(java.lang.String)
    45:45:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNodeBuilder input(java.lang.String,java.lang.String)
    49:61:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNodeBuilder input(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderInput$ShaderInputQualifier)
    65:65:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNodeBuilder output(java.lang.String,java.lang.String)
    69:79:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNodeBuilder output(java.lang.String,java.lang.String,boolean)
    83:86:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNodeBuilder code(java.lang.String)
    90:94:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode build()
    98:105:public void clear()
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderOutput:
    8:12:ShaderOutput(java.lang.String,java.lang.String,boolean)
    27:27:public com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderOutput copy()
com.badlogic.gdx.graphics.g3d.shaders.graph.UniformNode:
    6:12:public UniformNode(java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.g3d.utils.AnimationController:
    protected final com.badlogic.gdx.utils.Pool animationPool
    public com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc current
    public com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queued
    public float queuedTransitionTime
    public com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc previous
    public float transitionCurrentTime
    public float transitionTargetTime
    public boolean inAction
    private boolean updating
    81:82:public AnimationController(com.badlogic.gdx.graphics.g3d.ModelInstance)
    85:91:private com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(com.badlogic.gdx.graphics.g3d.model.Animation,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener)
    95:98:private com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener)
    102:102:private com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc)
    108:129:public void update(float)
    133:134:public void setAnimation(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener)
    138:139:protected void setAnimation(com.badlogic.gdx.graphics.g3d.model.Animation,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener)
    143:153:protected void setAnimation(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc)
    157:158:public void animate(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
    162:163:protected void animate(com.badlogic.gdx.graphics.g3d.model.Animation,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
    167:183:protected void animate(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float)
    187:188:public void queue(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
    192:193:protected void queue(com.badlogic.gdx.graphics.g3d.model.Animation,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
    197:207:protected void queue(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float)
    211:212:public void action(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
    216:217:protected void action(com.badlogic.gdx.graphics.g3d.model.Animation,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
    221:233:protected void action(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController$1:
    final synthetic com.badlogic.gdx.graphics.g3d.utils.AnimationController this$0
    65:65:AnimationController$1(com.badlogic.gdx.graphics.g3d.utils.AnimationController)
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc:
    public com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener listener
    public com.badlogic.gdx.graphics.g3d.model.Animation animation
    public float speed
    public float time
    public int loopCount
    36:62:public float update(float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener:
    public abstract void onEnd(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc)
    public abstract void onLoop(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController:
    private final com.badlogic.gdx.utils.Pool transformPool
    private boolean applying
    public final com.badlogic.gdx.graphics.g3d.ModelInstance target
    70:72:public BaseAnimationController(com.badlogic.gdx.graphics.g3d.ModelInstance)
    77:80:protected void begin()
    85:88:protected void apply(com.badlogic.gdx.graphics.g3d.model.Animation,float,float)
    92:101:protected void end()
    105:109:protected void applyAnimation(com.badlogic.gdx.graphics.g3d.model.Animation,float)
    113:125:protected void applyAnimations(com.badlogic.gdx.graphics.g3d.model.Animation,float,com.badlogic.gdx.graphics.g3d.model.Animation,float,float)
    130:167:protected static void applyAnimation(com.badlogic.gdx.utils.ObjectMap,com.badlogic.gdx.utils.Pool,float,com.badlogic.gdx.graphics.g3d.model.Animation,float)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1:
    final synthetic com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController this$0
    60:60:BaseAnimationController$1(com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform:
    30:33:public com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3)
    36:36:public com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform set(com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform)
    39:39:public com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform lerp(com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform,float)
    42:45:public com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform lerp(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3,float)
    48:52:public com.badlogic.gdx.math.Matrix4 toMatrix4(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider:
    13:23:public com.badlogic.gdx.graphics.g3d.Shader getShader(com.badlogic.gdx.graphics.g3d.Renderable)
    protected abstract com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController:
    public boolean alwaysScroll
    public float scrollFactor
    public boolean scrollTarget
    56:58:public CameraInputController(com.badlogic.gdx.graphics.Camera)
    61:80:public void update()
    132:139:public boolean scrolled(int)
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter:
    18:20:public void sort(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider:
    20:21:public DefaultShaderProvider(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    29:33:protected com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder:
    public static final int ROUNDROBIN
    public static final int WEIGHTED
    public static final int MAX_GLES_UNITS
    private boolean reused
    40:41:public DefaultTextureBinder(int)
    78:82:public void begin()
    86:94:public void end()
    99:99:public final int bind(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor)
    104:128:private final int bindTexture(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor,boolean)
    133:143:private final int bindTextureRoundRobin(com.badlogic.gdx.graphics.Texture)
    147:165:private final int bindTextureWeighted(com.badlogic.gdx.graphics.Texture)
    169:169:public final int getBindCount()
    172:172:public final int getReuseCount()
    175:175:public final void resetCounts()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder:
    private com.badlogic.gdx.graphics.VertexAttributes attributes
    private int stride
    private short vindex
    private int istart
    private int posOffset
    private int posSize
    private int norOffset
    private int colOffset
    private int colSize
    private int cpOffset
    private int uvOffset
    private com.badlogic.gdx.graphics.g3d.model.MeshPart part
    private boolean colorSet
    private int primitiveType
    private float[] vertex
    94:106:public static com.badlogic.gdx.graphics.VertexAttributes createAttributes(long)
    113:114:public void begin(long)
    118:119:public void begin(com.badlogic.gdx.graphics.VertexAttributes)
    125:126:public void begin(long,int)
    130:157:public void begin(com.badlogic.gdx.graphics.VertexAttributes,int)
    160:166:private void endpart()
    170:181:public com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,int)
    186:202:public com.badlogic.gdx.graphics.Mesh end()
    207:207:public com.badlogic.gdx.graphics.VertexAttributes getAttributes()
    212:212:public com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart()
    225:227:private com.badlogic.gdx.math.Vector3 tmp(float,float,float)
    231:231:private com.badlogic.gdx.math.Vector3 tmp(com.badlogic.gdx.math.Vector3)
    235:237:private void cleanup()
    241:243:public void setColor(float,float,float,float)
    247:249:public void setColor(com.badlogic.gdx.graphics.Color)
    253:279:public short vertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2)
    284:286:public short vertex(float[])
    291:291:public short vertex(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    297:298:public void index(short)
    302:305:public void index(short,short)
    309:313:public void index(short,short,short)
    317:322:public void index(short,short,short,short)
    326:333:public void index(short,short,short,short,short,short)
    337:346:public void index(short,short,short,short,short,short,short,short)
    350:353:public void line(short,short)
    357:358:public void line(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    362:363:public void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    367:368:public void line(float,float,float,float,float,float)
    372:373:public void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color)
    377:383:public void triangle(short,short,short)
    387:388:public void triangle(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    392:393:public void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    397:398:public void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color)
    402:410:public void rect(short,short,short,short)
    414:415:public void rect(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    419:423:public void rect(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    427:431:public void rect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
    435:445:public void patch(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,int,int)
    449:454:public void patch(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int)
    459:478:public void box(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    483:499:public void box(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    503:506:public void box(com.badlogic.gdx.math.Matrix4)
    510:511:public void box(float,float,float)
    515:516:public void box(float,float,float,float,float,float)
    520:521:public void circle(float,float,float,float,float,float,float,float,int)
    525:526:public void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
    530:531:public void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
    535:536:public void circle(float,float,float,float,float,float,float,float,float,float,float,float,float,float,int)
    540:546:public void circle(float,float,float,float,float,float,float,float,int,float,float)
    550:551:public void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,float,float)
    555:556:public void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,float,float)
    560:581:public void circle(float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,float,float)
    585:586:public void cylinder(float,float,float,int)
    590:591:public void cylinder(float,float,float,int,float,float)
    596:630:public void cylinder(float,float,float,int,float,float,boolean)
    634:635:public void cone(float,float,float,int)
    640:665:public void cone(float,float,float,int,float,float)
    669:670:public void sphere(float,float,float,int,int)
    674:675:public void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int)
    679:680:public void sphere(float,float,float,int,int,float,float,float,float)
    685:716:public void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int,float,float,float,float)
    720:726:public void capsule(float,float,int)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder:
    public abstract com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart()
    public abstract com.badlogic.gdx.graphics.VertexAttributes getAttributes()
    public abstract void setColor(com.badlogic.gdx.graphics.Color)
    public abstract void setColor(float,float,float,float)
    public abstract short vertex(float[])
    public abstract short vertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2)
    public abstract short vertex(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    public abstract void index(short)
    public abstract void index(short,short)
    public abstract void index(short,short,short)
    public abstract void index(short,short,short,short)
    public abstract void index(short,short,short,short,short,short)
    public abstract void index(short,short,short,short,short,short,short,short)
    public abstract void line(short,short)
    public abstract void line(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    public abstract void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    public abstract void line(float,float,float,float,float,float)
    public abstract void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color)
    public abstract void triangle(short,short,short)
    public abstract void triangle(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    public abstract void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    public abstract void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color)
    public abstract void rect(short,short,short,short)
    public abstract void rect(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    public abstract void rect(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    public abstract void rect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
    public abstract void patch(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,int,int)
    public abstract void patch(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int)
    public abstract void box(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    public abstract void box(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    public abstract void box(com.badlogic.gdx.math.Matrix4)
    public abstract void box(float,float,float)
    public abstract void box(float,float,float,float,float,float)
    public abstract void circle(float,float,float,float,float,float,float,float,int)
    public abstract void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
    public abstract void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
    public abstract void circle(float,float,float,float,float,float,float,float,float,float,float,float,float,float,int)
    public abstract void circle(float,float,float,float,float,float,float,float,int,float,float)
    public abstract void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,float,float)
    public abstract void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,float,float)
    public abstract void circle(float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,float,float)
    public abstract void cylinder(float,float,float,int)
    public abstract void cylinder(float,float,float,int,float,float)
    public abstract void cylinder(float,float,float,int,float,float,boolean)
    public abstract void cone(float,float,float,int)
    public abstract void cone(float,float,float,int,float,float)
    public abstract void sphere(float,float,float,int,int)
    public abstract void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int)
    public abstract void sphere(float,float,float,int,int,float,float,float,float)
    public abstract void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int,float,float,float,float)
    public abstract void capsule(float,float,int)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo:
    public boolean hasPosition
    public boolean hasNormal
    public boolean hasColor
    public boolean hasUV
    139:148:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2)
    151:159:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo set(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    162:164:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setPos(float,float,float)
    167:169:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setPos(com.badlogic.gdx.math.Vector3)
    172:174:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setNor(float,float,float)
    177:179:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setNor(com.badlogic.gdx.math.Vector3)
    182:184:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setCol(float,float,float,float)
    187:189:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setCol(com.badlogic.gdx.graphics.Color)
    192:194:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setUV(float,float)
    197:199:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setUV(com.badlogic.gdx.math.Vector2)
    202:210:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo lerp(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,float)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder:
    private com.badlogic.gdx.graphics.g3d.Model model
    private com.badlogic.gdx.graphics.g3d.model.Node node
    35:41:private com.badlogic.gdx.graphics.g3d.utils.MeshBuilder getBuilder(com.badlogic.gdx.graphics.VertexAttributes)
    46:51:public void begin()
    56:67:public com.badlogic.gdx.graphics.g3d.Model end()
    71:74:private void endnode()
    78:86:protected com.badlogic.gdx.graphics.g3d.model.Node node(com.badlogic.gdx.graphics.g3d.model.Node)
    92:94:public com.badlogic.gdx.graphics.g3d.model.Node node()
    101:106:public com.badlogic.gdx.graphics.g3d.model.Node node(java.lang.String,com.badlogic.gdx.graphics.g3d.Model)
    111:114:public void manage(com.badlogic.gdx.utils.Disposable)
    120:123:public void part(com.badlogic.gdx.graphics.g3d.model.MeshPart,com.badlogic.gdx.graphics.g3d.materials.Material)
    130:137:public com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,int,int,com.badlogic.gdx.graphics.g3d.materials.Material)
    145:145:public com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.materials.Material)
    152:154:private com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder part(java.lang.String,int,com.badlogic.gdx.graphics.VertexAttributes,com.badlogic.gdx.graphics.g3d.materials.Material)
    163:163:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder part(java.lang.String,int,long,com.badlogic.gdx.graphics.g3d.materials.Material)
    172:172:public com.badlogic.gdx.graphics.g3d.Model createBox(float,float,float,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    181:183:public com.badlogic.gdx.graphics.g3d.Model createBox(float,float,float,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    192:192:public com.badlogic.gdx.graphics.g3d.Model createRect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    201:203:public com.badlogic.gdx.graphics.g3d.Model createRect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    212:212:public com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    221:221:public com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    230:230:public com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,com.badlogic.gdx.graphics.g3d.materials.Material,long,float,float)
    239:241:public com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long,float,float)
    250:250:public com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    259:259:public com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    268:268:public com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,com.badlogic.gdx.graphics.g3d.materials.Material,long,float,float)
    277:279:public com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long,float,float)
    288:288:public com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    297:297:public com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    306:306:public com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long,float,float,float,float)
    315:317:public com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long,float,float,float,float)
    326:326:public com.badlogic.gdx.graphics.g3d.Model createCapsule(float,float,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    335:337:public com.badlogic.gdx.graphics.g3d.Model createCapsule(float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    343:348:public static void rebuildReferences(com.badlogic.gdx.graphics.g3d.Model)
    351:363:private static void rebuildReferences(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.graphics.g3d.model.Node)
    368:368:public static com.badlogic.gdx.graphics.g3d.Model createFromMesh(com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.materials.Material)
    372:392:public static com.badlogic.gdx.graphics.g3d.Model createFromMesh(com.badlogic.gdx.graphics.Mesh,int,int,int,com.badlogic.gdx.graphics.g3d.materials.Material)
    396:399:public static com.badlogic.gdx.graphics.g3d.Model createFromMesh(float[],com.badlogic.gdx.graphics.VertexAttribute[],short[],int,com.badlogic.gdx.graphics.g3d.materials.Material)
com.badlogic.gdx.graphics.g3d.utils.RenderContext:
    private boolean blending
    private int blendSFactor
    private int blendDFactor
    private boolean depthTest
    private int depthFunc
    private int cullFace
    32:39:public final void begin()
    45:49:public final void end()
    52:63:public final void setDepthTest(boolean,int)
    66:78:public final void setBlending(boolean,int,int)
    81:90:public final void setCullFace(int)
com.badlogic.gdx.graphics.g3d.utils.RenderableSorter:
    public abstract void sort(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.utils.ShaderProvider:
    public abstract com.badlogic.gdx.graphics.g3d.Shader getShader(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.utils.TextureBinder:
    public abstract void begin()
    public abstract void end()
    public abstract int bind(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor)
    public abstract int getBindCount()
    public abstract int getReuseCount()
    public abstract void resetCounts()
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor:
    14:16:public TextureDescriptor(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    26:31:public void set(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    34:39:public void set(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor)
    42:47:public void reset()
com.badlogic.gdx.graphics.glutils.ETC1:
    157:160:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap)
    168:171:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap)
    public static native int getCompressedDataSize(int,int)
    public static native void formatHeader(java.nio.ByteBuffer,int,int,int)
    private static native java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int)
    private static native java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    54:60:public ETC1$ETC1Data(int,int,java.nio.ByteBuffer,int)
    105:129:public void write(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    38:39:public ETC1TextureData(com.badlogic.gdx.files.FileHandle)
    46:49:public ETC1TextureData(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,boolean)
com.badlogic.gdx.graphics.glutils.FileTextureData:
    128:128:public com.badlogic.gdx.files.FileHandle getFileHandle()
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer:
    39:40:public FloatFrameBuffer(int,int,boolean)
com.badlogic.gdx.graphics.glutils.FrameBuffer:
    93:101:public FrameBuffer(com.badlogic.gdx.graphics.Pixmap$Format,int,int,boolean)
    212:214:public void begin()
    218:220:public void end()
    223:227:private void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer)
    259:259:public com.badlogic.gdx.graphics.Texture getColorBufferTexture()
    264:264:public int getHeight()
    269:269:public int getWidth()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer:
    public abstract void begin(com.badlogic.gdx.math.Matrix4,int)
    public abstract void color(float,float,float,float)
    public abstract void texCoord(float,float)
    public abstract void normal(float,float,float)
    public abstract void vertex(float,float,float)
    public abstract void end()
    public abstract int getNumVertices()
    public abstract int getMaxVertices()
    public abstract void dispose()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10:
    private int primitiveType
    private boolean hasCols
    private boolean hasNors
    private boolean hasTexCoords
    private int numVertices
    94:100:public void begin(com.badlogic.gdx.math.Matrix4,int)
    107:116:public void begin(int)
    124:129:public void color(float,float,float,float)
    136:140:public void normal(float,float,float)
    146:149:public void texCoord(float,float)
    158:166:public void vertex(float,float,float)
    169:169:public int getNumVertices()
    173:173:public int getMaxVertices()
    178:213:public void end()
    216:217:public void vertex(com.badlogic.gdx.math.Vector3)
    221:221:public void dispose()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20:
    private int primitiveType
    private int vertexIdx
    private int numSetTexCoords
    private int numVertices
    50:52:public ImmediateModeRenderer20(boolean,boolean,int)
    91:94:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    97:99:public void begin(com.badlogic.gdx.math.Matrix4,int)
    102:103:public void color(float,float,float,float)
    106:110:public void texCoord(float,float)
    113:117:public void normal(float,float,float)
    120:128:public void vertex(float,float,float)
    131:143:public void end()
    146:146:public int getNumVertices()
    151:151:public int getMaxVertices()
    155:157:public void dispose()
com.badlogic.gdx.graphics.glutils.IndexArray:
    48:48:public int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    84:93:public IndexBufferObject(int)
    114:114:public int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    84:93:public IndexBufferObjectSubData(int)
    120:120:public int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.IndexData:
    public abstract int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    33:34:public static void setUseHardwareMipMap(boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram:
    public static final java.lang.String POSITION_ATTRIBUTE
    public static final java.lang.String NORMAL_ATTRIBUTE
    public static final java.lang.String COLOR_ATTRIBUTE
    public static final java.lang.String TEXCOORD_ATTRIBUTE
    public static final java.lang.String TANGENT_ATTRIBUTE
    public static final java.lang.String BINORMAL_ATTRIBUTE
    171:172:public ShaderProgram(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    313:316:public void setUniformi(int,int)
    325:329:public void setUniformi(java.lang.String,int,int)
    332:335:public void setUniformi(int,int,int)
    345:349:public void setUniformi(java.lang.String,int,int,int)
    352:355:public void setUniformi(int,int,int,int)
    366:370:public void setUniformi(java.lang.String,int,int,int,int)
    373:376:public void setUniformi(int,int,int,int,int)
    384:388:public void setUniformf(java.lang.String,float)
    391:394:public void setUniformf(int,float)
    403:407:public void setUniformf(java.lang.String,float,float)
    410:413:public void setUniformf(int,float,float)
    423:427:public void setUniformf(java.lang.String,float,float,float)
    430:433:public void setUniformf(int,float,float,float)
    444:448:public void setUniformf(java.lang.String,float,float,float,float)
    451:454:public void setUniformf(int,float,float,float,float)
    457:464:public void setUniform1fv(java.lang.String,float[],int,int)
    467:473:public void setUniform1fv(int,float[],int,int)
    476:483:public void setUniform2fv(java.lang.String,float[],int,int)
    486:492:public void setUniform2fv(int,float[],int,int)
    495:502:public void setUniform3fv(java.lang.String,float[],int,int)
    505:511:public void setUniform3fv(int,float[],int,int)
    514:521:public void setUniform4fv(java.lang.String,float[],int,int)
    524:530:public void setUniform4fv(int,float[],int,int)
    557:558:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4)
    561:566:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4,boolean)
    574:575:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3)
    584:591:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean)
    594:595:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3)
    598:604:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3,boolean)
    613:618:public void setUniformMatrix3fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
    627:632:public void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
    635:641:public void setUniformMatrix4fv(int,float[],int,int)
    644:651:public void setUniformMatrix4fv(java.lang.String,float[],int,int)
    659:660:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2)
    663:664:public void setUniformf(int,com.badlogic.gdx.math.Vector2)
    672:673:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3)
    676:677:public void setUniformf(int,com.badlogic.gdx.math.Vector3)
    685:686:public void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color)
    689:690:public void setUniformf(int,com.badlogic.gdx.graphics.Color)
    703:708:public void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer)
    727:732:public void setVertexAttribute(java.lang.String,int,int,boolean,int,int)
    786:791:public void enableVertexAttribute(java.lang.String)
    851:854:public void setAttributef(java.lang.String,float,float,float,float)
    857:862:private void ensureBufferCapacity(int)
    910:910:public boolean hasAttribute(java.lang.String)
    916:920:public int getAttributeType(java.lang.String)
    936:940:public int getAttributeSize(java.lang.String)
    946:946:public boolean hasUniform(java.lang.String)
    952:956:public int getUniformType(java.lang.String)
    962:966:public int getUniformLocation(java.lang.String)
    972:976:public int getUniformSize(java.lang.String)
    981:981:public java.lang.String[] getAttributes()
    986:986:public java.lang.String[] getUniforms()
    993:993:public java.lang.String getVertexShaderSource()
    1000:1000:public java.lang.String getFragmentShaderSource()
com.badlogic.gdx.graphics.glutils.ShapeRenderer:
    126:127:public void setColor(com.badlogic.gdx.graphics.Color)
    131:132:public void setColor(float,float,float,float)
    137:139:public void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
    142:142:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    146:148:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    151:151:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    156:158:public void identity()
    162:164:public void translate(float,float,float)
    169:171:public void rotate(float,float,float,float)
    175:177:public void scale(float,float,float)
    187:195:public void begin(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType)
    202:207:public void point(float,float,float)
    212:213:public final void line(float,float,float,float,float,float)
    219:220:public final void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    225:226:public final void line(float,float,float,float)
    232:233:public final void line(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    241:242:public final void line(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    249:256:public void line(float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    259:307:public void curve(float,float,float,float,float,float,float,float,int)
    310:337:public void triangle(float,float,float,float,float,float)
    342:383:public void rect(float,float,float,float)
    392:433:public void rect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    438:504:public void box(float,float,float,float,float,float)
    508:511:public void x(float,float,float)
    515:516:public void arc(float,float,float,float,float)
    519:572:public void arc(float,float,float,float,float,int)
    576:577:public void circle(float,float,float)
    580:629:public void circle(float,float,float,int)
    633:634:public void ellipse(float,float,float,float)
    637:668:public void ellipse(float,float,float,float,int)
    673:674:public void cone(float,float,float,float,float)
    677:733:public void cone(float,float,float,float,float,int)
    737:738:public void polygon(float[])
    744:774:public void polygon(float[],int,int)
    778:779:public void polyline(float[])
    785:807:public void polyline(float[],int,int)
    810:814:private void checkDirty()
    817:821:private void checkFlush(int)
    825:827:public void end()
    830:833:public void flush()
    837:837:public com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType getCurrentType()
    841:842:public void dispose()
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType:
    88:88:public static com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] values()
    88:88:public static com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType valueOf(java.lang.String)
    98:98:public int getGlType()
com.badlogic.gdx.graphics.glutils.VertexArray:
    83:83:public int getNumVertices()
    88:88:public int getNumMaxVertices()
    182:183:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    231:232:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    110:110:public int getNumVertices()
    115:115:public int getNumMaxVertices()
    203:204:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    290:291:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    118:118:public int getNumVertices()
    123:123:public int getNumMaxVertices()
    221:222:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    308:309:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    332:334:public void invalidate()
    361:361:public int getBufferHandle()
com.badlogic.gdx.graphics.glutils.VertexData:
    public abstract int getNumVertices()
    public abstract int getNumMaxVertices()
    public abstract void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    public abstract void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.input.GestureDetector:
    64:65:public GestureDetector(com.badlogic.gdx.input.GestureDetector$GestureListener)
    217:217:public boolean isLongPressed()
    223:224:public boolean isLongPressed(float)
    228:228:public boolean isPanning()
    232:235:public void reset()
    243:244:public void invalidateTapSquare()
    247:248:public void setTapSquareSize(int)
    252:253:public void setTapCountInterval(float)
    256:257:public void setLongPressSeconds(float)
    260:261:public void setMaxFlingDelay(long)
com.badlogic.gdx.input.GestureDetector$VelocityTracker:
    419:425:private float getSum(float[],int)
com.badlogic.gdx.input.RemoteInput:
    167:168:public RemoteInput(com.badlogic.gdx.input.RemoteInput$RemoteInputListener)
    278:278:public boolean isConnected()
    283:283:public float getAccelerometerX()
    288:288:public float getAccelerometerY()
    293:293:public float getAccelerometerZ()
    298:298:public int getX()
    303:303:public int getX(int)
    308:308:public int getY()
    313:313:public int getY(int)
    318:318:public boolean isTouched()
    323:323:public boolean justTouched()
    346:347:public void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    351:352:public void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    361:361:public void vibrate(int)
    366:366:public void vibrate(long[],int)
    371:371:public void cancelVibrate()
    375:375:public float getAzimuth()
    380:380:public float getPitch()
    385:385:public float getRoll()
    391:391:public void setCatchBackKey(boolean)
    400:400:public com.badlogic.gdx.InputProcessor getInputProcessor()
    405:405:public java.lang.String[] getIPs()
    410:413:public boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    418:418:public int getRotation()
    423:423:public com.badlogic.gdx.Input$Orientation getNativeOrientation()
    429:429:public void setCursorCatched(boolean)
    433:433:public boolean isCursorCatched()
    439:439:public int getDeltaX()
    444:444:public int getDeltaX(int)
    449:449:public int getDeltaY()
    454:454:public int getDeltaY(int)
    459:459:public void setCursorPosition(int,int)
    465:465:public void setCatchMenuKey(boolean)
    477:477:public void getRotationMatrix(float[])
com.badlogic.gdx.input.RemoteInput$KeyEvent:
    static final int KEY_DOWN
    static final int KEY_UP
    static final int KEY_TYPED
    long timeStamp
com.badlogic.gdx.input.RemoteInput$TouchEvent:
    static final int TOUCH_DOWN
    static final int TOUCH_UP
    static final int TOUCH_DRAGGED
    long timeStamp
com.badlogic.gdx.input.RemoteSender:
    public static final int KEY_DOWN
    public static final int KEY_UP
    public static final int KEY_TYPED
    public static final int TOUCH_DOWN
    public static final int TOUCH_UP
    public static final int TOUCH_DRAGGED
    public static final int ACCEL
    public static final int COMPASS
    public static final int SIZE
    46:58:public RemoteSender(java.lang.String,int)
    61:80:public void sendUpdate()
    192:192:public boolean mouseMoved(int,int)
    197:197:public boolean scrolled(int)
    201:203:public boolean isConnected()
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver:
    25:27:public ImageResolver$DirectImageResolver(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver:
    51:53:public ImageResolver$TextureAtlasImageResolver(com.badlogic.gdx.graphics.g2d.TextureAtlas)
com.badlogic.gdx.maps.MapLayer:
    33:33:public java.lang.String getName()
    47:47:public float getOpacity()
    68:68:public boolean isVisible()
com.badlogic.gdx.maps.MapLayers:
    19:19:public com.badlogic.gdx.maps.MapLayer get(int)
    27:32:public com.badlogic.gdx.maps.MapLayer get(java.lang.String)
    37:37:public int getCount()
    51:52:public void remove(int)
    58:59:public void remove(com.badlogic.gdx.maps.MapLayer)
    66:66:public com.badlogic.gdx.utils.Array getByType(java.lang.Class)
    76:82:public com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.maps.MapObject:
    19:19:public java.lang.String getName()
    33:33:public com.badlogic.gdx.graphics.Color getColor()
    40:41:public void setColor(com.badlogic.gdx.graphics.Color)
    47:47:public float getOpacity()
    54:55:public void setOpacity(float)
    61:61:public boolean isVisible()
com.badlogic.gdx.maps.MapObjects:
    27:27:public com.badlogic.gdx.maps.MapObject get(int)
    35:40:public com.badlogic.gdx.maps.MapObject get(java.lang.String)
    54:55:public void remove(int)
    61:62:public void remove(com.badlogic.gdx.maps.MapObject)
    68:68:public int getCount()
    76:76:public com.badlogic.gdx.utils.Array getByType(java.lang.Class)
    85:91:public com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.maps.MapProperties:
    60:61:public java.lang.Object get(java.lang.String,java.lang.Object,java.lang.Class)
    76:77:public void putAll(com.badlogic.gdx.maps.MapProperties)
    83:84:public void remove(java.lang.String)
    90:91:public void clear()
    97:97:public java.util.Iterator getKeys()
    104:104:public java.util.Iterator getValues()
com.badlogic.gdx.maps.MapRenderer:
    public abstract void setView(com.badlogic.gdx.graphics.OrthographicCamera)
    public abstract void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float)
    public abstract void render()
    public abstract void render(int[])
com.badlogic.gdx.maps.objects.CircleMapObject:
    17:17:public com.badlogic.gdx.math.Circle getCircle()
com.badlogic.gdx.maps.objects.EllipseMapObject:
    15:15:public com.badlogic.gdx.math.Ellipse getEllipse()
com.badlogic.gdx.maps.objects.PolygonMapObject:
    20:20:public com.badlogic.gdx.math.Polygon getPolygon()
    27:28:public void setPolygon(com.badlogic.gdx.math.Polygon)
com.badlogic.gdx.maps.objects.PolylineMapObject:
    17:17:public com.badlogic.gdx.math.Polyline getPolyline()
    24:25:public void setPolyline(com.badlogic.gdx.math.Polyline)
com.badlogic.gdx.maps.objects.RectangleMapObject:
    17:17:public com.badlogic.gdx.math.Rectangle getRectangle()
com.badlogic.gdx.maps.objects.TextureMapObject:
    24:24:public float getX()
    31:32:public void setX(float)
    38:38:public float getY()
    45:46:public void setY(float)
    52:52:public float getOriginX()
    59:60:public void setOriginX(float)
    66:66:public float getOriginY()
    73:74:public void setOriginY(float)
    80:80:public float getScaleX()
    87:88:public void setScaleX(float)
    94:94:public float getScaleY()
    101:102:public void setScaleY(float)
    108:108:public float getRotation()
    115:116:public void setRotation(float)
    122:122:public com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
    129:130:public void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader:
    protected static final int FLAG_FLIP_HORIZONTALLY
    protected static final int FLAG_FLIP_VERTICALLY
    protected static final int FLAG_FLIP_DIAGONALLY
    protected static final int MASK_CLEAR
    117:118:public AtlasTmxMapLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
    121:121:public com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String)
    151:175:public com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters)
    181:203:protected com.badlogic.gdx.files.FileHandle loadAtlas(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver:
    87:89:public AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.maps.tiled.TideMapLoader:
    42:43:public TideMapLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
    47:58:public com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String)
com.badlogic.gdx.maps.tiled.TiledMap:
    39:40:public void setOwnedResources(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.maps.tiled.TiledMapRenderer:
    public abstract void renderObject(com.badlogic.gdx.maps.MapObject)
    public abstract void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)
com.badlogic.gdx.maps.tiled.TiledMapTile:
    public abstract int getId()
    public abstract com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode()
    public abstract void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode)
    public abstract com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode:
    12:12:public static com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode[] values()
    12:12:public static com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode valueOf(java.lang.String)
com.badlogic.gdx.maps.tiled.TiledMapTileLayer:
    22:22:public int getWidth()
    29:29:public int getHeight()
    36:36:public float getTileWidth()
    43:43:public float getTileHeight()
    69:71:public com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell getCell(int,int)
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell:
    public static final int ROTATE_0
    public static final int ROTATE_90
    public static final int ROTATE_180
    public static final int ROTATE_270
    103:103:public com.badlogic.gdx.maps.tiled.TiledMapTile getTile()
    119:119:public boolean getFlipHorizontally()
    135:135:public boolean getFlipVertically()
    151:151:public int getRotation()
com.badlogic.gdx.maps.tiled.TiledMapTileSet:
    77:78:public void removeTile(int)
com.badlogic.gdx.maps.tiled.TiledMapTileSets:
    26:26:public com.badlogic.gdx.maps.tiled.TiledMapTileSet getTileSet(int)
    55:56:public void removeTileSet(int)
    62:63:public void removeTileSet(com.badlogic.gdx.maps.tiled.TiledMapTileSet)
com.badlogic.gdx.maps.tiled.TmxMapLoader:
    protected static final int FLAG_FLIP_HORIZONTALLY
    protected static final int FLAG_FLIP_VERTICALLY
    protected static final int FLAG_FLIP_DIAGONALLY
    protected static final int MASK_CLEAR
    79:80:public TmxMapLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
    88:88:public com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String)
    98:112:public com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters)
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer:
    protected com.badlogic.gdx.maps.tiled.TiledMap map
    protected float unitScale
    protected com.badlogic.gdx.math.Rectangle viewBounds
    28:28:public com.badlogic.gdx.maps.tiled.TiledMap getMap()
    32:33:public void setMap(com.badlogic.gdx.maps.tiled.TiledMap)
    36:36:public float getUnitScale()
    40:40:public com.badlogic.gdx.graphics.g2d.SpriteBatch getSpriteBatch()
    44:44:public com.badlogic.gdx.math.Rectangle getViewBounds()
    48:49:public BatchTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap)
    51:57:public BatchTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float)
    60:61:public BatchTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.SpriteBatch)
    63:69:public BatchTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float,com.badlogic.gdx.graphics.g2d.SpriteBatch)
    73:77:public void setView(com.badlogic.gdx.graphics.OrthographicCamera)
    81:83:public void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float)
    87:101:public void render()
    105:120:public void render(int[])
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer:
    private boolean yDown
    private float[] vertices
    54:54:public boolean isYdown()
    58:59:public void setYDown(boolean)
    62:63:public HexagonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap)
    66:67:public HexagonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float)
    70:71:public HexagonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.SpriteBatch)
    74:75:public HexagonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float,com.badlogic.gdx.graphics.g2d.SpriteBatch)
    81:196:public void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)
    201:201:public void renderObject(com.badlogic.gdx.maps.MapObject)
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer:
    private com.badlogic.gdx.maps.tiled.TiledMap map
    private float[] vertices
    40:41:public IsometricTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap)
    44:45:public IsometricTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.SpriteBatch)
    48:49:public IsometricTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float)
    52:53:public IsometricTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float,com.badlogic.gdx.graphics.g2d.SpriteBatch)
    58:58:public void renderObject(com.badlogic.gdx.maps.MapObject)
    62:193:public void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer:
    private float[] vertices
    38:39:public OrthogonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap)
    42:43:public OrthogonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.SpriteBatch)
    46:47:public OrthogonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float)
    50:51:public OrthogonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float,com.badlogic.gdx.graphics.g2d.SpriteBatch)
    56:56:public void renderObject(com.badlogic.gdx.maps.MapObject)
    60:198:public void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile:
    28:28:public int getId()
    38:38:public com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode()
    43:44:public void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode)
    48:49:public com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
    63:64:public static void updateAnimationBaseTime()
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile:
    22:22:public int getId()
    32:32:public com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode()
    37:38:public void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode)
    56:56:public com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
    73:79:public StaticTiledMapTile(com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile)
com.badlogic.gdx.math.BSpline:
    private static final float d6
    public com.badlogic.gdx.math.Vector[] controlPoints
    public com.badlogic.gdx.utils.Array knots
    public int degree
    public boolean continuous
    public int spanCount
    private com.badlogic.gdx.math.Vector tmp
    33:37:public static com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector)
    49:57:public static com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector)
    69:73:public static com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector)
    86:89:public static com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector)
    100:102:public BSpline(com.badlogic.gdx.math.Vector[],int,boolean)
    105:119:public com.badlogic.gdx.math.BSpline set(com.badlogic.gdx.math.Vector[],int,boolean)
    124:128:public com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float)
    133:133:public com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,int,float)
    138:138:public int nearest(com.badlogic.gdx.math.Vector)
    143:154:public int nearest(com.badlogic.gdx.math.Vector,int,int)
    159:159:public float approximate(com.badlogic.gdx.math.Vector)
    163:163:public float approximate(com.badlogic.gdx.math.Vector,int,int)
    167:189:public float approximate(com.badlogic.gdx.math.Vector,int)
    195:195:public float locate(com.badlogic.gdx.math.Vector)
    22:22:public bridge synthetic float locate(java.lang.Object)
    22:22:public bridge synthetic float approximate(java.lang.Object)
    22:22:public bridge synthetic java.lang.Object valueAt(java.lang.Object,float)
com.badlogic.gdx.math.Bezier:
    private com.badlogic.gdx.math.Vector tmp
    35:35:public static com.badlogic.gdx.math.Vector linear(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
    47:48:public static com.badlogic.gdx.math.Vector quadratic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
    61:64:public static com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
    71:73:public varargs Bezier(com.badlogic.gdx.math.Vector[])
    74:76:public Bezier(com.badlogic.gdx.math.Vector[],int,int)
    77:79:public Bezier(com.badlogic.gdx.utils.Array,int,int)
    82:82:public varargs com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.math.Vector[])
    85:91:public com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.math.Vector[],int,int)
    94:100:public com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.utils.Array,int,int)
    104:111:public com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float)
    116:123:public float approximate(com.badlogic.gdx.math.Vector)
    129:129:public float locate(com.badlogic.gdx.math.Vector)
    24:24:public bridge synthetic float locate(java.lang.Object)
    24:24:public bridge synthetic float approximate(java.lang.Object)
    24:24:public bridge synthetic java.lang.Object valueAt(java.lang.Object,float)
com.badlogic.gdx.math.CatmullRomSpline:
    public com.badlogic.gdx.math.Vector[] controlPoints
    public boolean continuous
    public int spanCount
    private com.badlogic.gdx.math.Vector tmp
    private com.badlogic.gdx.math.Vector tmp2
    32:36:public static com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector)
    48:55:public static com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector)
    65:67:public CatmullRomSpline(com.badlogic.gdx.math.Vector[],boolean)
    70:77:public com.badlogic.gdx.math.CatmullRomSpline set(com.badlogic.gdx.math.Vector[],boolean)
    82:86:public com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float)
    91:91:public com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,int,float)
    96:96:public int nearest(com.badlogic.gdx.math.Vector)
    101:112:public int nearest(com.badlogic.gdx.math.Vector,int,int)
    117:117:public float approximate(com.badlogic.gdx.math.Vector)
    121:121:public float approximate(com.badlogic.gdx.math.Vector,int,int)
    125:147:public float approximate(com.badlogic.gdx.math.Vector,int)
    152:152:public float locate(com.badlogic.gdx.math.Vector)
    23:23:public bridge synthetic float locate(java.lang.Object)
    23:23:public bridge synthetic float approximate(java.lang.Object)
    23:23:public bridge synthetic java.lang.Object valueAt(java.lang.Object,float)
com.badlogic.gdx.math.Circle:
    35:39:public Circle(com.badlogic.gdx.math.Vector2,float)
    42:45:public void set(float,float,float)
    48:51:public void set(com.badlogic.gdx.math.Circle)
    56:58:public void setPosition(com.badlogic.gdx.math.Vector2)
    64:66:public void setPosition(float,float)
    71:72:public void setX(float)
    77:78:public void setY(float)
    83:84:public void setRadius(float)
    93:95:public boolean contains(com.badlogic.gdx.math.Vector2)
    101:107:public boolean contains(com.badlogic.gdx.math.Circle)
    113:117:public boolean overlaps(com.badlogic.gdx.math.Circle)
com.badlogic.gdx.math.EarClippingTriangulator:
    private static final int CONCAVE
    private static final int TANGENTIAL
    private static final int CONVEX
    private java.util.List vertices
    private int vertexCount
    private int[] vertexTypes
    private java.util.List triangles
    53:99:public java.util.List computeTriangles(java.util.List)
    103:109:private boolean areVerticesClockwise()
    114:118:private int classifyVertex(int)
    122:126:private static int computeSpannedAreaSign(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    130:135:private int findEarTip()
    146:153:private int desperatelyFindEarTip()
    157:187:private boolean isEarTip(int)
    191:201:private void cutEarTip(int)
    204:204:private int computePreviousIndex(int)
    208:208:private int computeNextIndex(int)
com.badlogic.gdx.math.Ellipse:
    private static final long serialVersionUID
    29:34:public Ellipse(com.badlogic.gdx.math.Vector2,float,float)
    37:40:public boolean contains(float,float)
    44:44:public boolean contains(com.badlogic.gdx.math.Vector2)
    48:52:public void set(float,float,float,float)
    55:59:public void set(com.badlogic.gdx.math.Ellipse)
com.badlogic.gdx.math.FloatCounter:
    public int count
    public float total
    public float min
    public float max
    public float average
    public float latest
    public final com.badlogic.gdx.math.WindowedMean mean
    48:51:public FloatCounter(int)
    58:75:public void put(float)
    81:90:public void reset()
com.badlogic.gdx.math.Frustum:
    84:88:public boolean pointInFrustum(com.badlogic.gdx.math.Vector3)
    97:100:public boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float)
    109:112:public boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float)
    120:132:public boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.Interpolation$Bounce:
    240:241:public Interpolation$Bounce(float[],float[])
com.badlogic.gdx.math.Interpolation$BounceIn:
    330:331:public Interpolation$BounceIn(float[],float[])
com.badlogic.gdx.math.Interpolation$BounceOut:
    262:267:public Interpolation$BounceOut(float[],float[])
com.badlogic.gdx.math.Intersector:
    39:57:public static float getLowestPositiveRoot(float,float,float)
    73:85:public static boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    89:95:public static boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    102:102:public static int pointLineSide(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    108:108:public static int pointLineSide(float,float,float,float,float,float)
    117:129:public static boolean isPointInPolygon(java.util.List,com.badlogic.gdx.math.Vector2)
    140:157:public static float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    162:163:public static float distanceLinePoint(float,float,float,float,float,float)
    174:190:public static boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
    204:215:public static float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2)
    226:237:public static boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    252:264:public static float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    279:302:public static boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    318:358:public static boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3)
    369:455:public static boolean intersectRayBounds(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Vector3)
    466:502:public static boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox)
    518:542:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3)
    555:583:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3)
    594:616:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3)
    629:638:public static boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    649:668:public static boolean intersectLinePolygon(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Polygon)
    680:692:public static boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    696:696:static float det(float,float,float,float)
    700:700:static double detd(double,double,double,double)
    704:704:public static boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Circle)
    708:708:public static boolean overlaps(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
    712:732:public static boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Rectangle)
    741:741:public static boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon)
    752:752:public static boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Intersector$MinimumTranslationVector)
    763:902:public static boolean overlapConvexPolygons(float[],float[],com.badlogic.gdx.math.Intersector$MinimumTranslationVector)
    925:1020:public static void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)
    1025:1035:private static void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int)
    1038:1079:public static void main(java.lang.String[])
com.badlogic.gdx.math.Intersector$SplitTriangle:
    float[] edgeSplit
    boolean frontCurrent
    int frontOffset
    int backOffset
    1094:1098:public Intersector$SplitTriangle(int)
    1107:1108:void setSide(boolean)
    1111:1111:boolean getSide()
    1115:1122:void add(float[],int,int)
    1125:1131:void reset()
com.badlogic.gdx.math.MathUtils:
    public static final float nanoToSec
    public static final float PI
    public static final float PI2
    private static final int SIN_BITS
    private static final int SIN_MASK
    private static final int SIN_COUNT
    private static final float radFull
    private static final float degFull
    private static final float radToIndex
    private static final float degToIndex
    public static final float radiansToDegrees
    public static final float radDeg
    public static final float degreesToRadians
    public static final float degRad
    private static final int ATAN2_BITS
    private static final int ATAN2_BITS2
    private static final int ATAN2_MASK
    private static final int ATAN2_COUNT
    private static final int BIG_ENOUGH_INT
    private static final double BIG_ENOUGH_FLOOR
    private static final double CEIL
    private static final double BIG_ENOUGH_CEIL
    private static final double BIG_ENOUGH_ROUND
    104:126:public static final float atan2(float,float)
    140:140:public static final int random(int,int)
    145:145:public static final boolean randomBoolean()
    155:155:public static final float random(float)
    160:160:public static final float random(float,float)
    184:186:public static int clamp(int,int,int)
    190:192:public static short clamp(short,short,short)
    214:214:public static int floor(float)
    220:220:public static int floorPositive(float)
    226:226:public static int ceil(float)
    232:232:public static int ceilPositive(float)
    238:238:public static int round(float)
    243:243:public static int roundPositive(float)
com.badlogic.gdx.math.Matrix3:
    private static final long serialVersionUID
    private static final float DEGREE_TO_RAD
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M20
    public static final int M21
    public static final int M22
    45:47:public Matrix3(com.badlogic.gdx.math.Matrix3)
    72:94:public com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3)
    101:117:public com.badlogic.gdx.math.Matrix3 setToRotation(float)
    125:137:public com.badlogic.gdx.math.Matrix3 setToTranslation(float,float)
    144:156:public com.badlogic.gdx.math.Matrix3 setToTranslation(com.badlogic.gdx.math.Vector2)
    165:174:public com.badlogic.gdx.math.Matrix3 setToScaling(float,float)
    184:184:public float det()
    191:216:public com.badlogic.gdx.math.Matrix3 inv()
    223:224:public com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3)
    231:240:public com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4)
    247:249:public com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector2)
    257:259:public com.badlogic.gdx.math.Matrix3 trn(float,float)
    266:268:public com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3)
    277:289:public com.badlogic.gdx.math.Matrix3 translate(float,float)
    297:309:public com.badlogic.gdx.math.Matrix3 translate(com.badlogic.gdx.math.Vector2)
    317:334:public com.badlogic.gdx.math.Matrix3 rotate(float)
    343:353:public com.badlogic.gdx.math.Matrix3 scale(float,float)
    361:371:public com.badlogic.gdx.math.Matrix3 scale(com.badlogic.gdx.math.Vector2)
    377:377:public float[] getValues()
    384:386:public com.badlogic.gdx.math.Matrix3 scl(float)
    393:395:public com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector2)
    402:404:public com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3)
    411:423:public com.badlogic.gdx.math.Matrix3 transpose()
    434:455:private static void mul(float[],float[])
com.badlogic.gdx.math.Matrix4:
    private static final long serialVersionUID
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M03
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M13
    public static final int M20
    public static final int M21
    public static final int M22
    public static final int M23
    public static final int M30
    public static final int M31
    public static final int M32
    public static final int M33
    69:71:public Matrix4(float[])
    75:77:public Matrix4(com.badlogic.gdx.math.Quaternion)
    151:167:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    172:172:public com.badlogic.gdx.math.Matrix4 cpy()
    180:183:public com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3)
    193:196:public com.badlogic.gdx.math.Matrix4 trn(float,float,float)
    201:201:public float[] getValues()
    221:237:public com.badlogic.gdx.math.Matrix4 tra()
    332:332:public float det()
    399:400:public com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float)
    449:452:public com.badlogic.gdx.math.Matrix4 setTranslation(com.badlogic.gdx.math.Vector3)
    476:480:public com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float)
    490:497:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    512:519:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float)
    545:549:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float)
    557:557:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    569:569:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float)
    578:579:public com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float)
    587:591:public com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3)
    601:605:public com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float)
    659:664:public com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    677:679:public void lerp(com.badlogic.gdx.math.Matrix4,float)
    684:700:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3)
    704:707:public com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3)
    711:714:public com.badlogic.gdx.math.Matrix4 scl(float,float,float)
    718:721:public com.badlogic.gdx.math.Matrix4 scl(float)
    731:732:public void getRotation(com.badlogic.gdx.math.Quaternion)
    736:739:public com.badlogic.gdx.math.Matrix4 toNormalMatrix()
    public static native void mulVec(float[],float[])
    public static native void mulVec(float[],float[],int,int,int)
    public static native void prj(float[],float[])
    public static native void rot(float[],float[])
    public static native void rot(float[],float[],int,int,int)
    public static native float det(float[])
    1040:1042:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float)
    1053:1055:public com.badlogic.gdx.math.Matrix4 rotate(float,float,float,float)
    1074:1074:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Path:
    public abstract java.lang.Object valueAt(java.lang.Object,float)
    public abstract float approximate(java.lang.Object)
    public abstract float locate(java.lang.Object)
com.badlogic.gdx.math.Plane:
    private static final long serialVersionUID
    51:54:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    62:64:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    87:89:public void set(float,float,float,float)
    96:96:public float distance(com.badlogic.gdx.math.Vector3)
    105:112:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)
    123:130:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)
    139:140:public boolean isFrontFacing(com.badlogic.gdx.math.Vector3)
    145:145:public com.badlogic.gdx.math.Vector3 getNormal()
    150:150:public float getD()
    158:160:public void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    163:165:public void set(float,float,float,float,float,float)
    171:173:public void set(com.badlogic.gdx.math.Plane)
com.badlogic.gdx.math.Plane$PlaneSide:
    31:31:public static com.badlogic.gdx.math.Plane$PlaneSide[] values()
    31:31:public static com.badlogic.gdx.math.Plane$PlaneSide valueOf(java.lang.String)
com.badlogic.gdx.math.Polygon:
    private float[] worldVertices
    private float originX
    private float originY
    private float rotation
    private com.badlogic.gdx.math.Rectangle bounds
    52:52:public float[] getVertices()
    60:98:public float[] getTransformedVertices()
    103:106:public void setOrigin(float,float)
    125:136:public void setVertices(float[])
    140:143:public void translate(float,float)
    147:149:public void setRotation(float)
    153:155:public void rotate(float)
    159:162:public void setScale(float,float)
    166:169:public void scale(float)
    175:176:public void dirty()
    180:196:public float area()
    207:228:public com.badlogic.gdx.math.Rectangle getBoundingRectangle()
    233:244:public boolean contains(float,float)
    249:249:public float getX()
    254:254:public float getY()
    259:259:public float getOriginX()
    264:264:public float getOriginY()
    269:269:public float getRotation()
    274:274:public float getScaleX()
    279:279:public float getScaleY()
com.badlogic.gdx.math.Polyline:
    private float[] worldVertices
    private float originX
    private float originY
    private float rotation
    private float length
    private float scaledLength
    43:43:public float[] getVertices()
    48:86:public float[] getTransformedVertices()
    91:101:public float getLength()
    106:116:public float getScaledLength()
    120:120:public float getX()
    124:124:public float getY()
    128:128:public float getOriginX()
    132:132:public float getOriginY()
    136:136:public float getRotation()
    140:140:public float getScaleX()
    144:144:public float getScaleY()
    148:151:public void setOrigin(float,float)
    160:162:public void setRotation(float)
    165:167:public void rotate(float)
    170:174:public void setScale(float,float)
    177:181:public void scale(float)
    184:185:public void calculateLength()
    188:189:public void calculateScaledLength()
    192:193:public void dirty()
    196:199:public void translate(float,float)
com.badlogic.gdx.math.Quaternion:
    private static final long serialVersionUID
    private static final float NORMALIZATION_TOLERANCE
    54:56:public Quaternion(com.badlogic.gdx.math.Quaternion)
    62:64:public Quaternion(com.badlogic.gdx.math.Vector3,float)
    98:98:public com.badlogic.gdx.math.Quaternion cpy()
    103:103:public float len()
    117:138:public com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float)
    164:167:public com.badlogic.gdx.math.Quaternion conjugate()
    175:182:public com.badlogic.gdx.math.Vector3 transform(com.badlogic.gdx.math.Vector3)
    190:198:public com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion)
    206:214:public com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion)
    264:264:public com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float)
    291:291:public com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4)
    317:354:public com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float)
    362:364:public com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    376:378:public com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float)
    387:425:public com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float)
    444:444:public float dot(com.badlogic.gdx.math.Quaternion)
    451:455:public com.badlogic.gdx.math.Quaternion mul(float)
com.badlogic.gdx.math.Rectangle:
    private static final long serialVersionUID
    50:55:public Rectangle(com.badlogic.gdx.math.Rectangle)
    58:62:public void set(float,float,float,float)
    66:66:public float getX()
    72:73:public void setX(float)
    77:77:public float getY()
    83:84:public void setY(float)
    88:88:public float getWidth()
    94:95:public void setWidth(float)
    99:99:public float getHeight()
    105:106:public void setHeight(float)
    111:111:public com.badlogic.gdx.math.Vector2 getPosition(com.badlogic.gdx.math.Vector2)
    117:119:public void setPosition(com.badlogic.gdx.math.Vector2)
    125:127:public void setPosition(float,float)
    133:135:public void setSize(float,float)
    140:142:public void setSize(float)
    147:147:public com.badlogic.gdx.math.Vector2 getSize(com.badlogic.gdx.math.Vector2)
    160:160:public boolean contains(com.badlogic.gdx.math.Vector2)
    166:172:public boolean contains(com.badlogic.gdx.math.Rectangle)
    185:189:public void set(com.badlogic.gdx.math.Rectangle)
    194:203:public void merge(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Vector:
    public abstract com.badlogic.gdx.math.Vector cpy()
    public abstract float len()
    public abstract float len2()
    public abstract com.badlogic.gdx.math.Vector limit(float)
    public abstract com.badlogic.gdx.math.Vector clamp(float,float)
    public abstract com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
    public abstract com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
    public abstract com.badlogic.gdx.math.Vector nor()
    public abstract com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
    public abstract float dot(com.badlogic.gdx.math.Vector)
    public abstract com.badlogic.gdx.math.Vector scl(float)
    public abstract com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
    public abstract float dst(com.badlogic.gdx.math.Vector)
    public abstract float dst2(com.badlogic.gdx.math.Vector)
    public abstract com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector2:
    private static final long serialVersionUID
    67:67:public float len2()
    93:95:public com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2)
    131:131:public float dot(com.badlogic.gdx.math.Vector2)
    145:145:public com.badlogic.gdx.math.Vector2 mul(float)
    158:158:public com.badlogic.gdx.math.Vector2 mul(float,float)
    164:166:public com.badlogic.gdx.math.Vector2 scl(com.badlogic.gdx.math.Vector2)
    171:171:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2)
    175:175:public com.badlogic.gdx.math.Vector2 div(float)
    179:179:public com.badlogic.gdx.math.Vector2 div(float,float)
    183:183:public com.badlogic.gdx.math.Vector2 div(com.badlogic.gdx.math.Vector2)
    198:200:public float dst(float,float)
    206:208:public float dst2(com.badlogic.gdx.math.Vector2)
    215:217:public float dst2(float,float)
    224:228:public com.badlogic.gdx.math.Vector2 limit(float)
    236:243:public com.badlogic.gdx.math.Vector2 clamp(float,float)
    255:257:public com.badlogic.gdx.math.Vector2 sub(float,float)
    264:268:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3)
    275:275:public float crs(com.badlogic.gdx.math.Vector2)
    283:283:public float crs(float,float)
    289:291:public float angle()
    297:299:public void setAngle(float)
    304:314:public com.badlogic.gdx.math.Vector2 rotate(float)
    324:327:public com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float)
    355:358:public boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float)
    367:369:public boolean epsilonEquals(float,float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic float dst2(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic float dst(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(float)
    25:25:public bridge synthetic float dot(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector nor()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector clamp(float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector limit(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.Vector3:
    private static final long serialVersionUID
    69:71:public Vector3(com.badlogic.gdx.math.Vector3)
    76:78:public Vector3(float[])
    106:106:public com.badlogic.gdx.math.Vector3 set(float[])
    111:111:public com.badlogic.gdx.math.Vector3 cpy()
    138:138:com.badlogic.gdx.math.Vector3 tmp3()
    163:163:public com.badlogic.gdx.math.Vector3 add(float)
    188:188:public com.badlogic.gdx.math.Vector3 sub(float)
    200:200:public com.badlogic.gdx.math.Vector3 mul(float)
    207:207:public com.badlogic.gdx.math.Vector3 scl(com.badlogic.gdx.math.Vector3)
    212:212:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Vector3)
    221:221:public com.badlogic.gdx.math.Vector3 scl(float,float,float)
    226:226:public com.badlogic.gdx.math.Vector3 mul(float,float,float)
    231:231:public com.badlogic.gdx.math.Vector3 scale(float,float,float)
    239:239:public com.badlogic.gdx.math.Vector3 div(float)
    245:245:public com.badlogic.gdx.math.Vector3 div(float,float,float)
    251:251:public com.badlogic.gdx.math.Vector3 div(com.badlogic.gdx.math.Vector3)
    261:261:public float len()
    266:266:public static float len2(float,float,float)
    277:277:public boolean idt(com.badlogic.gdx.math.Vector3)
    282:285:public static float dst(float,float,float,float,float,float)
    299:302:public float dst(float,float,float)
    307:310:public static float dst2(float,float,float,float,float,float)
    329:332:public float dst2(float,float,float)
    346:346:public static float dot(float,float,float,float,float,float)
    361:361:public float dot(float,float,float)
    377:377:public com.badlogic.gdx.math.Vector3 crs(float,float,float)
    393:393:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Quaternion)
    414:415:public com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4)
    426:426:public com.badlogic.gdx.math.Vector3 rotate(float,float,float,float)
    441:441:public boolean isUnit()
    446:446:public boolean isUnit(float)
    451:451:public boolean isZero()
    456:456:public boolean isZero(float)
    466:468:public com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float)
    478:495:public com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float)
    506:508:public com.badlogic.gdx.math.Vector3 limit(float)
    516:523:public com.badlogic.gdx.math.Vector3 clamp(float,float)
    553:557:public boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float)
    563:566:public boolean epsilonEquals(float,float,float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic float dst2(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic float dst(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(float)
    25:25:public bridge synthetic float dot(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector nor()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector clamp(float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector limit(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.WindowedMean:
    83:83:public float getOldest()
    88:88:public float getLatest()
    93:101:public float standardDeviation()
com.badlogic.gdx.math.collision.BoundingBox:
    private static final long serialVersionUID
    40:40:public com.badlogic.gdx.math.Vector3 getCenter()
    44:55:protected void updateCorners()
    59:60:public com.badlogic.gdx.math.Vector3[] getCorners()
    65:65:public com.badlogic.gdx.math.Vector3 getDimensions()
    70:70:public com.badlogic.gdx.math.Vector3 getMin()
    75:75:public synchronized com.badlogic.gdx.math.Vector3 getMax()
    89:94:public BoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    100:105:public BoundingBox(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    112:113:public com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.collision.BoundingBox)
    137:141:public com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3[])
    149:153:public com.badlogic.gdx.math.collision.BoundingBox set(java.util.List)
    160:165:public com.badlogic.gdx.math.collision.BoundingBox inf()
    173:174:public com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.Vector3)
    190:190:public boolean isValid()
    198:199:public com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox)
    209:217:public com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Matrix4)
    226:234:public com.badlogic.gdx.math.collision.BoundingBox mul(com.badlogic.gdx.math.Matrix4)
    241:241:public boolean contains(com.badlogic.gdx.math.collision.BoundingBox)
    249:249:public boolean contains(com.badlogic.gdx.math.Vector3)
    264:265:public com.badlogic.gdx.math.collision.BoundingBox ext(float,float,float)
    269:269:static float min(float,float)
    273:273:static float max(float,float)
com.badlogic.gdx.math.collision.Ray:
    private static final long serialVersionUID
    43:43:public com.badlogic.gdx.math.collision.Ray cpy()
    51:51:public com.badlogic.gdx.math.Vector3 getEndPoint(float)
    59:59:public com.badlogic.gdx.math.Vector3 getEndPoint(com.badlogic.gdx.math.Vector3,float)
    69:73:public com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4)
    87:89:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    102:104:public com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float)
    112:114:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray)
com.badlogic.gdx.math.collision.Segment:
    private static final long serialVersionUID
    public final com.badlogic.gdx.math.Vector3 a
    public final com.badlogic.gdx.math.Vector3 b
    39:42:public Segment(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    51:54:public Segment(float,float,float,float,float,float)
com.badlogic.gdx.math.collision.Sphere:
    private static final long serialVersionUID
    public float radius
    public final com.badlogic.gdx.math.Vector3 center
    36:39:public Sphere(com.badlogic.gdx.math.Vector3,float)
    44:44:public boolean overlaps(com.badlogic.gdx.math.collision.Sphere)
com.badlogic.gdx.net.HttpParametersUtils:
    23:32:public static java.lang.String convertHttpParameters(java.util.Map)
    37:39:private static java.lang.String encode(java.lang.String,java.lang.String)
com.badlogic.gdx.net.HttpStatus:
    public static final int SC_CONTINUE
    public static final int SC_SWITCHING_PROTOCOLS
    public static final int SC_PROCESSING
    public static final int SC_OK
    public static final int SC_CREATED
    public static final int SC_ACCEPTED
    public static final int SC_NON_AUTHORITATIVE_INFORMATION
    public static final int SC_NO_CONTENT
    public static final int SC_RESET_CONTENT
    public static final int SC_PARTIAL_CONTENT
    public static final int SC_MULTI_STATUS
    public static final int SC_MULTIPLE_CHOICES
    public static final int SC_MOVED_PERMANENTLY
    public static final int SC_MOVED_TEMPORARILY
    public static final int SC_SEE_OTHER
    public static final int SC_NOT_MODIFIED
    public static final int SC_USE_PROXY
    public static final int SC_TEMPORARY_REDIRECT
    public static final int SC_BAD_REQUEST
    public static final int SC_UNAUTHORIZED
    public static final int SC_PAYMENT_REQUIRED
    public static final int SC_FORBIDDEN
    public static final int SC_NOT_FOUND
    public static final int SC_METHOD_NOT_ALLOWED
    public static final int SC_NOT_ACCEPTABLE
    public static final int SC_PROXY_AUTHENTICATION_REQUIRED
    public static final int SC_REQUEST_TIMEOUT
    public static final int SC_CONFLICT
    public static final int SC_GONE
    public static final int SC_LENGTH_REQUIRED
    public static final int SC_PRECONDITION_FAILED
    public static final int SC_REQUEST_TOO_LONG
    public static final int SC_REQUEST_URI_TOO_LONG
    public static final int SC_UNSUPPORTED_MEDIA_TYPE
    public static final int SC_REQUESTED_RANGE_NOT_SATISFIABLE
    public static final int SC_EXPECTATION_FAILED
    public static final int SC_INSUFFICIENT_SPACE_ON_RESOURCE
    public static final int SC_METHOD_FAILURE
    public static final int SC_UNPROCESSABLE_ENTITY
    public static final int SC_LOCKED
    public static final int SC_FAILED_DEPENDENCY
    public static final int SC_INTERNAL_SERVER_ERROR
    public static final int SC_NOT_IMPLEMENTED
    public static final int SC_BAD_GATEWAY
    public static final int SC_SERVICE_UNAVAILABLE
    public static final int SC_GATEWAY_TIMEOUT
    public static final int SC_HTTP_VERSION_NOT_SUPPORTED
    public static final int SC_INSUFFICIENT_STORAGE
    22:22:public int getStatusCode()
com.badlogic.gdx.net.NetJavaImpl:
    115:209:public void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
com.badlogic.gdx.net.NetJavaImpl$1:
    final synthetic com.badlogic.gdx.net.NetJavaImpl this$0
    151:151:NetJavaImpl$1(com.badlogic.gdx.net.NetJavaImpl,boolean,com.badlogic.gdx.Net$HttpRequest,java.net.HttpURLConnection,com.badlogic.gdx.Net$HttpResponseListener)
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse:
    56:69:public byte[] getResult()
    74:82:public java.lang.String getResultAsString()
    88:88:public java.io.InputStream getResultAsStream()
    93:93:public com.badlogic.gdx.net.HttpStatus getStatus()
    98:98:public java.lang.String getHeader(java.lang.String)
    103:103:public java.util.Map getHeaders()
com.badlogic.gdx.net.ServerSocket:
    public abstract com.badlogic.gdx.Net$Protocol getProtocol()
    public abstract com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints)
com.badlogic.gdx.net.Socket:
    public abstract boolean isConnected()
    public abstract java.io.InputStream getInputStream()
    public abstract java.io.OutputStream getOutputStream()
com.badlogic.gdx.physics.box2d.Body:
    private java.lang.Object userData
    60:66:protected void reset(long)
    74:80:public com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef)
    private native long jniCreateFixture(long,long,float,float,float,boolean,short,short,short)
    108:113:public com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float)
    private native long jniCreateFixture(long,long,float)
    128:132:public void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture)
    private native void jniDestroyFixture(long,long)
    145:146:public void setTransform(com.badlogic.gdx.math.Vector2,float)
    154:155:public void setTransform(float,float,float)
    private native void jniSetTransform(long,float,float,float)
    166:167:public com.badlogic.gdx.physics.box2d.Transform getTransform()
    private native void jniGetTransform(long,float[])
    184:187:public com.badlogic.gdx.math.Vector2 getPosition()
    private native void jniGetPosition(long,float[])
    200:200:public float getAngle()
    private native float jniGetAngle(long)
    212:215:public com.badlogic.gdx.math.Vector2 getWorldCenter()
    private native void jniGetWorldCenter(long,float[])
    229:232:public com.badlogic.gdx.math.Vector2 getLocalCenter()
    private native void jniGetLocalCenter(long,float[])
    244:245:public void setLinearVelocity(com.badlogic.gdx.math.Vector2)
    249:250:public void setLinearVelocity(float,float)
    private native void jniSetLinearVelocity(long,float,float)
    261:264:public com.badlogic.gdx.math.Vector2 getLinearVelocity()
    private native void jniGetLinearVelocity(long,float[])
    276:277:public void setAngularVelocity(float)
    private native void jniSetAngularVelocity(long,float)
    286:286:public float getAngularVelocity()
    private native float jniGetAngularVelocity(long)
    300:301:public void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean)
    311:312:public void applyForce(float,float,float,float,boolean)
    private native void jniApplyForce(long,float,float,float,float,boolean)
    322:323:public void applyForceToCenter(com.badlogic.gdx.math.Vector2,boolean)
    329:330:public void applyForceToCenter(float,float,boolean)
    private native void jniApplyForceToCenter(long,float,float,boolean)
    342:343:public void applyTorque(float,boolean)
    private native void jniApplyTorque(long,float,boolean)
    356:357:public void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean)
    367:368:public void applyLinearImpulse(float,float,float,float,boolean)
    private native void jniApplyLinearImpulse(long,float,float,float,float,boolean)
    378:379:public void applyAngularImpulse(float,boolean)
    private native void jniApplyAngularImpulse(long,float,boolean)
    389:389:public float getMass()
    private native float jniGetMass(long)
    400:400:public float getInertia()
    private native float jniGetInertia(long)
    413:418:public com.badlogic.gdx.physics.box2d.MassData getMassData()
    private native void jniGetMassData(long,float[])
    435:436:public void setMassData(com.badlogic.gdx.physics.box2d.MassData)
    private native void jniSetMassData(long,float,float,float,float)
    451:452:public void resetMassData()
    private native void jniResetMassData(long)
    465:468:public com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetWorldPoint(long,float,float,float[])
    484:487:public com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2)
    private native void jniGetWorldVector(long,float,float,float[])
    503:506:public com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLocalPoint(long,float,float,float[])
    522:525:public com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2)
    private native void jniGetLocalVector(long,float,float,float[])
    541:544:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLinearVelocityFromWorldPoint(long,float,float,float[])
    560:563:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLinearVelocityFromLocalPoint(long,float,float,float[])
    575:575:public float getLinearDamping()
    private native float jniGetLinearDamping(long)
    585:586:public void setLinearDamping(float)
    private native void jniSetLinearDamping(long,float)
    595:595:public float getAngularDamping()
    private native float jniGetAngularDamping(long)
    605:606:public void setAngularDamping(float)
    private native void jniSetAngularDamping(long,float)
    615:616:public void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType)
    private native void jniSetType(long,int)
    640:644:public com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType()
    private native int jniGetType(long)
    654:655:public void setBullet(boolean)
    private native void jniSetBullet(long,boolean)
    664:664:public boolean isBullet()
    private native boolean jniIsBullet(long)
    674:675:public void setSleepingAllowed(boolean)
    private native void jniSetSleepingAllowed(long,boolean)
    684:684:public boolean isSleepingAllowed()
    private native boolean jniIsSleepingAllowed(long)
    695:696:public void setAwake(boolean)
    private native void jniSetAwake(long,boolean)
    706:706:public boolean isAwake()
    private native boolean jniIsAwake(long)
    721:722:public void setActive(boolean)
    private native void jniSetActive(long,boolean)
    731:731:public boolean isActive()
    private native boolean jniIsActive(long)
    741:742:public void setFixedRotation(boolean)
    private native void jniSetFixedRotation(long,boolean)
    751:751:public boolean isFixedRotation()
    private native boolean jniIsFixedRotation(long)
    761:761:public java.util.ArrayList getFixtureList()
    766:766:public java.util.ArrayList getJointList()
    779:779:public float getGravityScale()
    private native float jniGetGravityScale(long)
    789:790:public void setGravityScale(float)
    private native void jniSetGravityScale(long,float)
    799:799:public com.badlogic.gdx.physics.box2d.World getWorld()
    804:804:public java.lang.Object getUserData()
    809:810:public void setUserData(java.lang.Object)
com.badlogic.gdx.physics.box2d.BodyDef$BodyType:
    28:28:public static com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] values()
    28:28:public static com.badlogic.gdx.physics.box2d.BodyDef$BodyType valueOf(java.lang.String)
    38:38:public int getValue()
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer:
    78:80:public void render(com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.math.Matrix4)
    92:119:private void renderBodies(com.badlogic.gdx.physics.box2d.World)
    122:136:protected void renderBody(com.badlogic.gdx.physics.box2d.Body)
    139:148:private com.badlogic.gdx.graphics.Color getColorByBody(com.badlogic.gdx.physics.box2d.Body)
    152:192:private void drawAABB(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform)
    198:236:private void drawShape(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform,com.badlogic.gdx.graphics.Color)
    243:258:private void drawSolidCircle(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color)
    261:270:private void drawSolidPolygon(com.badlogic.gdx.math.Vector2[],int,com.badlogic.gdx.graphics.Color,boolean)
    273:299:private void drawJoint(com.badlogic.gdx.physics.box2d.Joint)
    302:304:private void drawSegment(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color)
    307:312:private void drawContact(com.badlogic.gdx.physics.box2d.Contact)
    315:315:public boolean isDrawBodies()
    319:320:public void setDrawBodies(boolean)
    323:323:public boolean isDrawJoints()
    327:328:public void setDrawJoints(boolean)
    331:331:public boolean isDrawAABBs()
    335:336:public void setDrawAABBs(boolean)
    339:339:public boolean isDrawInactiveBodies()
    343:344:public void setDrawInactiveBodies(boolean)
    347:347:public boolean isDrawVelocities()
    351:352:public void setDrawVelocities(boolean)
    355:355:public boolean isDrawContacts()
    359:360:public void setDrawContacts(boolean)
    363:363:public static com.badlogic.gdx.math.Vector2 getAxis()
    367:368:public static void setAxis(com.badlogic.gdx.math.Vector2)
    371:372:public void dispose()
com.badlogic.gdx.physics.box2d.ChainShape:
    36:38:ChainShape(long)
    42:42:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    48:55:public void createLoop(com.badlogic.gdx.math.Vector2[])
    private native void jniCreateLoop(long,float[],int)
    69:71:public void createChain(float[])
    76:82:public void createChain(com.badlogic.gdx.math.Vector2[])
    private native void jniCreateChain(long,float[],int)
    95:96:public void setPrevVertex(com.badlogic.gdx.math.Vector2)
    100:101:public void setPrevVertex(float,float)
    private native void jniSetPrevVertex(long,float,float)
    110:111:public void setNextVertex(com.badlogic.gdx.math.Vector2)
    115:116:public void setNextVertex(float,float)
    private native void jniSetNextVertex(long,float,float)
    125:125:public int getVertexCount()
    private native int jniGetVertexCount(long)
    139:142:public void getVertex(int,com.badlogic.gdx.math.Vector2)
    private native void jniGetVertex(long,int,float[])
    152:152:public boolean isLooped()
com.badlogic.gdx.physics.box2d.CircleShape:
    37:39:protected CircleShape(long)
    44:44:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    52:55:public com.badlogic.gdx.math.Vector2 getPosition()
    private native void jniGetPosition(long,float[])
    66:67:public void setPosition(com.badlogic.gdx.math.Vector2)
    private native void jniSetPosition(long,float,float)
com.badlogic.gdx.physics.box2d.Contact:
    protected long addr
    protected com.badlogic.gdx.physics.box2d.World world
    protected final com.badlogic.gdx.physics.box2d.WorldManifold worldManifold
    private final float[] tmp
    39:42:protected Contact(com.badlogic.gdx.physics.box2d.World,long)
    48:58:public com.badlogic.gdx.physics.box2d.WorldManifold getWorldManifold()
    private native int jniGetWorldManifold(long,float[])
    80:80:public boolean isTouching()
    private native boolean jniIsTouching(long)
    91:92:public void setEnabled(boolean)
    private native void jniSetEnabled(long,boolean)
    101:101:public boolean isEnabled()
    private native boolean jniIsEnabled(long)
    111:111:public com.badlogic.gdx.physics.box2d.Fixture getFixtureA()
    private native long jniGetFixtureA(long)
    121:121:public com.badlogic.gdx.physics.box2d.Fixture getFixtureB()
    private native long jniGetFixtureB(long)
    131:131:public int getChildIndexA()
    private native int jniGetChildIndexA(long)
    141:141:public int getChildIndexB()
    private native int jniGetChildIndexB(long)
    152:153:public void setFriction(float)
    private native void jniSetFriction(long,float)
    162:162:public float getFriction()
    private native float jniGetFriction(long)
    172:173:public void resetFriction()
    private native void jniResetFriction(long)
    183:184:public void setRestitution(float)
    private native void jniSetRestitution(long,float)
    193:193:public float getRestitution()
    private native float jniGetRestitution(long)
    203:204:public void ResetRestitution()
    private native void jniResetRestitution(long)
    213:213:public float getTangentSpeed()
    private native float jniGetTangentSpeed(long)
    223:224:public void setTangentSpeed(float)
    private native void jniSetTangentSpeed(long,float)
com.badlogic.gdx.physics.box2d.ContactFilter:
    public abstract boolean shouldCollide(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Fixture)
com.badlogic.gdx.physics.box2d.ContactImpulse:
    final com.badlogic.gdx.physics.box2d.World world
    long addr
    float[] tmp
    final float[] normalImpulses
    final float[] tangentImpulses
    34:37:protected ContactImpulse(com.badlogic.gdx.physics.box2d.World,long)
    40:41:public float[] getNormalImpulses()
    private native void jniGetNormalImpulses(long,float[])
    51:52:public float[] getTangentImpulses()
    private native void jniGetTangentImpulses(long,float[])
    62:62:public int getCount()
    private native int jniGetCount(long)
com.badlogic.gdx.physics.box2d.ContactListener:
    public abstract void beginContact(com.badlogic.gdx.physics.box2d.Contact)
    public abstract void endContact(com.badlogic.gdx.physics.box2d.Contact)
    public abstract void preSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.Manifold)
    public abstract void postSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.ContactImpulse)
com.badlogic.gdx.physics.box2d.EdgeShape:
    37:39:EdgeShape(long)
    43:44:public void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    48:49:public void set(float,float,float,float)
    private native void jniSet(long,float,float,float,float)
    59:62:public void getVertex1(com.badlogic.gdx.math.Vector2)
    private native void jniGetVertex1(long,float[])
    71:74:public void getVertex2(com.badlogic.gdx.math.Vector2)
    private native void jniGetVertex2(long,float[])
    104:104:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.Fixture:
    protected com.badlogic.gdx.physics.box2d.Shape shape
    protected java.lang.Object userData
    48:52:protected void reset(com.badlogic.gdx.physics.box2d.Body,long)
    57:68:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    private native int jniGetType(long)
    88:111:public com.badlogic.gdx.physics.box2d.Shape getShape()
    private native long jniGetShape(long)
    121:122:public void setSensor(boolean)
    private native void jniSetSensor(long,boolean)
    132:132:public boolean isSensor()
    private native boolean jniIsSensor(long)
    143:144:public void setFilterData(com.badlogic.gdx.physics.box2d.Filter)
    private native void jniSetFilterData(long,short,short,short)
    160:164:public com.badlogic.gdx.physics.box2d.Filter getFilterData()
    private native void jniGetFilterData(long,short[])
    178:179:public void refilter()
    private native void jniRefilter(long)
    188:188:public com.badlogic.gdx.physics.box2d.Body getBody()
    194:194:public boolean testPoint(com.badlogic.gdx.math.Vector2)
    201:201:public boolean testPoint(float,float)
    private native boolean jniTestPoint(long,float,float)
    236:237:public void setDensity(float)
    private native void jniSetDensity(long,float)
    246:246:public float getDensity()
    private native float jniGetDensity(long)
    256:256:public float getFriction()
    private native float jniGetFriction(long)
    266:267:public void setFriction(float)
    private native void jniSetFriction(long,float)
    276:276:public float getRestitution()
    private native float jniGetRestitution(long)
    286:287:public void setRestitution(float)
    private native void jniSetRestitution(long,float)
    301:302:public void setUserData(java.lang.Object)
    306:306:public java.lang.Object getUserData()
com.badlogic.gdx.physics.box2d.FixtureDef:
    public com.badlogic.gdx.physics.box2d.Shape shape
com.badlogic.gdx.physics.box2d.Joint:
    protected long addr
    private final com.badlogic.gdx.physics.box2d.World world
    private final float[] tmp
    private java.lang.Object userData
    protected com.badlogic.gdx.physics.box2d.JointEdge jointEdgeA
    protected com.badlogic.gdx.physics.box2d.JointEdge jointEdgeB
    private final com.badlogic.gdx.math.Vector2 anchorA
    private final com.badlogic.gdx.math.Vector2 anchorB
    private final com.badlogic.gdx.math.Vector2 reactionForce
    47:50:protected Joint(com.badlogic.gdx.physics.box2d.World,long)
    54:58:public com.badlogic.gdx.physics.box2d.JointDef$JointType getType()
    private native int jniGetType(long)
    68:68:public com.badlogic.gdx.physics.box2d.Body getBodyA()
    private native long jniGetBodyA(long)
    78:78:public com.badlogic.gdx.physics.box2d.Body getBodyB()
    private native long jniGetBodyB(long)
    90:93:public com.badlogic.gdx.math.Vector2 getAnchorA()
    private native void jniGetAnchorA(long,float[])
    107:110:public com.badlogic.gdx.math.Vector2 getAnchorB()
    private native void jniGetAnchorB(long,float[])
    124:127:public com.badlogic.gdx.math.Vector2 getReactionForce(float)
    private native void jniGetReactionForce(long,float,float[])
    139:139:public float getReactionTorque(float)
    private native float jniGetReactionTorque(long,float)
    153:153:public java.lang.Object getUserData()
    158:159:public void setUserData(java.lang.Object)
    163:163:public boolean isActive()
    private native boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.JointDef$JointType:
    20:20:public static com.badlogic.gdx.physics.box2d.JointDef$JointType[] values()
    20:20:public static com.badlogic.gdx.physics.box2d.JointDef$JointType valueOf(java.lang.String)
    33:33:public int getValue()
com.badlogic.gdx.physics.box2d.JointEdge:
    public final com.badlogic.gdx.physics.box2d.Body other
    public final com.badlogic.gdx.physics.box2d.Joint joint
    26:29:protected JointEdge(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Joint)
com.badlogic.gdx.physics.box2d.Manifold:
    long addr
    final com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] points
    final com.badlogic.gdx.math.Vector2 localNormal
    final com.badlogic.gdx.math.Vector2 localPoint
    final int[] tmpInt
    final float[] tmpFloat
    35:37:protected Manifold(long)
    40:44:public com.badlogic.gdx.physics.box2d.Manifold$ManifoldType getType()
    private native int jniGetType(long)
    53:53:public int getPointCount()
    private native int jniGetPointCount(long)
    62:64:public com.badlogic.gdx.math.Vector2 getLocalNormal()
    private native void jniGetLocalNormal(long,float[])
    74:76:public com.badlogic.gdx.math.Vector2 getLocalPoint()
    private native void jniGetLocalPoint(long,float[])
    86:97:public com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] getPoints()
    private native int jniGetPoint(long,float[],int)
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint:
    final synthetic com.badlogic.gdx.physics.box2d.Manifold this$0
    111:115:public Manifold$ManifoldPoint(com.badlogic.gdx.physics.box2d.Manifold)
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType:
    122:122:public static com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] values()
    122:122:public static com.badlogic.gdx.physics.box2d.Manifold$ManifoldType valueOf(java.lang.String)
com.badlogic.gdx.physics.box2d.MassData:
    public float mass
    public float I
com.badlogic.gdx.physics.box2d.PolygonShape:
    32:34:protected PolygonShape(long)
    44:44:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    50:56:public void set(com.badlogic.gdx.math.Vector2[])
    61:62:public void set(float[])
    67:68:public void set(float[],int,int)
    private native void jniSet(long,float[],int,int)
    85:86:public void setAsBox(float,float)
    private native void jniSetAsBox(long,float,float)
    99:100:public void setAsBox(float,float,com.badlogic.gdx.math.Vector2,float)
    private native void jniSetAsBox(long,float,float,float,float,float)
    109:109:public int getVertexCount()
    private native int jniGetVertexCount(long)
    123:126:public void getVertex(int,com.badlogic.gdx.math.Vector2)
    private native void jniGetVertex(long,int,float[])
com.badlogic.gdx.physics.box2d.QueryCallback:
    public abstract boolean reportFixture(com.badlogic.gdx.physics.box2d.Fixture)
com.badlogic.gdx.physics.box2d.RayCastCallback:
    public abstract float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.Shape:
    public abstract com.badlogic.gdx.physics.box2d.Shape$Type getType()
    45:45:public float getRadius()
    private native float jniGetRadius(long)
    55:56:public void setRadius(float)
    private native void jniSetRadius(long,float)
    65:66:public void dispose()
    private native void jniDispose(long)
    protected static native int jniGetType(long)
    86:86:public int getChildCount()
    private native int jniGetChildCount(long)
com.badlogic.gdx.physics.box2d.Shape$Type:
    32:32:public static com.badlogic.gdx.physics.box2d.Shape$Type[] values()
    32:32:public static com.badlogic.gdx.physics.box2d.Shape$Type valueOf(java.lang.String)
com.badlogic.gdx.physics.box2d.Transform:
    public static final int POS_X
    public static final int POS_Y
    public static final int COS
    public static final int SIN
    41:44:public Transform(com.badlogic.gdx.math.Vector2,float)
    49:54:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2)
    59:59:public com.badlogic.gdx.math.Vector2 getPosition()
    65:68:public void setRotation(float)
    71:71:public float getRotation()
    77:79:public void setPosition(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.World:
    protected final com.badlogic.gdx.utils.Pool freeBodies
    protected final com.badlogic.gdx.utils.Pool freeFixtures
    protected final com.badlogic.gdx.utils.LongMap bodies
    protected final com.badlogic.gdx.utils.LongMap fixtures
    protected final com.badlogic.gdx.utils.LongMap joints
    protected com.badlogic.gdx.physics.box2d.ContactFilter contactFilter
    protected com.badlogic.gdx.physics.box2d.ContactListener contactListener
    final float[] tmpGravity
    final com.badlogic.gdx.math.Vector2 gravity
    private com.badlogic.gdx.physics.box2d.QueryCallback queryCallback
    private long[] contactAddrs
    private final java.util.ArrayList contacts
    private final java.util.ArrayList freeContacts
    private final com.badlogic.gdx.physics.box2d.Contact contact
    private final com.badlogic.gdx.physics.box2d.Manifold manifold
    private final com.badlogic.gdx.physics.box2d.ContactImpulse impulse
    private com.badlogic.gdx.math.Vector2 rayPoint
    private com.badlogic.gdx.math.Vector2 rayNormal
    222:230:public World(com.badlogic.gdx.math.Vector2,boolean)
    private native long newWorld(float,float,boolean)
    253:253:public void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener)
    258:260:public void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter)
    private native void setUseDefaultContactFilter(boolean)
    269:270:public void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener)
    275:281:public com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef)
    private native long jniCreateBody(long,int,float,float,float,float,float,float,float,float,boolean,boolean,boolean,boolean,boolean,float)
    312:323:public void destroyBody(com.badlogic.gdx.physics.box2d.Body)
    private native void jniDestroyBody(long,long)
    335:354:public com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef)
    358:413:private long createProperJoint(com.badlogic.gdx.physics.box2d.JointDef)
    private native long jniCreateWheelJoint(long,long,long,boolean,float,float,float,float,float,float,boolean,float,float,float,float)
    private native long jniCreateRopeJoint(long,long,long,boolean,float,float,float,float,float)
    private native long jniCreateDistanceJoint(long,long,long,boolean,float,float,float,float,float,float,float)
    private native long jniCreateFrictionJoint(long,long,long,boolean,float,float,float,float,float,float)
    private native long jniCreateGearJoint(long,long,long,boolean,long,long,float)
    private native long jniCreateMouseJoint(long,long,long,boolean,float,float,float,float,float)
    private native long jniCreatePrismaticJoint(long,long,long,boolean,float,float,float,float,float,float,float,boolean,float,float,boolean,float,float)
    private native long jniCreatePulleyJoint(long,long,long,boolean,float,float,float,float,float,float,float,float,float,float,float)
    private native long jniCreateRevoluteJoint(long,long,long,boolean,float,float,float,float,float,boolean,float,float,boolean,float,float)
    private native long jniCreateWeldJoint(long,long,long,boolean,float,float,float,float,float)
    585:590:public void destroyJoint(com.badlogic.gdx.physics.box2d.Joint)
    private native void jniDestroyJoint(long,long)
    603:604:public void step(float,int,int)
    private native void jniStep(long,float,int,int)
    623:624:public void clearForces()
    private native void jniClearForces(long)
    633:634:public void setWarmStarting(boolean)
    private native void jniSetWarmStarting(long,boolean)
    643:644:public void setContinuousPhysics(boolean)
    private native void jniSetContiousPhysics(long,boolean)
    653:653:public int getProxyCount()
    private native int jniGetProxyCount(long)
    663:663:public int getBodyCount()
    private native int jniGetBodyCount(long)
    673:673:public int getJointCount()
    private native int jniGetJointcount(long)
    683:683:public int getContactCount()
    private native int jniGetContactCount(long)
    693:694:public void setGravity(com.badlogic.gdx.math.Vector2)
    private native void jniSetGravity(long,float,float)
    706:709:public com.badlogic.gdx.math.Vector2 getGravity()
    private native void jniGetGravity(long,float[])
    721:721:public boolean isLocked()
    private native boolean jniIsLocked(long)
    731:732:public void setAutoClearForces(boolean)
    private native void jniSetAutoClearForces(long,boolean)
    741:741:public boolean getAutoClearForces()
    private native boolean jniGetAutoClearForces(long)
    756:758:public void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float)
    private native void jniQueryAABB(long,float,float,float,float)
    796:817:public java.util.List getContactList()
    822:827:public void getBodies(com.badlogic.gdx.utils.Array)
    831:836:public void getJoints(com.badlogic.gdx.utils.Array)
    private native void jniGetContactList(long,long[])
    864:875:private boolean contactFilter(long,long)
    884:886:private void beginContact(long)
    889:891:private void endContact(long)
    894:897:private void preSolve(long,long)
    900:903:private void postSolve(long,long)
    906:909:private boolean reportFixture(long)
    public static native void setVelocityThreshold(float)
    public static native float getVelocityThreshold()
    944:951:private float reportRayFixture(long,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World$1:
    186:186:World$1(com.badlogic.gdx.physics.box2d.World,int,int)
com.badlogic.gdx.physics.box2d.World$2:
    final synthetic com.badlogic.gdx.physics.box2d.World this$0
    194:194:World$2(com.badlogic.gdx.physics.box2d.World,int,int)
com.badlogic.gdx.physics.box2d.WorldManifold:
    protected int numContactPoints
    32:32:public com.badlogic.gdx.math.Vector2 getNormal()
    38:38:public com.badlogic.gdx.math.Vector2[] getPoints()
    43:43:public int getNumberOfContactPoints()
com.badlogic.gdx.physics.box2d.joints.DistanceJoint:
    31:32:public DistanceJoint(com.badlogic.gdx.physics.box2d.World,long)
    36:37:public void setLength(float)
    private native void jniSetLength(long,float)
    46:46:public float getLength()
    private native float jniGetLength(long)
    56:57:public void setFrequency(float)
    private native void jniSetFrequency(long,float)
    66:66:public float getFrequency()
    private native float jniGetFrequency(long)
    76:77:public void setDampingRatio(float)
    private native void jniSetDampingRatio(long,float)
    86:86:public float getDampingRatio()
    private native float jniGetDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef:
    34:39:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint:
    30:31:public FrictionJoint(com.badlogic.gdx.physics.box2d.World,long)
    35:36:public void setMaxForce(float)
    private native void jniSetMaxForce(long,float)
    45:45:public float getMaxForce()
    private native float jniGetMaxForce(long)
    55:56:public void setMaxTorque(float)
    private native void jniSetMaxTorque(long,float)
    65:65:public float getMaxTorque()
    private native float jniGetMaxTorque(long)
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef:
    32:36:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.GearJoint:
    34:35:public GearJoint(com.badlogic.gdx.physics.box2d.World,long)
    39:40:public void setRatio(float)
    private native void jniSetRatio(long,float)
    49:49:public float getRatio()
    private native float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.joints.MouseJoint:
    final float[] tmp
    private final com.badlogic.gdx.math.Vector2 target
    33:34:public MouseJoint(com.badlogic.gdx.physics.box2d.World,long)
    38:39:public void setTarget(com.badlogic.gdx.math.Vector2)
    private native void jniSetTarget(long,float,float)
    51:54:public com.badlogic.gdx.math.Vector2 getTarget()
    private native void jniGetTarget(long,float[])
    65:66:public void setMaxForce(float)
    private native void jniSetMaxForce(long,float)
    75:75:public float getMaxForce()
    private native float jniGetMaxForce(long)
    85:86:public void setFrequency(float)
    private native void jniSetFrequency(long,float)
    95:95:public float getFrequency()
    private native float jniGetFrequency(long)
    105:106:public void setDampingRatio(float)
    private native void jniSetDampingRatio(long,float)
    115:115:public float getDampingRatio()
    private native float jniGetDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint:
    32:33:public PrismaticJoint(com.badlogic.gdx.physics.box2d.World,long)
    37:37:public float getJointTranslation()
    private native float jniGetJointTranslation(long)
    47:47:public float getJointSpeed()
    private native float jniGetJointSpeed(long)
    57:57:public boolean isLimitEnabled()
    private native boolean jniIsLimitEnabled(long)
    67:68:public void enableLimit(boolean)
    private native void jniEnableLimit(long,boolean)
    77:77:public float getLowerLimit()
    private native float jniGetLowerLimit(long)
    87:87:public float getUpperLimit()
    private native float jniGetUpperLimit(long)
    97:98:public void setLimits(float,float)
    private native void jniSetLimits(long,float,float)
    107:107:public boolean isMotorEnabled()
    private native boolean jniIsMotorEnabled(long)
    117:118:public void enableMotor(boolean)
    private native void jniEnableMotor(long,boolean)
    127:128:public void setMotorSpeed(float)
    private native void jniSetMotorSpeed(long,float)
    137:137:public float getMotorSpeed()
    private native float jniGetMotorSpeed(long)
    147:148:public void setMaxMotorForce(float)
    private native void jniSetMaxMotorForce(long,float)
    157:157:public float getMotorForce(float)
    private native float jniGetMotorForce(long,float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef:
    35:42:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint:
    private final float[] tmp
    private final com.badlogic.gdx.math.Vector2 groundAnchorA
    private final com.badlogic.gdx.math.Vector2 groundAnchorB
    33:34:public PulleyJoint(com.badlogic.gdx.physics.box2d.World,long)
    41:43:public com.badlogic.gdx.math.Vector2 getGroundAnchorA()
    private native void jniGetGroundAnchorA(long,float[])
    56:58:public com.badlogic.gdx.math.Vector2 getGroundAnchorB()
    private native void jniGetGroundAnchorB(long,float[])
    69:69:public float getLength1()
    private native float jniGetLength1(long)
    79:79:public float getLength2()
    private native float jniGetLength2(long)
    89:89:public float getRatio()
    private native float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef:
    private static final float minPulleyLength
    36:46:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint:
    private final float[] tmp
    private final com.badlogic.gdx.math.Vector2 localAnchorA
    private final com.badlogic.gdx.math.Vector2 localAnchorB
    38:39:public RevoluteJoint(com.badlogic.gdx.physics.box2d.World,long)
    43:43:public float getJointAngle()
    private native float jniGetJointAngle(long)
    53:53:public float getJointSpeed()
    private native float jniGetJointSpeed(long)
    63:63:public boolean isLimitEnabled()
    private native boolean jniIsLimitEnabled(long)
    73:74:public void enableLimit(boolean)
    private native void jniEnableLimit(long,boolean)
    83:83:public float getLowerLimit()
    private native float jniGetLowerLimit(long)
    93:93:public float getUpperLimit()
    private native float jniGetUpperLimit(long)
    104:105:public void setLimits(float,float)
    private native void jniSetLimits(long,float,float)
    114:114:public boolean isMotorEnabled()
    private native boolean jniIsMotorEnabled(long)
    124:125:public void enableMotor(boolean)
    private native void jniEnableMotor(long,boolean)
    134:135:public void setMotorSpeed(float)
    private native void jniSetMotorSpeed(long,float)
    144:144:public float getMotorSpeed()
    private native float jniGetMotorSpeed(long)
    154:155:public void setMaxMotorTorque(float)
    private native void jniSetMaxMotorTorque(long,float)
    164:164:public float getMotorTorque(float)
    private native float jniGetMotorTorque(long,float)
    173:175:public com.badlogic.gdx.math.Vector2 getLocalAnchorA()
    private native void jniGetLocalAnchorA(long,float[])
    185:187:public com.badlogic.gdx.math.Vector2 getLocalAnchorB()
    private native void jniGetLocalAnchorB(long,float[])
    198:198:public float getReferenceAngle()
    private native float jniGetReferenceAngle(long)
    207:207:public float getMaxMotorTorque()
    private native float jniGetMaxMotorTorque(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef:
    35:40:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.RopeJoint:
    33:34:public RopeJoint(com.badlogic.gdx.physics.box2d.World,long)
    38:38:public float getMaxLength()
    private native float jniGetMaxLength(long)
    48:49:public void setMaxLength(float)
    private native float jniSetMaxLength(long,float)
com.badlogic.gdx.physics.box2d.joints.WeldJoint:
    31:32:public WeldJoint(com.badlogic.gdx.physics.box2d.World,long)
    35:35:public float getReferenceAngle()
    private native float jniGetReferenceAngle(long)
com.badlogic.gdx.physics.box2d.joints.WeldJointDef:
    31:36:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.WheelJoint:
    32:33:public WheelJoint(com.badlogic.gdx.physics.box2d.World,long)
    37:37:public float getJointTranslation()
    private native float jniGetJointTranslation(long)
    47:47:public float getJointSpeed()
    private native float jniGetJointSpeed(long)
    57:57:private boolean isMotorEnabled()
    private native boolean jniIsMotorEnabled(long)
    67:68:public void enableMotor(boolean)
    private native void jniEnableMotor(long,boolean)
    77:78:public void setMotorSpeed(float)
    private native void jniSetMotorSpeed(long,float)
    87:87:public float getMotorSpeed()
    private native float jniGetMotorSpeed(long)
    97:98:public void setMaxMotorTorque(float)
    private native void jniSetMaxMotorTorque(long,float)
    106:106:public float getMaxMotorTorque()
    private native float jniGetMaxMotorTorque(long)
    116:116:public float getMotorTorque(float)
    private native float jniGetMotorTorque(long,float)
    126:127:public void setSpringFrequencyHz(float)
    private native void jniSetSpringFrequencyHz(long,float)
    135:135:public float getSpringFrequencyHz()
    private native float jniGetSpringFrequencyHz(long)
    145:146:public void setSpringDampingRatio(float)
    private native void jniSetSpringDampingRatio(long,float)
    154:154:public float getSpringDampingRatio()
    private native float jniGetSpringDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.WheelJointDef:
    33:38:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Action:
    public abstract boolean act(float)
    43:43:public com.badlogic.gdx.scenes.scene2d.Actor getActor()
    75:75:public com.badlogic.gdx.utils.Pool getPool()
com.badlogic.gdx.scenes.scene2d.Actor:
    78:78:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    85:93:public void act(float)
    219:219:public boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    223:223:public com.badlogic.gdx.utils.Array getListeners()
    234:234:public boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    238:238:public com.badlogic.gdx.utils.Array getCaptureListeners()
    247:248:public void removeAction(com.badlogic.gdx.scenes.scene2d.Action)
    307:307:public boolean hasParent()
    336:337:public void setVisible(boolean)
    384:384:public float getTop()
    389:389:public float getRight()
    394:396:public void setSize(float,float)
    400:402:public void size(float)
    406:408:public void size(float,float)
    412:416:public void setBounds(float,float,float,float)
    419:419:public float getOriginX()
    423:424:public void setOriginX(float)
    427:427:public float getOriginY()
    431:432:public void setOriginY(float)
    436:438:public void setOrigin(float,float)
    441:441:public float getScaleX()
    445:446:public void setScaleX(float)
    449:449:public float getScaleY()
    453:454:public void setScaleY(float)
    458:460:public void setScale(float)
    464:466:public void setScale(float,float)
    470:472:public void scale(float)
    476:478:public void scale(float,float)
    481:481:public float getRotation()
    485:486:public void setRotation(float)
    490:491:public void rotate(float)
    494:495:public void setColor(com.badlogic.gdx.graphics.Color)
    498:499:public void setColor(float,float,float,float)
    507:507:public java.lang.String getName()
    513:514:public void setName(java.lang.String)
    523:524:public void toBack()
    545:547:public int getZIndex()
    552:552:public boolean clipBegin()
    561:571:public boolean clipBegin(float,float,float,float)
    576:577:public void clipEnd()
    581:583:public com.badlogic.gdx.math.Vector2 screenToLocalCoordinates(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Event:
    101:102:public void setBubbles(boolean)
    126:126:public boolean isCapture()
com.badlogic.gdx.scenes.scene2d.Group:
    private com.badlogic.gdx.math.Rectangle cullingArea
    45:50:public void act(float)
    55:58:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    66:134:protected void drawChildren(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    139:141:protected void applyTransform(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.math.Matrix4)
    145:177:protected com.badlogic.gdx.math.Matrix4 computeTransform()
    183:184:protected void resetTransform(com.badlogic.gdx.graphics.g2d.SpriteBatch)
    189:190:public void setCullingArea(com.badlogic.gdx.math.Rectangle)
    222:230:public void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor)
    235:241:public void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
    246:255:public void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
    291:301:public com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String)
    313:317:public boolean swapActor(int,int)
    322:326:public boolean swapActor(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
    335:335:public boolean hasChildren()
    348:348:public boolean isTransform()
    354:360:public com.badlogic.gdx.math.Vector2 localToDescendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2)
    365:366:public void print()
    369:375:private void print(java.lang.String)
com.badlogic.gdx.scenes.scene2d.InputEvent:
    108:109:public void setScrollAmount(int)
    119:120:public void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.InputEvent$Type:
    135:135:public static com.badlogic.gdx.scenes.scene2d.InputEvent$Type valueOf(java.lang.String)
com.badlogic.gdx.scenes.scene2d.Stage:
    private int mouseScreenX
    private int mouseScreenY
    private com.badlogic.gdx.scenes.scene2d.Actor mouseOverActor
    96:100:public Stage(float,float,boolean,com.badlogic.gdx.graphics.g2d.SpriteBatch)
    173:179:public void draw()
    183:184:public void act()
    191:220:public void act(float)
    224:246:private com.badlogic.gdx.scenes.scene2d.Actor fireEnterAndExit(com.badlogic.gdx.scenes.scene2d.Actor,int,int,int)
    347:364:public boolean mouseMoved(int,int)
    370:383:public boolean scrolled(int)
    443:452:public void removeTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int)
    501:502:public void addAction(com.badlogic.gdx.scenes.scene2d.Action)
    513:513:public boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    519:519:public boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    525:525:public boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    531:531:public boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    630:630:public float getGutterWidth()
    636:636:public float getGutterHeight()
    640:640:public com.badlogic.gdx.graphics.g2d.SpriteBatch getSpriteBatch()
    651:652:public void setCamera(com.badlogic.gdx.graphics.Camera)
    681:684:public com.badlogic.gdx.math.Vector2 stageToScreenCoordinates(com.badlogic.gdx.math.Vector2)
    692:693:public com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.scenes.scene2d.Touchable:
    20:20:public static com.badlogic.gdx.scenes.scene2d.Touchable[] values()
    20:20:public static com.badlogic.gdx.scenes.scene2d.Touchable valueOf(java.lang.String)
com.badlogic.gdx.scenes.scene2d.actions.Actions:
    40:42:public static com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action)
    46:49:public static com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor)
    53:55:public static com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action)
    59:62:public static com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor)
    67:67:public static com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float)
    71:71:public static com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float)
    75:79:public static com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float,com.badlogic.gdx.math.Interpolation)
    84:84:public static com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float)
    88:88:public static com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float)
    92:96:public static com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float,com.badlogic.gdx.math.Interpolation)
    101:101:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float)
    105:105:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float)
    109:113:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float,com.badlogic.gdx.math.Interpolation)
    118:118:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float)
    122:122:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float)
    126:130:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float,com.badlogic.gdx.math.Interpolation)
    135:135:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float)
    139:139:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float)
    143:147:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float,com.badlogic.gdx.math.Interpolation)
    152:152:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float)
    156:156:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float)
    160:164:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float,com.badlogic.gdx.math.Interpolation)
    169:169:public static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float)
    173:173:public static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float)
    177:181:public static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float,com.badlogic.gdx.math.Interpolation)
    186:186:public static com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float)
    190:190:public static com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float)
    194:198:public static com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float,com.badlogic.gdx.math.Interpolation)
    203:203:public static com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color)
    208:208:public static com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float)
    213:217:public static com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float,com.badlogic.gdx.math.Interpolation)
    222:222:public static com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float)
    227:227:public static com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float)
    232:236:public static com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float,com.badlogic.gdx.math.Interpolation)
    241:241:public static com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float)
    255:255:public static com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float)
    268:268:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction show()
    272:272:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction hide()
    276:278:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction visible(boolean)
    282:284:public static com.badlogic.gdx.scenes.scene2d.actions.TouchableAction touchable(com.badlogic.gdx.scenes.scene2d.Touchable)
    292:294:public static com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor(com.badlogic.gdx.scenes.scene2d.Actor)
    298:300:public static com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float)
    304:307:public static com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float,com.badlogic.gdx.scenes.scene2d.Action)
    311:314:public static com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction timeScale(float,com.badlogic.gdx.scenes.scene2d.Action)
    318:320:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action)
    339:344:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    348:354:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    358:361:public static varargs com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action[])
    365:365:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence()
    369:371:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action)
    375:378:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    382:386:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    390:395:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    399:405:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    409:412:public static varargs com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action[])
    416:416:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel()
    420:423:public static com.badlogic.gdx.scenes.scene2d.actions.RepeatAction repeat(int,com.badlogic.gdx.scenes.scene2d.Action)
    427:430:public static com.badlogic.gdx.scenes.scene2d.actions.RepeatAction forever(com.badlogic.gdx.scenes.scene2d.Action)
    434:436:public static com.badlogic.gdx.scenes.scene2d.actions.RunnableAction run(java.lang.Runnable)
    440:442:public static com.badlogic.gdx.scenes.scene2d.actions.LayoutAction layout(boolean)
    446:448:public static com.badlogic.gdx.scenes.scene2d.actions.AfterAction after(com.badlogic.gdx.scenes.scene2d.Action)
    452:455:public static com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean)
    459:463:public static com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor)
    474:478:public static com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction removeListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.AddAction:
    29:30:public boolean act(float)
    34:34:public com.badlogic.gdx.scenes.scene2d.Actor getTargetActor()
    39:40:public void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor)
    43:43:public com.badlogic.gdx.scenes.scene2d.Action getAction()
    47:48:public void setAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction:
    private boolean capture
    31:36:public boolean act(float)
    40:40:public com.badlogic.gdx.scenes.scene2d.Actor getTargetActor()
    45:46:public void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor)
    49:49:public com.badlogic.gdx.scenes.scene2d.EventListener getListener()
    53:54:public void setListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    57:57:public boolean getCapture()
    61:62:public void setCapture(boolean)
com.badlogic.gdx.scenes.scene2d.actions.AfterAction:
    39:47:protected boolean delegate(float)
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction:
    private float start
    30:32:protected void begin()
    35:36:protected void update(float)
    44:44:public com.badlogic.gdx.graphics.Color getColor()
    50:51:public void setColor(com.badlogic.gdx.graphics.Color)
    54:54:public float getAlpha()
com.badlogic.gdx.scenes.scene2d.actions.ColorAction:
    private float startR
    private float startG
    private float startB
    private float startA
    31:36:protected void begin()
    39:44:protected void update(float)
    52:52:public com.badlogic.gdx.graphics.Color getColor()
    58:59:public void setColor(com.badlogic.gdx.graphics.Color)
    62:62:public com.badlogic.gdx.graphics.Color getEndColor()
    67:68:public void setEndColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.scenes.scene2d.actions.DelayAction:
    private float duration
    27:29:public DelayAction(float)
    32:38:protected boolean delegate(float)
    43:44:public void finish()
    53:53:public float getTime()
    58:59:public void setTime(float)
    62:62:public float getDuration()
    67:68:public void setDuration(float)
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction:
    30:31:public void setAction(com.badlogic.gdx.scenes.scene2d.Action)
    34:34:public com.badlogic.gdx.scenes.scene2d.Action getAction()
    protected abstract boolean delegate(float)
    40:45:public final boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.FloatAction:
    private float value
    32:35:public FloatAction(float,float)
    38:39:protected void begin()
    42:43:protected void update(float)
    47:47:public float getValue()
    52:53:public void setValue(float)
    56:56:public float getStart()
    61:62:public void setStart(float)
    65:65:public float getEnd()
    70:71:public void setEnd(float)
com.badlogic.gdx.scenes.scene2d.actions.IntAction:
    private int value
    32:35:public IntAction(int,int)
    38:39:protected void begin()
    42:43:protected void update(float)
    47:47:public int getValue()
    52:53:public void setValue(int)
    56:56:public int getStart()
    61:62:public void setStart(int)
    65:65:public int getEnd()
    70:71:public void setEnd(int)
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction:
    private boolean enabled
    36:37:public boolean act(float)
    41:41:public boolean isEnabled()
    45:46:public void setLayoutEnabled(boolean)
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction:
    private float amountX
    private float amountY
    25:26:protected void updateRelative(float)
    29:31:public void setAmount(float,float)
    34:34:public float getAmountX()
    38:39:public void setAmountX(float)
    42:42:public float getAmountY()
    46:47:public void setAmountY(float)
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction:
    private float startX
    private float startY
    private float endX
    private float endY
    26:28:protected void begin()
    31:32:protected void update(float)
    35:37:public void setPosition(float,float)
    40:40:public float getX()
    44:45:public void setX(float)
    48:48:public float getY()
    52:53:public void setY(float)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction:
    33:35:public ParallelAction(com.badlogic.gdx.scenes.scene2d.Action)
    37:40:public ParallelAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    42:46:public ParallelAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    48:53:public ParallelAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    55:61:public ParallelAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    64:76:public boolean act(float)
    105:105:public com.badlogic.gdx.utils.Array getActions()
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction:
    private float lastPercent
    25:26:protected void begin()
    29:31:protected void update(float)
    protected abstract void updateRelative(float)
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction:
    29:30:public boolean act(float)
    34:34:public com.badlogic.gdx.scenes.scene2d.Actor getTargetActor()
    39:40:public void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor)
    43:43:public com.badlogic.gdx.scenes.scene2d.Action getAction()
    47:48:public void setAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction:
    29:33:public boolean act(float)
    46:46:public com.badlogic.gdx.scenes.scene2d.Actor getRemoveActor()
    51:52:public void setRemoveActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction:
    31:36:public boolean act(float)
    40:40:public com.badlogic.gdx.scenes.scene2d.Actor getTargetActor()
    45:46:public void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor)
    49:49:public com.badlogic.gdx.scenes.scene2d.EventListener getListener()
    57:57:public boolean getCapture()
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction:
    public static final int FOREVER
    private int repeatCount
    28:35:protected boolean delegate(float)
    40:41:public void finish()
    51:52:public void setCount(int)
    55:55:public int getCount()
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction:
    private float amount
    25:26:protected void updateRelative(float)
    29:29:public float getAmount()
    33:34:public void setAmount(float)
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction:
    private float start
    private float end
    25:26:protected void begin()
    29:30:protected void update(float)
    33:33:public float getRotation()
    37:38:public void setRotation(float)
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction:
    30:34:public boolean act(float)
    39:46:public void run()
    58:58:public java.lang.Runnable getRunnable()
    62:63:public void setRunnable(java.lang.Runnable)
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction:
    private float amountX
    private float amountY
    25:26:protected void updateRelative(float)
    29:31:public void setAmount(float,float)
    34:36:public void setAmount(float)
    39:39:public float getAmountX()
    43:44:public void setAmountX(float)
    47:47:public float getAmountY()
    51:52:public void setAmountY(float)
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction:
    private float startX
    private float startY
    private float endX
    private float endY
    26:28:protected void begin()
    31:32:protected void update(float)
    35:37:public void setScale(float,float)
    40:42:public void setScale(float)
    45:45:public float getX()
    49:50:public void setX(float)
    53:53:public float getY()
    57:58:public void setY(float)
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction:
    30:32:public SequenceAction(com.badlogic.gdx.scenes.scene2d.Action)
    34:37:public SequenceAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    39:43:public SequenceAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    45:50:public SequenceAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    52:58:public SequenceAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    61:72:public boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction:
    private float amountWidth
    private float amountHeight
    25:26:protected void updateRelative(float)
    29:31:public void setAmount(float,float)
    34:34:public float getAmountWidth()
    38:39:public void setAmountWidth(float)
    42:42:public float getAmountHeight()
    46:47:public void setAmountHeight(float)
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction:
    private float startWidth
    private float startHeight
    private float endWidth
    private float endHeight
    26:28:protected void begin()
    31:32:protected void update(float)
    35:37:public void setSize(float,float)
    40:40:public float getWidth()
    44:45:public void setWidth(float)
    48:48:public float getHeight()
    52:53:public void setHeight(float)
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction:
    33:35:public TemporalAction(float)
    37:40:public TemporalAction(float,com.badlogic.gdx.math.Interpolation)
    43:61:public boolean act(float)
    68:68:protected void begin()
    72:72:protected void end()
    protected abstract void update(float)
    81:82:public void finish()
    97:97:public float getTime()
    102:103:public void setTime(float)
    106:106:public float getDuration()
    115:115:public com.badlogic.gdx.math.Interpolation getInterpolation()
    123:123:public boolean isReverse()
    128:129:public void setReverse(boolean)
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction:
    private float scale
    25:26:protected boolean delegate(float)
    30:30:public float getScale()
    34:35:public void setScale(float)
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction:
    private com.badlogic.gdx.scenes.scene2d.Touchable touchable
    29:30:public boolean act(float)
    34:34:public com.badlogic.gdx.scenes.scene2d.Touchable getTouchable()
    38:39:public void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable)
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction:
    private boolean visible
    28:29:public boolean act(float)
    33:33:public boolean isVisible()
    37:38:public void setVisible(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Button:
    private com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle style
    private com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener
    45:50:public Button(com.badlogic.gdx.scenes.scene2d.ui.Skin)
    53:58:public Button(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    61:62:public Button(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    64:70:public Button(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
    72:75:public Button(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
    78:86:private void initialize()
    89:90:public Button(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    93:94:public Button(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    97:98:public Button(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    101:102:public Button(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    118:119:public void toggle()
    122:122:public boolean isChecked()
    126:126:public boolean isPressed()
    130:130:public boolean isOver()
    134:134:public com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener()
    138:138:public boolean isDisabled()
    143:144:public void setDisabled(boolean)
    147:162:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
    167:167:public com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle()
    171:204:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    207:207:protected void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    210:214:public float getPrefWidth()
    218:222:public float getPrefHeight()
    226:226:public float getMinWidth()
    230:230:public float getMinHeight()
com.badlogic.gdx.scenes.scene2d.ui.Button$1:
    79:79:Button$1(com.badlogic.gdx.scenes.scene2d.ui.Button)
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle:
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable up
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable down
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable over
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable checked
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable checkedOver
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable disabled
    public float pressedOffsetX
    public float pressedOffsetY
    public float unpressedOffsetX
    public float unpressedOffsetY
    246:250:public Button$ButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    252:263:public Button$ButtonStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup:
    35:39:public varargs ButtonGroup(com.badlogic.gdx.scenes.scene2d.ui.Button[])
    42:49:public void add(com.badlogic.gdx.scenes.scene2d.ui.Button)
    52:55:public varargs void add(com.badlogic.gdx.scenes.scene2d.ui.Button[])
    58:61:public void remove(com.badlogic.gdx.scenes.scene2d.ui.Button)
    64:67:public varargs void remove(com.badlogic.gdx.scenes.scene2d.ui.Button[])
    71:79:public void setChecked(java.lang.String)
    110:117:public void uncheckAll()
    121:122:public com.badlogic.gdx.scenes.scene2d.ui.Button getChecked()
    126:126:public com.badlogic.gdx.utils.Array getAllChecked()
    130:130:public com.badlogic.gdx.utils.Array getButtons()
    135:136:public void setMinCheckCount(int)
    140:141:public void setMaxCheckCount(int)
    147:148:public void setUncheckLast(boolean)
com.badlogic.gdx.scenes.scene2d.ui.CheckBox:
    private com.badlogic.gdx.scenes.scene2d.ui.Image image
    private com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle style
    32:33:public CheckBox(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    36:37:public CheckBox(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    40:48:public CheckBox(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle)
    51:54:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
    59:59:public com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle getStyle()
    64:72:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    75:75:public com.badlogic.gdx.scenes.scene2d.ui.Image getImage()
    27:27:public bridge synthetic com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle()
    27:27:public bridge synthetic com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle:
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOn
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOff
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOver
    88:93:public CheckBox$CheckBoxStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color)
    95:100:public CheckBox$CheckBoxStyle(com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle)
com.badlogic.gdx.scenes.scene2d.ui.Dialog:
    com.badlogic.gdx.scenes.scene2d.ui.Table contentTable
    private com.badlogic.gdx.scenes.scene2d.ui.Skin skin
    57:60:public Dialog(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    63:66:public Dialog(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    69:71:public Dialog(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle)
    74:113:private void initialize()
    116:116:public com.badlogic.gdx.scenes.scene2d.ui.Table getContentTable()
    120:120:public com.badlogic.gdx.scenes.scene2d.ui.Table getButtonTable()
    125:127:public com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String)
    132:132:public com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle)
    137:138:public com.badlogic.gdx.scenes.scene2d.ui.Dialog text(com.badlogic.gdx.scenes.scene2d.ui.Label)
    144:144:public com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String)
    150:152:public com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object)
    158:158:public com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle)
    163:163:public com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button)
    169:171:public com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button,java.lang.Object)
    176:189:public com.badlogic.gdx.scenes.scene2d.ui.Dialog show(com.badlogic.gdx.scenes.scene2d.Stage)
    217:218:public void setObject(com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Object)
    223:233:public com.badlogic.gdx.scenes.scene2d.ui.Dialog key(int,java.lang.Object)
    242:243:public void cancel()
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1:
    final synthetic com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0
    49:49:Dialog$1(com.badlogic.gdx.scenes.scene2d.ui.Dialog)
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2:
    84:84:Dialog$2(com.badlogic.gdx.scenes.scene2d.ui.Dialog)
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3:
    95:95:Dialog$3(com.badlogic.gdx.scenes.scene2d.ui.Dialog)
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4:
    223:223:Dialog$4(com.badlogic.gdx.scenes.scene2d.ui.Dialog,int,java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.Image:
    private float imageX
    private float imageY
    private float imageWidth
    private float imageHeight
    48:49:public Image(com.badlogic.gdx.graphics.g2d.NinePatch)
    54:55:public Image(com.badlogic.gdx.graphics.g2d.TextureRegion)
    59:60:public Image(com.badlogic.gdx.graphics.Texture)
    64:65:public Image(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    76:77:public Image(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.utils.Scaling)
    89:113:public void layout()
    116:139:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    152:152:public com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable()
    156:158:public void setScaling(com.badlogic.gdx.utils.Scaling)
    161:162:public void setAlign(int)
    165:165:public float getMinWidth()
    169:169:public float getMinHeight()
    183:183:public float getImageX()
    187:187:public float getImageY()
    191:191:public float getImageWidth()
    195:195:public float getImageHeight()
com.badlogic.gdx.scenes.scene2d.ui.ImageButton:
    private final com.badlogic.gdx.scenes.scene2d.ui.Image image
    private com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle style
    34:35:public ImageButton(com.badlogic.gdx.scenes.scene2d.ui.Skin)
    38:39:public ImageButton(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    42:49:public ImageButton(com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle)
    52:53:public ImageButton(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    56:57:public ImageButton(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    60:61:public ImageButton(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    64:68:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
    71:71:public com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle getStyle()
    75:86:private void updateImage()
    89:91:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    94:94:public com.badlogic.gdx.scenes.scene2d.ui.Image getImage()
    98:98:public com.esotericsoftware.tablelayout.Cell getImageCell()
    29:29:public bridge synthetic com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle:
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled
    112:116:public ImageButton$ImageButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    119:126:public ImageButton$ImageButtonStyle(com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle)
    129:130:public ImageButton$ImageButtonStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton:
    private final com.badlogic.gdx.scenes.scene2d.ui.Image image
    private final com.badlogic.gdx.scenes.scene2d.ui.Label label
    private com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle style
    40:42:public ImageTextButton(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    45:47:public ImageTextButton(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    50:65:public ImageTextButton(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle)
    68:79:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
    82:82:public com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle getStyle()
    86:97:private void updateImage()
    100:114:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    117:117:public com.badlogic.gdx.scenes.scene2d.ui.Image getImage()
    121:121:public com.esotericsoftware.tablelayout.Cell getImageCell()
    125:125:public com.badlogic.gdx.scenes.scene2d.ui.Label getLabel()
    129:129:public com.esotericsoftware.tablelayout.Cell getLabelCell()
    133:134:public void setText(java.lang.String)
    137:137:public java.lang.CharSequence getText()
    34:34:public bridge synthetic com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle:
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled
    150:151:public ImageTextButton$ImageTextButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.BitmapFont)
    154:161:public ImageTextButton$ImageTextButtonStyle(com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle)
    164:165:public ImageTextButton$ImageTextButtonStyle(com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.Label:
    private int labelAlign
    private com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment lineAlign
    private float lastPrefHeight
    50:51:public Label(java.lang.CharSequence,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    54:55:public Label(java.lang.CharSequence,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    60:61:public Label(java.lang.CharSequence,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String,com.badlogic.gdx.graphics.Color)
    66:67:public Label(java.lang.CharSequence,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String,java.lang.String)
    69:74:public Label(java.lang.CharSequence,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle)
    77:82:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle)
    87:87:public com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle getStyle()
    92:103:public void setText(java.lang.CharSequence)
    106:111:private boolean textEquals(java.lang.CharSequence)
    115:115:public java.lang.CharSequence getText()
    136:183:public void layout()
    186:195:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    215:216:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getTextBounds()
    223:225:public void setWrap(boolean)
    230:231:public void setAlignment(int)
    237:247:public void setAlignment(int,int)
    250:253:public void setFontScale(float)
    256:259:public void setFontScale(float,float)
    262:262:public float getFontScaleX()
    266:268:public void setFontScaleX(float)
    271:271:public float getFontScaleY()
    275:277:public void setFontScaleY(float)
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle:
    public com.badlogic.gdx.graphics.Color fontColor
    291:294:public Label$LabelStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color)
    296:299:public Label$LabelStyle(com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle)
com.badlogic.gdx.scenes.scene2d.ui.List:
    private com.badlogic.gdx.math.Rectangle cullingArea
    49:50:public List(java.lang.Object[],com.badlogic.gdx.scenes.scene2d.ui.Skin)
    53:54:public List(java.lang.Object[],com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    74:75:public void setSelectable(boolean)
    105:105:public com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle getStyle()
    110:139:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    155:156:public java.lang.String getSelection()
    162:169:public int setSelection(java.lang.String)
    205:205:public java.lang.String[] getItems()
    221:222:public void setCullingArea(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle:
    236:241:public List$ListStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    243:248:public List$ListStyle(com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane:
    private boolean forceScrollX
    private boolean forceScrollY
    private boolean disableX
    private boolean disableY
    private boolean scrollbarsOnTop
    88:89:public ScrollPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    93:94:public ScrollPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    245:248:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle)
    257:335:public void act(float)
    338:470:public void layout()
    474:549:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    552:557:public float getPrefWidth()
    561:566:public float getPrefHeight()
    570:570:public float getMinWidth()
    574:574:public float getMinHeight()
    588:588:public com.badlogic.gdx.scenes.scene2d.Actor getWidget()
    598:598:public void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor)
    603:603:public void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
    608:608:public void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
    636:637:protected void visualScrollX(float)
    641:642:protected void visualScrollY(float)
    650:650:public float getScrollX()
    669:669:public float getVisualScrollX()
    673:673:public float getVisualScrollY()
    677:677:public float getScrollPercentX()
    685:685:public float getScrollPercentY()
    693:700:public void setFlickScroll(boolean)
    705:714:public void scrollTo(float,float,float,float)
    732:732:public float getMaxX()
    737:737:public float getMaxY()
    741:741:public float getScrollBarHeight()
    745:745:public float getScrollBarWidth()
    749:749:public boolean isScrollX()
    753:753:public boolean isScrollY()
    758:760:public void setScrollingDisabled(boolean,boolean)
    763:763:public boolean isDragging()
    767:767:public boolean isPanning()
    771:771:public boolean isFlinging()
    775:776:public void setVelocityX(float)
    780:783:public float getVelocityX()
    787:788:public void setVelocityY(float)
    792:792:public float getVelocityY()
    805:808:public void setupOverscroll(float,float,float)
    813:815:public void setForceScroll(boolean,boolean)
    818:818:public boolean isForceScrollX()
    822:822:public boolean isForceScrollY()
    827:828:public void setFlingTime(float)
    832:833:public void setClamp(boolean)
    837:841:public void setFadeScrollBars(boolean)
    844:846:public void setupFadeScrollBars(float,float)
    849:850:public void setSmoothScrolling(boolean)
    856:858:public void setScrollbarsOnTop(boolean)
    863:864:public void setCancelTouchFocus(boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle:
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable corner
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable hScroll
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable hScrollKnob
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable vScroll
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable vScrollKnob
    880:886:public ScrollPane$ScrollPaneStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    888:894:public ScrollPane$ScrollPaneStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox:
    private final com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds
    private com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener
    60:61:public SelectBox(java.lang.Object[],com.badlogic.gdx.scenes.scene2d.ui.Skin)
    64:65:public SelectBox(java.lang.Object[],com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    67:82:public SelectBox(java.lang.Object[],com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle)
    87:88:public void setMaxListCount(int)
    92:92:public int getMaxListCount()
    96:102:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle)
    107:107:public com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle getStyle()
    111:143:public void setItems(java.lang.Object[])
    146:146:public java.lang.String[] getItems()
    152:178:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    187:192:public void setSelection(java.lang.String)
    196:196:public int getSelectionIndex()
    201:201:public java.lang.String getSelection()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1:
    73:73:SelectBox$1(com.badlogic.gdx.scenes.scene2d.ui.SelectBox)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle:
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable background
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOver
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOpen
    331:337:public SelectBox$SelectBoxStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    339:345:public SelectBox$SelectBoxStyle(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList:
    309:312:public void act(float)
com.badlogic.gdx.scenes.scene2d.ui.Skin:
    66:74:public Skin(com.badlogic.gdx.files.FileHandle)
    86:89:public Skin(com.badlogic.gdx.graphics.g2d.TextureAtlas)
    110:111:public void add(java.lang.String,java.lang.Object)
    125:125:public java.lang.Object get(java.lang.Class)
    153:155:public boolean has(java.lang.String,java.lang.Class)
    160:160:public com.badlogic.gdx.utils.ObjectMap getAll(java.lang.Class)
    164:164:public com.badlogic.gdx.graphics.Color getColor(java.lang.String)
    168:168:public com.badlogic.gdx.graphics.g2d.BitmapFont getFont(java.lang.String)
    187:201:public com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable getTiledDrawable(java.lang.String)
    296:299:public java.lang.String find(java.lang.Object)
    304:304:public com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String)
    309:309:public com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,float,float,float,float)
    319:322:public com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    327:327:public com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,float,float,float,float)
    367:387:public void setEnabled(com.badlogic.gdx.scenes.scene2d.Actor,boolean)
    391:391:public com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas()
    494:499:private static java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable:
    public java.lang.String name
    public com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.scenes.scene2d.ui.Slider:
    53:54:public Slider(float,float,float,boolean,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    57:58:public Slider(float,float,float,boolean,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    68:103:public Slider(float,float,float,boolean,com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle)
    106:109:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle)
    114:114:public com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle getStyle()
    118:120:public void act(float)
    124:182:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    215:215:public boolean isDragging()
    219:219:public float getValue()
    257:263:public void setRange(float,float)
    267:269:public void setStepSize(float)
    286:286:public float getMinValue()
    290:290:public float getMaxValue()
    294:294:public float getStepSize()
    299:300:public void setAnimateDuration(float)
    304:306:public void setAnimateInterpolation(com.badlogic.gdx.math.Interpolation)
    310:312:public void setSnapToValues(float[],float)
com.badlogic.gdx.scenes.scene2d.ui.Slider$1:
    80:80:Slider$1(com.badlogic.gdx.scenes.scene2d.ui.Slider)
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle:
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable knobBefore
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable knobAfter
    337:340:public Slider$SliderStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    342:345:public Slider$SliderStyle(com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane:
    private com.badlogic.gdx.scenes.scene2d.Actor firstWidget
    private com.badlogic.gdx.scenes.scene2d.Actor secondWidget
    private float oldSplitAmount
    private com.badlogic.gdx.math.Rectangle firstWidgetBounds
    private com.badlogic.gdx.math.Rectangle secondWidgetBounds
    private com.badlogic.gdx.math.Rectangle firstScissors
    private com.badlogic.gdx.math.Rectangle secondScissors
    58:59:public SplitPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,boolean,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    64:65:public SplitPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,boolean,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    69:79:public SplitPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,boolean,com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle)
    82:131:private void initialize()
    134:136:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle)
    141:141:public com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle getStyle()
    146:185:public void layout()
    189:192:public float getPrefWidth()
    197:200:public float getPrefHeight()
    204:204:public float getMinWidth()
    208:208:public float getMinHeight()
    212:213:public void setVertical(boolean)
    216:228:private void calculateHorizBoundsAndPositions()
    231:244:private void calculateVertBoundsAndPositions()
    248:274:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    278:280:public void setSplitAmount(float)
    283:283:public float getSplit()
    287:290:public void setMinSplitAmount(float)
    293:296:public void setMaxSplitAmount(float)
    300:304:public void setFirstWidget(com.badlogic.gdx.scenes.scene2d.Actor)
    308:312:public void setSecondWidget(com.badlogic.gdx.scenes.scene2d.Actor)
    319:319:public void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor)
    323:323:public void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1:
    82:83:SplitPane$1(com.badlogic.gdx.scenes.scene2d.ui.SplitPane)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle:
    339:341:public SplitPane$SplitPaneStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    343:345:public SplitPane$SplitPaneStyle(com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle)
com.badlogic.gdx.scenes.scene2d.ui.Stack:
    private float prefWidth
    private float prefHeight
    private float minWidth
    private float minHeight
    private float maxWidth
    private float maxHeight
    58:88:private void computeSize()
    91:92:public void add(com.badlogic.gdx.scenes.scene2d.Actor)
    95:114:public void layout()
    117:118:public float getPrefWidth()
    122:123:public float getPrefHeight()
    127:128:public float getMinWidth()
    132:133:public float getMinHeight()
    137:138:public float getMaxWidth()
    142:143:public float getMaxHeight()
com.badlogic.gdx.scenes.scene2d.ui.Table:
    private com.badlogic.gdx.scenes.scene2d.utils.Drawable background
    79:96:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    101:106:protected void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    114:115:public float getPrefWidth()
    119:120:public float getPrefHeight()
    124:124:public float getMinWidth()
    128:128:public float getMinHeight()
    134:135:public void setBackground(java.lang.String)
    141:152:public void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    155:155:public com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground()
    169:172:public void setClip(boolean)
    176:176:public int getRow(float)
    188:189:public com.esotericsoftware.tablelayout.Cell add(java.lang.String)
    194:195:public com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String)
    200:201:public com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.Color)
    206:207:public com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,java.lang.String)
    212:212:public com.esotericsoftware.tablelayout.Cell add()
    218:218:public com.esotericsoftware.tablelayout.Cell add(com.badlogic.gdx.scenes.scene2d.Actor)
    231:236:public varargs com.esotericsoftware.tablelayout.Cell stack(com.badlogic.gdx.scenes.scene2d.Actor[])
    242:242:public com.esotericsoftware.tablelayout.Cell row()
    248:248:public com.esotericsoftware.tablelayout.Cell columnDefaults(int)
    253:253:public com.esotericsoftware.tablelayout.Cell defaults()
    257:258:public void layout()
    263:264:public void reset()
    273:273:public java.util.List getCells()
    278:279:public com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.esotericsoftware.tablelayout.Value)
    283:284:public com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    289:290:public com.badlogic.gdx.scenes.scene2d.ui.Table padTop(com.esotericsoftware.tablelayout.Value)
    295:296:public com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(com.esotericsoftware.tablelayout.Value)
    301:302:public com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(com.esotericsoftware.tablelayout.Value)
    307:308:public com.badlogic.gdx.scenes.scene2d.ui.Table padRight(com.esotericsoftware.tablelayout.Value)
    313:314:public com.badlogic.gdx.scenes.scene2d.ui.Table pad(float)
    318:319:public com.badlogic.gdx.scenes.scene2d.ui.Table pad(float,float,float,float)
    324:325:public com.badlogic.gdx.scenes.scene2d.ui.Table padTop(float)
    330:331:public com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(float)
    336:337:public com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(float)
    342:343:public com.badlogic.gdx.scenes.scene2d.ui.Table padRight(float)
    349:350:public com.badlogic.gdx.scenes.scene2d.ui.Table align(int)
    355:356:public com.badlogic.gdx.scenes.scene2d.ui.Table center()
    361:362:public com.badlogic.gdx.scenes.scene2d.ui.Table top()
    367:368:public com.badlogic.gdx.scenes.scene2d.ui.Table left()
    373:374:public com.badlogic.gdx.scenes.scene2d.ui.Table bottom()
    379:380:public com.badlogic.gdx.scenes.scene2d.ui.Table right()
    385:386:public com.badlogic.gdx.scenes.scene2d.ui.Table debug()
    391:392:public com.badlogic.gdx.scenes.scene2d.ui.Table debugTable()
    397:398:public com.badlogic.gdx.scenes.scene2d.ui.Table debugCell()
    403:404:public com.badlogic.gdx.scenes.scene2d.ui.Table debugWidget()
    409:410:public com.badlogic.gdx.scenes.scene2d.ui.Table debug(com.esotericsoftware.tablelayout.BaseTableLayout$Debug)
    414:414:public com.esotericsoftware.tablelayout.BaseTableLayout$Debug getDebug()
    418:418:public com.esotericsoftware.tablelayout.Value getPadTopValue()
    426:426:public com.esotericsoftware.tablelayout.Value getPadLeftValue()
    430:430:public float getPadLeft()
    434:434:public com.esotericsoftware.tablelayout.Value getPadBottomValue()
    438:438:public float getPadBottom()
    442:442:public com.esotericsoftware.tablelayout.Value getPadRightValue()
    446:446:public float getPadRight()
    451:451:public float getPadX()
    456:456:public float getPadY()
    460:460:public int getAlign()
    464:465:public void setSkin(com.badlogic.gdx.scenes.scene2d.ui.Skin)
    469:470:public void setRound(boolean)
    476:478:public static void drawDebug(com.badlogic.gdx.scenes.scene2d.Stage)
    481:487:private static void drawDebug(com.badlogic.gdx.utils.Array,com.badlogic.gdx.graphics.g2d.SpriteBatch)
com.badlogic.gdx.scenes.scene2d.ui.TableLayout:
    com.badlogic.gdx.utils.Array debugRects
    private com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer debugRenderer
    48:108:public void layout()
    112:114:public void invalidateHierarchy()
    117:120:private void toStageCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2)
    123:178:public void drawDebug(com.badlogic.gdx.graphics.g2d.SpriteBatch)
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit:
    static boolean drawDebug
    62:63:public float getMinWidth(com.badlogic.gdx.scenes.scene2d.Actor)
    67:68:public float getMinHeight(com.badlogic.gdx.scenes.scene2d.Actor)
    72:73:public float getPrefWidth(com.badlogic.gdx.scenes.scene2d.Actor)
    77:78:public float getPrefHeight(com.badlogic.gdx.scenes.scene2d.Actor)
    82:83:public float getMaxWidth(com.badlogic.gdx.scenes.scene2d.Actor)
    87:88:public float getMaxHeight(com.badlogic.gdx.scenes.scene2d.Actor)
    92:92:public float getWidth(com.badlogic.gdx.scenes.scene2d.Actor)
    96:96:public float getHeight(com.badlogic.gdx.scenes.scene2d.Actor)
    100:101:public void clearDebugRectangles(com.badlogic.gdx.scenes.scene2d.ui.TableLayout)
    104:107:public void addDebugRectangle(com.badlogic.gdx.scenes.scene2d.ui.TableLayout,com.esotericsoftware.tablelayout.BaseTableLayout$Debug,float,float,float,float)
    33:33:public bridge synthetic void addDebugRectangle(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.BaseTableLayout$Debug,float,float,float,float)
    33:33:public bridge synthetic void clearDebugRectangles(com.esotericsoftware.tablelayout.BaseTableLayout)
    33:33:public bridge synthetic float getHeight(java.lang.Object)
    33:33:public bridge synthetic float getWidth(java.lang.Object)
    33:33:public bridge synthetic float getMaxHeight(java.lang.Object)
    33:33:public bridge synthetic float getMaxWidth(java.lang.Object)
    33:33:public bridge synthetic float getPrefHeight(java.lang.Object)
    33:33:public bridge synthetic float getPrefWidth(java.lang.Object)
    33:33:public bridge synthetic float getMinHeight(java.lang.Object)
    33:33:public bridge synthetic float getMinWidth(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$DebugRect:
    final com.esotericsoftware.tablelayout.BaseTableLayout$Debug type
    113:115:public TableToolkit$DebugRect(com.esotericsoftware.tablelayout.BaseTableLayout$Debug,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.TextButton:
    private final com.badlogic.gdx.scenes.scene2d.ui.Label label
    private com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle style
    34:36:public TextButton(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    39:41:public TextButton(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    44:51:public TextButton(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle)
    54:64:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
    67:67:public com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle()
    72:84:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    87:87:public com.badlogic.gdx.scenes.scene2d.ui.Label getLabel()
    91:91:public com.esotericsoftware.tablelayout.Cell getLabelCell()
    95:96:public void setText(java.lang.String)
    99:99:public java.lang.CharSequence getText()
    29:29:public bridge synthetic com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle:
    public com.badlogic.gdx.graphics.g2d.BitmapFont font
    public com.badlogic.gdx.graphics.Color fontColor
    public com.badlogic.gdx.graphics.Color downFontColor
    public com.badlogic.gdx.graphics.Color overFontColor
    public com.badlogic.gdx.graphics.Color checkedFontColor
    public com.badlogic.gdx.graphics.Color checkedOverFontColor
    public com.badlogic.gdx.graphics.Color disabledFontColor
    113:115:public TextButton$TextButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.BitmapFont)
    118:126:public TextButton$TextButtonStyle(com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.TextField:
    private static final char BACKSPACE
    private static final char ENTER_DESKTOP
    private static final char ENTER_ANDROID
    private static final char TAB
    private static final char DELETE
    private static final char BULLET
    java.lang.String messageText
    boolean onlyFontChars
    private final com.badlogic.gdx.math.Rectangle fieldBounds
    private final com.badlogic.gdx.math.Rectangle scissor
    private int visibleTextStart
    private int visibleTextEnd
    private float blinkTime
    private float selectionX
    private float selectionWidth
    boolean rightAligned
    114:115:public TextField(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    118:119:public TextField(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    121:128:public TextField(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle)
    131:371:private void initialize()
    374:375:public void setMaxLength(int)
    378:378:public int getMaxLength()
    385:386:public void setOnlyFontChars(boolean)
    389:392:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle)
    396:398:public void setPasswordCharacter(char)
    403:403:public com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle getStyle()
    407:458:private void calculateOffsets()
    463:521:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    547:552:private void blink()
    659:660:public void setTextFieldListener(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener)
    664:665:public void setTextFieldFilter(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter)
    669:670:public void setFocusTraversal(boolean)
    674:674:public java.lang.String getMessageText()
    680:681:public void setMessageText(java.lang.String)
    684:705:public void setText(java.lang.String)
    709:709:public java.lang.String getText()
    734:735:public void selectAll()
    743:746:public void setCursorPosition(int)
    749:749:public int getCursorPosition()
    754:754:public com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard getOnscreenKeyboard()
    758:759:public void setOnscreenKeyboard(com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard)
    762:763:public void setClipboard(com.badlogic.gdx.utils.Clipboard)
    779:780:public void setRightAligned(boolean)
    785:787:public void setPasswordMode(boolean)
    790:791:public void setBlinkTime(float)
    794:795:public void setDisabled(boolean)
    802:802:public boolean isPasswordMode()
    806:806:public com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter getTextFieldFilter()
com.badlogic.gdx.scenes.scene2d.ui.TextField$1:
    131:131:TextField$1(com.badlogic.gdx.scenes.scene2d.ui.TextField)
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask:
    809:809:TextField$KeyRepeatTask(com.badlogic.gdx.scenes.scene2d.ui.TextField)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle:
    public com.badlogic.gdx.graphics.Color fontColor
    public com.badlogic.gdx.graphics.Color focusedFontColor
    public com.badlogic.gdx.graphics.Color disabledFontColor
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable focusedBackground
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledBackground
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable cursor
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable selection
    public com.badlogic.gdx.graphics.g2d.BitmapFont messageFont
    public com.badlogic.gdx.graphics.Color messageFontColor
    872:878:public TextField$TextFieldStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    880:892:public TextField$TextFieldStyle(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad:
    private float deadzoneRadius
    49:50:public Touchpad(float,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    54:55:public Touchpad(float,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    58:88:public Touchpad(float,com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle)
    122:125:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle)
    130:130:public com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle getStyle()
    141:151:public void layout()
    155:174:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    187:187:public boolean isTouched()
    192:195:public void setDeadzone(float)
    199:199:public float getKnobX()
    204:204:public float getKnobY()
    210:210:public float getKnobPercentX()
    216:216:public float getKnobPercentY()
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1:
    68:68:Touchpad$1(com.badlogic.gdx.scenes.scene2d.ui.Touchpad)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle:
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable knob
    231:234:public Touchpad$TouchpadStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    236:239:public Touchpad$TouchpadStyle(com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle)
com.badlogic.gdx.scenes.scene2d.ui.Tree:
    com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle style
    float padding
    float indentSpacing
    private float leftColumnWidth
    private float prefWidth
    private float prefHeight
    private com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener
    53:54:public Tree(com.badlogic.gdx.scenes.scene2d.ui.Skin)
    57:58:public Tree(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    60:63:public Tree(com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle)
    66:119:private void initialize()
    122:124:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle)
    127:128:public void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
    131:136:public void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
    139:146:public void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
    164:164:public com.badlogic.gdx.utils.Array getNodes()
    173:182:private void computeSize()
    185:207:private void computeSize(com.badlogic.gdx.utils.Array,float)
    210:212:public void layout()
    215:227:private float layout(com.badlogic.gdx.utils.Array,float,float)
    231:239:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    243:270:private void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.utils.Array,float)
    307:307:public com.badlogic.gdx.utils.Array getSelection()
    311:314:public void setSelection(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
    317:320:public void setSelection(com.badlogic.gdx.utils.Array)
    323:325:public void addSelection(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
    328:330:public void clearSelection()
    333:333:public com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle getStyle()
    337:337:public com.badlogic.gdx.utils.Array getRootNodes()
    341:341:public com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getOverNode()
    350:351:public void setPadding(float)
    355:356:public void setYSpacing(float)
    360:361:public void setIconSpacing(float)
    364:365:public float getPrefWidth()
    369:370:public float getPrefHeight()
    374:375:public void findExpandedObjects(com.badlogic.gdx.utils.Array)
    378:385:public void restoreExpandedObjects(com.badlogic.gdx.utils.Array)
    388:393:static boolean findExpandedObjects(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array)
    398:399:public com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object)
    403:412:static com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(com.badlogic.gdx.utils.Array,java.lang.Object)
    416:417:public void collapseAll()
    420:425:static void collapseAll(com.badlogic.gdx.utils.Array)
    428:429:public void expandAll()
    432:434:static void expandAll(com.badlogic.gdx.utils.Array)
    438:438:public com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener()
    442:443:public void setMultiSelect(boolean)
    446:447:public void setToggleSelect(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Tree$1:
    66:66:Tree$1(com.badlogic.gdx.scenes.scene2d.ui.Tree)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node:
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node parent
    java.lang.Object object
    459:462:public Tree$Node(com.badlogic.gdx.scenes.scene2d.Actor)
    497:498:public void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
    501:503:public void addAll(com.badlogic.gdx.utils.Array)
    506:513:public void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
    516:519:public void remove()
    522:528:public void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
    531:537:public void removeAll()
    547:547:public com.badlogic.gdx.scenes.scene2d.Actor getActor()
    551:551:public boolean isExpanded()
    555:555:public com.badlogic.gdx.utils.Array getChildren()
    560:560:public com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getParent()
    565:566:public void setIcon(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    569:569:public java.lang.Object getObject()
    574:575:public void setObject(java.lang.Object)
    578:578:public com.badlogic.gdx.scenes.scene2d.utils.Drawable getIcon()
    583:585:public com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object)
    590:592:public void collapseAll()
    596:598:public void expandAll()
    602:607:public void expandTo()
    614:615:public void setSelectable(boolean)
    618:619:public void findExpandedObjects(com.badlogic.gdx.utils.Array)
    622:629:public void restoreExpandedObjects(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle:
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable plus
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable minus
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable over
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable selection
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable background
    642:646:public Tree$TreeStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    648:652:public Tree$TreeStyle(com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle)
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup:
    private float prefWidth
    private float prefHeight
    private int alignment
    private boolean reverse
    43:44:public void setAlignment(int)
    48:49:public void setReverse(boolean)
    57:72:private void computeSize()
    75:101:public void layout()
    104:105:public float getPrefWidth()
    109:110:public float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.Widget:
    private boolean fillParent
    41:41:public float getMinWidth()
    45:45:public float getMinHeight()
    57:57:public float getMaxWidth()
    61:61:public float getMaxHeight()
    65:67:public void setLayoutEnabled(boolean)
    70:93:public void validate()
    97:97:public boolean needsLayout()
    112:120:public void pack()
    123:124:public void setFillParent(boolean)
    128:129:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    132:132:public void layout()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup:
    private boolean fillParent
    42:42:public float getMinWidth()
    46:46:public float getMinHeight()
    50:50:public float getPrefWidth()
    54:54:public float getPrefHeight()
    58:58:public float getMaxWidth()
    62:62:public float getMaxHeight()
    66:69:public void setLayoutEnabled(boolean)
    72:80:private void setLayoutEnabled(com.badlogic.gdx.scenes.scene2d.Group,boolean)
    83:106:public void validate()
    110:110:public boolean needsLayout()
    128:136:public void pack()
    139:140:public void setFillParent(boolean)
    143:143:public void layout()
    148:150:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
com.badlogic.gdx.scenes.scene2d.ui.Window:
    private com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle style
    private java.lang.String title
    private com.badlogic.gdx.graphics.g2d.BitmapFontCache titleCache
    private int titleAlignment
    boolean keepWithinStage
    52:54:public Window(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    57:59:public Window(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    61:111:public Window(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle)
    114:121:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle)
    126:126:public com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle getStyle()
    130:140:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    143:172:protected void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    181:183:public void setTitle(java.lang.String)
    186:186:public java.lang.String getTitle()
    191:192:public void setTitleAlignment(int)
    195:196:public void setMovable(boolean)
    199:200:public void setModal(boolean)
    203:204:public void setKeepWithinStage(boolean)
    207:207:public boolean isDragging()
    211:211:public float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.Window$1:
    71:71:Window$1(com.badlogic.gdx.scenes.scene2d.ui.Window)
com.badlogic.gdx.scenes.scene2d.ui.Window$2:
    77:77:Window$2(com.badlogic.gdx.scenes.scene2d.ui.Window)
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle:
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable background
    public com.badlogic.gdx.graphics.g2d.BitmapFont titleFont
    public com.badlogic.gdx.scenes.scene2d.utils.Drawable stageBackground
    228:232:public Window$WindowStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    234:238:public Window$WindowStyle(com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener:
    145:145:public com.badlogic.gdx.input.GestureDetector getGestureDetector()
    149:149:public com.badlogic.gdx.scenes.scene2d.Actor getTouchDownTarget()
com.badlogic.gdx.scenes.scene2d.utils.Align:
    public static final int center
    public static final int top
    public static final int bottom
    public static final int left
    public static final int right
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable:
    40:40:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.ClickListener:
    46:48:public ClickListener(int)
    102:106:public void cancel()
    112:112:public void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
    115:115:public void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
    118:118:public void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
    140:140:public boolean isPressed()
    145:145:public boolean isOver()
    149:150:public void setTapSquareSize(float)
    153:153:public float getTapSquareSize()
    158:159:public void setTapCountInterval(float)
    167:167:public float getTouchDownX()
    176:176:public int getPressedButton()
    181:181:public int getPressedPointer()
    186:186:public int getButton()
    191:192:public void setButton(int)
com.badlogic.gdx.scenes.scene2d.utils.Cullable:
    public abstract void setCullingArea(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop:
    private int button
    48:139:public void addSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source)
    142:144:public void removeSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source)
    147:148:public void addTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target)
    151:152:public void removeTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target)
    156:157:public void setTapSquareSize(float)
    161:162:public void setButton(int)
    165:167:public void setDragActorPosition(float,float)
    170:170:public boolean isDragging()
    175:175:public com.badlogic.gdx.scenes.scene2d.Actor getDragActor()
    181:182:public void setDragTime(int)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1:
    48:48:DragAndDrop$1(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload:
    java.lang.Object object
    241:242:public void setDragActor(com.badlogic.gdx.scenes.scene2d.Actor)
    245:245:public com.badlogic.gdx.scenes.scene2d.Actor getDragActor()
    249:250:public void setValidDragActor(com.badlogic.gdx.scenes.scene2d.Actor)
    253:253:public com.badlogic.gdx.scenes.scene2d.Actor getValidDragActor()
    257:258:public void setInvalidDragActor(com.badlogic.gdx.scenes.scene2d.Actor)
    261:261:public com.badlogic.gdx.scenes.scene2d.Actor getInvalidDragActor()
    265:265:public java.lang.Object getObject()
    269:270:public void setObject(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source:
    final com.badlogic.gdx.scenes.scene2d.Actor actor
    189:192:public DragAndDrop$Source(com.badlogic.gdx.scenes.scene2d.Actor)
    202:202:public com.badlogic.gdx.scenes.scene2d.Actor getActor()
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target:
    211:217:public DragAndDrop$Target(com.badlogic.gdx.scenes.scene2d.Actor)
    230:230:public com.badlogic.gdx.scenes.scene2d.Actor getActor()
com.badlogic.gdx.scenes.scene2d.utils.DragListener:
    84:84:public boolean isDragging()
    88:89:public void setTapSquareSize(float)
    92:92:public float getTapSquareSize()
    105:105:public float getDeltaX()
    110:110:public float getDeltaY()
    114:114:public int getButton()
    119:120:public void setButton(int)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener:
    34:47:public DragScrollListener(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane)
    50:54:public void setup(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1:
    37:37:DragScrollListener$1(com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener,com.badlogic.gdx.scenes.scene2d.ui.ScrollPane)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2:
    42:42:DragScrollListener$2(com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener,com.badlogic.gdx.scenes.scene2d.ui.ScrollPane)
com.badlogic.gdx.scenes.scene2d.utils.Drawable:
    public abstract void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float)
    public abstract void setLeftWidth(float)
    public abstract void setRightWidth(float)
    public abstract void setTopHeight(float)
    public abstract void setBottomHeight(float)
    public abstract void setMinWidth(float)
    public abstract void setMinHeight(float)
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type:
    88:88:public static com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type valueOf(java.lang.String)
com.badlogic.gdx.scenes.scene2d.utils.Layout:
    public abstract void layout()
    public abstract void invalidate()
    public abstract void validate()
    public abstract void pack()
    public abstract void setFillParent(boolean)
    public abstract void setLayoutEnabled(boolean)
    public abstract float getMinWidth()
    public abstract float getMinHeight()
    public abstract float getPrefWidth()
    public abstract float getPrefHeight()
    public abstract float getMaxWidth()
    public abstract float getMaxHeight()
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable:
    48:49:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack:
    45:68:public static boolean pushScissors(com.badlogic.gdx.math.Rectangle)
    74:81:public static com.badlogic.gdx.math.Rectangle popScissors()
    85:97:private static void fix(com.badlogic.gdx.math.Rectangle)
    109:120:public static void calculateScissors(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
    124:130:public static com.badlogic.gdx.math.Rectangle getViewport()
    140:146:public static void toWindowCoordinates(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable:
    42:47:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable:
    36:38:public TextureRegionDrawable(com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable)
    41:42:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable:
    30:31:public TiledDrawable(com.badlogic.gdx.graphics.g2d.TextureRegion)
    34:35:public TiledDrawable(com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable)
    38:79:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float)
com.badlogic.gdx.utils.Array:
    private com.badlogic.gdx.utils.Predicate$PredicateIterable predicateIterable
    69:70:public Array(java.lang.Class)
    76:79:public Array(com.badlogic.gdx.utils.Array)
    85:86:public Array(java.lang.Object[])
    93:96:public Array(boolean,java.lang.Object[],int,int)
    115:116:public void addAll(java.lang.Object[])
    149:155:public void swap(int,int)
    193:201:public int lastIndexOf(java.lang.Object,boolean)
    245:271:public boolean removeAll(com.badlogic.gdx.utils.Array,boolean)
    303:304:public void shrink()
    327:328:public void sort()
    336:342:public void reverse()
    345:351:public void shuffle()
    365:369:public java.lang.Iterable select(com.badlogic.gdx.utils.Predicate)
    375:379:public void truncate(int)
    383:384:public java.lang.Object random()
    390:390:public java.lang.Object[] toArray()
    430:438:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.Array$ArrayIterator:
    448:449:public Array$ArrayIterator(com.badlogic.gdx.utils.Array)
    473:474:public void reset()
com.badlogic.gdx.utils.ArrayMap:
    private com.badlogic.gdx.utils.ArrayMap$Values valuesIter1
    private com.badlogic.gdx.utils.ArrayMap$Values valuesIter2
    private com.badlogic.gdx.utils.ArrayMap$Keys keysIter1
    private com.badlogic.gdx.utils.ArrayMap$Keys keysIter2
    48:49:public ArrayMap(int)
    79:83:public ArrayMap(com.badlogic.gdx.utils.ArrayMap)
    94:102:public void put(java.lang.Object,java.lang.Object,int)
    105:106:public void putAll(com.badlogic.gdx.utils.ArrayMap)
    109:116:public void putAll(com.badlogic.gdx.utils.ArrayMap,int,int)
    121:130:public java.lang.Object get(java.lang.Object)
    137:146:public java.lang.Object getKey(java.lang.Object,boolean)
    150:151:public java.lang.Object getKeyAt(int)
    155:156:public java.lang.Object getValueAt(int)
    160:161:public java.lang.Object firstKey()
    165:166:public java.lang.Object firstValue()
    170:172:public void setKey(int,java.lang.Object)
    175:177:public void setValue(int,java.lang.Object)
    180:192:public void insert(int,java.lang.Object,java.lang.Object)
    195:204:public boolean containsKey(java.lang.Object)
    209:218:public boolean containsValue(java.lang.Object,boolean)
    234:242:public int indexOfValue(java.lang.Object,boolean)
    246:264:public java.lang.Object removeKey(java.lang.Object)
    268:284:public boolean removeValue(java.lang.Object,boolean)
    305:305:public java.lang.Object peekKey()
    310:310:public java.lang.Object peekValue()
    326:327:public void shrink()
    332:334:public void ensureCapacity(int)
    347:357:public void reverse()
    360:370:public void shuffle()
    375:381:public void truncate(int)
    424:437:public com.badlogic.gdx.utils.ArrayMap$Values values()
    443:456:public com.badlogic.gdx.utils.ArrayMap$Keys keys()
com.badlogic.gdx.utils.ArrayMap$Entries:
    491:492:public void reset()
com.badlogic.gdx.utils.ArrayMap$Keys:
    537:539:public ArrayMap$Keys(com.badlogic.gdx.utils.ArrayMap)
    561:562:public void reset()
    565:565:public com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.ArrayMap$Values:
    500:502:public ArrayMap$Values(com.badlogic.gdx.utils.ArrayMap)
    524:525:public void reset()
    528:528:public com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.AtomicQueue:
    private final java.util.concurrent.atomic.AtomicInteger writeIndex
    private final java.util.concurrent.atomic.AtomicInteger readIndex
    private final java.util.concurrent.atomic.AtomicReferenceArray queue
    36:38:public AtomicQueue(int)
    41:41:private int next(int)
    45:51:public boolean put(java.lang.Object)
    55:60:public java.lang.Object poll()
com.badlogic.gdx.utils.Base64Coder:
    private static final java.lang.String systemLineSeparator
    63:63:public static java.lang.String encodeString(java.lang.String)
    72:72:public static java.lang.String encodeLines(byte[])
    84:96:public static java.lang.String encodeLines(byte[],int,int,int,java.lang.String)
    104:104:public static char[] encode(byte[])
    113:113:public static char[] encode(byte[],int)
    123:144:public static char[] encode(byte[],int,int)
    153:153:public static java.lang.String decodeString(java.lang.String)
    163:169:public static byte[] decodeLines(java.lang.String)
com.badlogic.gdx.utils.BaseJsonReader:
    public abstract com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream)
com.badlogic.gdx.utils.BinaryHeap:
    37:46:public com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node)
    50:51:public com.badlogic.gdx.utils.BinaryHeap$Node peek()
    55:60:public com.badlogic.gdx.utils.BinaryHeap$Node pop()
    64:70:public void setValue(com.badlogic.gdx.utils.BinaryHeap$Node,float)
    73:88:private void up(int)
    91:133:private void down(int)
com.badlogic.gdx.utils.BinaryHeap$Node:
    float value
    int index
    154:156:public BinaryHeap$Node(float)
    159:159:public float getValue()
com.badlogic.gdx.utils.Bits:
    17:19:public boolean get(int)
    27:30:public void set(int)
    36:39:public void flip(int)
    42:47:private void checkCapacity(int)
    54:57:public void clear(int)
    63:67:public void clear()
    73:73:public int numBits()
com.badlogic.gdx.utils.BooleanArray:
    40:41:public BooleanArray(int)
    54:59:public BooleanArray(com.badlogic.gdx.utils.BooleanArray)
    64:65:public BooleanArray(boolean[])
    72:75:public BooleanArray(boolean,boolean[],int,int)
    78:81:public void add(boolean)
    84:85:public void addAll(com.badlogic.gdx.utils.BooleanArray)
    88:91:public void addAll(com.badlogic.gdx.utils.BooleanArray,int,int)
    94:95:public void addAll(boolean[])
    98:103:public void addAll(boolean[],int,int)
    106:107:public boolean get(int)
    111:113:public void set(int,boolean)
    116:125:public void insert(int,boolean)
    128:134:public void swap(int,int)
    138:146:public boolean removeIndex(int)
    152:165:public boolean removeAll(com.badlogic.gdx.utils.BooleanArray)
    170:170:public boolean pop()
    175:175:public boolean peek()
    180:181:public boolean first()
    185:186:public void clear()
    191:192:public void shrink()
    198:200:public boolean[] ensureCapacity(int)
    204:208:protected boolean[] resize(int)
    212:218:public void reverse()
    221:227:public void shuffle()
    232:233:public void truncate(int)
    237:238:public boolean random()
    242:244:public boolean[] toArray()
    273:281:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.BufferUtils:
    65:67:public static void copy(byte[],int,java.nio.Buffer,int)
    79:81:public static void copy(short[],int,java.nio.Buffer,int)
    93:95:public static void copy(char[],int,java.nio.Buffer,int)
    107:109:public static void copy(int[],int,java.nio.Buffer,int)
    121:123:public static void copy(long[],int,java.nio.Buffer,int)
    135:137:public static void copy(float[],int,java.nio.Buffer,int)
    149:151:public static void copy(double[],int,java.nio.Buffer,int)
    163:166:public static void copy(java.nio.Buffer,java.nio.Buffer,int)
    169:184:private static int positionInBytes(java.nio.Buffer)
    188:203:private static int bytesToElements(java.nio.Buffer,int)
    207:222:private static int elementsToBytes(java.nio.Buffer,int)
    232:234:public static java.nio.DoubleBuffer newDoubleBuffer(int)
    244:246:public static java.nio.ShortBuffer newShortBuffer(int)
    250:252:public static java.nio.CharBuffer newCharBuffer(int)
    262:264:public static java.nio.LongBuffer newLongBuffer(int)
    303:303:public static long getUnsafeBufferAddress(java.nio.Buffer)
    314:318:public static java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer)
    325:325:public static int getAllocatedBytesUnsafe()
    private static native long getBufferAddress(java.nio.Buffer)
    public static native void clear(java.nio.ByteBuffer,int)
    private static native void copyJni(byte[],int,java.nio.Buffer,int,int)
    private static native void copyJni(char[],int,java.nio.Buffer,int,int)
    private static native void copyJni(short[],int,java.nio.Buffer,int,int)
    private static native void copyJni(int[],int,java.nio.Buffer,int,int)
    private static native void copyJni(long[],int,java.nio.Buffer,int,int)
    private static native void copyJni(float[],int,java.nio.Buffer,int,int)
    private static native void copyJni(double[],int,java.nio.Buffer,int,int)
    private static native void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.CharArray:
    38:39:public CharArray(int)
    52:57:public CharArray(com.badlogic.gdx.utils.CharArray)
    62:63:public CharArray(char[])
    70:73:public CharArray(boolean,char[],int,int)
    76:79:public void add(char)
    82:83:public void addAll(com.badlogic.gdx.utils.CharArray)
    86:89:public void addAll(com.badlogic.gdx.utils.CharArray,int,int)
    92:93:public void addAll(char[])
    96:101:public void addAll(char[],int,int)
    104:105:public char get(int)
    109:111:public void set(int,char)
    114:123:public void insert(int,char)
    126:132:public void swap(int,int)
    135:139:public boolean contains(char)
    143:146:public int indexOf(char)
    150:153:public int lastIndexOf(char)
    157:164:public boolean removeValue(char)
    169:177:public char removeIndex(int)
    183:196:public boolean removeAll(com.badlogic.gdx.utils.CharArray)
    201:201:public char pop()
    206:206:public char peek()
    211:212:public char first()
    216:217:public void clear()
    222:223:public void shrink()
    229:231:public char[] ensureCapacity(int)
    235:239:protected char[] resize(int)
    243:244:public void sort()
    247:253:public void reverse()
    256:262:public void shuffle()
    267:268:public void truncate(int)
    272:273:public char random()
    277:279:public char[] toArray()
    308:316:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.ComparableTimSort:
    private static final int MIN_MERGE
    private java.lang.Object[] a
    private static final int MIN_GALLOP
    private static final int INITIAL_TMP_STORAGE_LENGTH
    private static final boolean DEBUG
    76:117:public void doSort(java.lang.Object[],int,int)
    122:140:private ComparableTimSort(java.lang.Object[])
    148:149:static void sort(java.lang.Object[])
    152:191:static void sort(java.lang.Object[],int,int)
    206:245:private static void binarySort(java.lang.Object[],int,int,int)
    268:281:private static int countRunAndMakeAscending(java.lang.Object[],int,int)
    290:296:private static void reverseRange(java.lang.Object[],int,int)
    313:318:private static int minRunLength(int)
    326:329:private void pushRun(int,int)
    338:349:private void mergeCollapse()
    353:358:private void mergeForceCollapse()
    370:411:private void mergeAt(int)
    428:476:private static int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)
    492:540:private static int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)
    559:649:private void mergeLo(int,int,int,int)
    663:756:private void mergeHi(int,int,int,int)
    764:782:private java.lang.Object[] ensureCapacity(int)
    793:796:private static void rangeCheck(int,int,int)
com.badlogic.gdx.utils.DataInput:
    private char[] chars
    28:29:public DataInput(java.io.InputStream)
    33:51:public int readInt(boolean)
    57:77:public java.lang.String readString()
    81:105:private void readUtf8_slow(int,int,int)
com.badlogic.gdx.utils.DataOutput:
    26:27:public DataOutput(java.io.OutputStream)
    33:55:public int writeInt(int,boolean)
    61:79:public void writeString(java.lang.String)
    82:95:private void writeString_slow(java.lang.String,int,int)
com.badlogic.gdx.utils.DelayedRemovalArray:
    37:38:public DelayedRemovalArray(com.badlogic.gdx.utils.Array)
    41:42:public DelayedRemovalArray(boolean,int,java.lang.Class)
    45:46:public DelayedRemovalArray(boolean,int)
    49:50:public DelayedRemovalArray(boolean,java.lang.Object[],int,int)
    53:54:public DelayedRemovalArray(java.lang.Class)
    61:62:public DelayedRemovalArray(java.lang.Object[])
    115:117:public void swap(int,int)
    130:132:public void sort()
    140:142:public void reverse()
    145:147:public void shuffle()
    150:152:public void truncate(int)
com.badlogic.gdx.utils.FloatArray:
    52:57:public FloatArray(com.badlogic.gdx.utils.FloatArray)
    62:63:public FloatArray(float[])
    70:73:public FloatArray(boolean,float[],int,int)
    82:83:public void addAll(com.badlogic.gdx.utils.FloatArray)
    86:89:public void addAll(com.badlogic.gdx.utils.FloatArray,int,int)
    92:93:public void addAll(float[])
    96:101:public void addAll(float[],int,int)
    109:111:public void set(int,float)
    114:123:public void insert(int,float)
    126:132:public void swap(int,int)
    135:139:public boolean contains(float)
    143:146:public int indexOf(float)
    150:153:public int lastIndexOf(char)
    157:164:public boolean removeValue(float)
    169:177:public float removeIndex(int)
    183:196:public boolean removeAll(com.badlogic.gdx.utils.FloatArray)
    201:201:public float pop()
    206:206:public float peek()
    211:212:public float first()
    222:223:public void shrink()
    229:231:public float[] ensureCapacity(int)
    243:244:public void sort()
    247:253:public void reverse()
    256:262:public void shuffle()
    267:268:public void truncate(int)
    272:273:public float random()
    277:279:public float[] toArray()
    308:316:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.GdxBuild:
    30:65:public static void main(java.lang.String[])
com.badlogic.gdx.utils.GdxRuntimeException:
    private static final long serialVersionUID
com.badlogic.gdx.utils.GwtModuleGenerator:
    34:48:private static void gatherJavaFiles(com.badlogic.gdx.files.FileHandle,java.util.Set,java.util.Map,boolean)
    51:124:public static void main(java.lang.String[])
com.badlogic.gdx.utils.IdentityMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.IdentityMap$Entries entries1
    private com.badlogic.gdx.utils.IdentityMap$Entries entries2
    private com.badlogic.gdx.utils.IdentityMap$Values values1
    private com.badlogic.gdx.utils.IdentityMap$Values values2
    private com.badlogic.gdx.utils.IdentityMap$Keys keys1
    private com.badlogic.gdx.utils.IdentityMap$Keys keys2
    63:64:public IdentityMap(int)
    87:148:public java.lang.Object put(java.lang.Object,java.lang.Object)
    154:183:private void putResize(java.lang.Object,java.lang.Object)
    186:253:private void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)
    256:268:private void putStash(java.lang.Object,java.lang.Object)
    271:280:public java.lang.Object get(java.lang.Object)
    284:293:public java.lang.Object get(java.lang.Object,java.lang.Object)
    297:300:private java.lang.Object getStash(java.lang.Object,java.lang.Object)
    304:332:public java.lang.Object remove(java.lang.Object)
    336:345:java.lang.Object removeStash(java.lang.Object)
    361:369:public void clear()
    376:388:public boolean containsValue(java.lang.Object,boolean)
    392:401:public boolean containsKey(java.lang.Object)
    405:408:private boolean containsKeyStash(java.lang.Object)
    416:428:public java.lang.Object findKey(java.lang.Object,boolean)
    434:436:public void ensureCapacity(int)
    439:460:private void resize(int)
    463:464:private int hash2(int)
    468:469:private int hash3(int)
    502:515:public com.badlogic.gdx.utils.IdentityMap$Entries entries()
    521:534:public com.badlogic.gdx.utils.IdentityMap$Values values()
    540:553:public com.badlogic.gdx.utils.IdentityMap$Keys keys()
com.badlogic.gdx.utils.IdentityMap$Entries:
    611:612:public IdentityMap$Entries(com.badlogic.gdx.utils.IdentityMap)
    607:607:public bridge synthetic void reset()
com.badlogic.gdx.utils.IdentityMap$Keys:
    674:675:public IdentityMap$Keys(com.badlogic.gdx.utils.IdentityMap)
    696:699:public com.badlogic.gdx.utils.Array toArray()
    672:672:public bridge synthetic void reset()
com.badlogic.gdx.utils.IdentityMap$MapIterator:
    572:575:public IdentityMap$MapIterator(com.badlogic.gdx.utils.IdentityMap)
    578:581:public void reset()
com.badlogic.gdx.utils.IdentityMap$Values:
    637:638:public IdentityMap$Values(com.badlogic.gdx.utils.IdentityMap)
    659:662:public com.badlogic.gdx.utils.Array toArray()
    667:669:public void toArray(com.badlogic.gdx.utils.Array)
    635:635:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntArray:
    52:57:public IntArray(com.badlogic.gdx.utils.IntArray)
    62:63:public IntArray(int[])
    70:73:public IntArray(boolean,int[],int,int)
    82:83:public void addAll(com.badlogic.gdx.utils.IntArray)
    86:89:public void addAll(com.badlogic.gdx.utils.IntArray,int,int)
    92:93:public void addAll(int[])
    96:101:public void addAll(int[],int,int)
    109:111:public void set(int,int)
    126:132:public void swap(int,int)
    135:139:public boolean contains(int)
    143:146:public int indexOf(int)
    150:153:public int lastIndexOf(int)
    157:164:public boolean removeValue(int)
    169:177:public int removeIndex(int)
    183:196:public boolean removeAll(com.badlogic.gdx.utils.IntArray)
    206:206:public int peek()
    211:212:public int first()
    216:217:public void clear()
    222:223:public void shrink()
    229:231:public int[] ensureCapacity(int)
    243:244:public void sort()
    247:253:public void reverse()
    256:262:public void shuffle()
    267:268:public void truncate(int)
    272:273:public int random()
    277:279:public int[] toArray()
    308:316:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.IntFloatMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.IntFloatMap$Entries entries1
    private com.badlogic.gdx.utils.IntFloatMap$Entries entries2
    private com.badlogic.gdx.utils.IntFloatMap$Values values1
    private com.badlogic.gdx.utils.IntFloatMap$Values values2
    private com.badlogic.gdx.utils.IntFloatMap$Keys keys1
    private com.badlogic.gdx.utils.IntFloatMap$Keys keys2
    67:68:public IntFloatMap(int)
    91:155:public void put(int,float)
    158:160:public void putAll(com.badlogic.gdx.utils.IntFloatMap)
    164:199:private void putResize(int,float)
    202:268:private void push(int,float,int,int,int,int,int,int)
    271:283:private void putStash(int,float)
    287:299:public float get(int,float)
    303:306:private float getStash(int,float)
    312:322:public float getAndIncrement(int,float,float)
    326:334:private float getAndIncrementStash(int,float,float)
    338:369:public float remove(int,float)
    373:382:float removeStash(int,float)
    396:401:public void clear()
    406:410:public boolean containsValue(float)
    416:420:public boolean containsValue(float,float)
    424:433:public boolean containsKey(int)
    437:440:private boolean containsKeyStash(int)
    446:450:public int findKey(float,int)
    456:458:public void ensureCapacity(int)
    461:482:private void resize(int)
    485:486:private int hash2(int)
    490:491:private int hash3(int)
    529:542:public com.badlogic.gdx.utils.IntFloatMap$Entries entries()
    548:561:public com.badlogic.gdx.utils.IntFloatMap$Values values()
    567:580:public com.badlogic.gdx.utils.IntFloatMap$Keys keys()
com.badlogic.gdx.utils.IntFloatMap$Entries:
    646:647:public IntFloatMap$Entries(com.badlogic.gdx.utils.IntFloatMap)
    642:642:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntFloatMap$Keys:
    708:709:public IntFloatMap$Keys(com.badlogic.gdx.utils.IntFloatMap)
    712:712:public boolean hasNext()
    716:721:public int next()
    726:729:public com.badlogic.gdx.utils.IntArray toArray()
    706:706:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntFloatMap$MapIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
    602:605:public IntFloatMap$MapIterator(com.badlogic.gdx.utils.IntFloatMap)
    608:614:public void reset()
com.badlogic.gdx.utils.IntFloatMap$Values:
    677:678:public IntFloatMap$Values(com.badlogic.gdx.utils.IntFloatMap)
    681:681:public boolean hasNext()
    685:694:public float next()
    699:702:public com.badlogic.gdx.utils.FloatArray toArray()
    675:675:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntIntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.IntIntMap$Entries entries1
    private com.badlogic.gdx.utils.IntIntMap$Entries entries2
    private com.badlogic.gdx.utils.IntIntMap$Values values1
    private com.badlogic.gdx.utils.IntIntMap$Values values2
    private com.badlogic.gdx.utils.IntIntMap$Keys keys1
    private com.badlogic.gdx.utils.IntIntMap$Keys keys2
    65:66:public IntIntMap(int)
    89:153:public void put(int,int)
    156:158:public void putAll(com.badlogic.gdx.utils.IntIntMap)
    162:197:private void putResize(int,int)
    200:266:private void push(int,int,int,int,int,int,int,int)
    269:281:private void putStash(int,int)
    285:297:public int get(int,int)
    301:304:private int getStash(int,int)
    310:320:public int getAndIncrement(int,int,int)
    324:332:private int getAndIncrementStash(int,int,int)
    336:367:public int remove(int,int)
    371:380:int removeStash(int,int)
    394:400:public void clear()
    405:409:public boolean containsValue(int)
    413:422:public boolean containsKey(int)
    426:429:private boolean containsKeyStash(int)
    435:439:public int findKey(int,int)
    445:447:public void ensureCapacity(int)
    450:471:private void resize(int)
    474:475:private int hash2(int)
    479:480:private int hash3(int)
    518:531:public com.badlogic.gdx.utils.IntIntMap$Entries entries()
    537:550:public com.badlogic.gdx.utils.IntIntMap$Values values()
    556:569:public com.badlogic.gdx.utils.IntIntMap$Keys keys()
com.badlogic.gdx.utils.IntIntMap$Entries:
    635:636:public IntIntMap$Entries(com.badlogic.gdx.utils.IntIntMap)
    631:631:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntIntMap$Keys:
    697:698:public IntIntMap$Keys(com.badlogic.gdx.utils.IntIntMap)
    701:701:public boolean hasNext()
    705:710:public int next()
    715:718:public com.badlogic.gdx.utils.IntArray toArray()
    695:695:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntIntMap$MapIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
    591:594:public IntIntMap$MapIterator(com.badlogic.gdx.utils.IntIntMap)
    597:603:public void reset()
com.badlogic.gdx.utils.IntIntMap$Values:
    666:667:public IntIntMap$Values(com.badlogic.gdx.utils.IntIntMap)
    670:670:public boolean hasNext()
    674:683:public int next()
    688:691:public com.badlogic.gdx.utils.IntArray toArray()
    664:664:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.IntMap$Entries entries1
    private com.badlogic.gdx.utils.IntMap$Entries entries2
    private com.badlogic.gdx.utils.IntMap$Keys keys1
    private com.badlogic.gdx.utils.IntMap$Keys keys2
    63:64:public IntMap(int)
    160:162:public void putAll(com.badlogic.gdx.utils.IntMap)
    305:317:public java.lang.Object get(int,java.lang.Object)
    393:403:public void clear()
    410:425:public boolean containsValue(java.lang.Object,boolean)
    453:468:public int findKey(java.lang.Object,boolean,int)
    474:476:public void ensureCapacity(int)
    547:560:public com.badlogic.gdx.utils.IntMap$Entries entries()
    585:598:public com.badlogic.gdx.utils.IntMap$Keys keys()
com.badlogic.gdx.utils.IntMap$Entries:
    666:667:public IntMap$Entries(com.badlogic.gdx.utils.IntMap)
com.badlogic.gdx.utils.IntMap$Keys:
    732:733:public IntMap$Keys(com.badlogic.gdx.utils.IntMap)
    736:741:public int next()
    746:749:public com.badlogic.gdx.utils.IntArray toArray()
com.badlogic.gdx.utils.IntMap$MapIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
com.badlogic.gdx.utils.IntMap$Values:
    723:726:public com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.IntSet:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    int stashSize
    private com.badlogic.gdx.utils.IntSet$IntSetIterator iterator1
    private com.badlogic.gdx.utils.IntSet$IntSetIterator iterator2
    58:59:public IntSet(int)
    82:128:public boolean add(int)
    132:136:public void putAll(com.badlogic.gdx.utils.IntSet)
    140:171:private void addResize(int)
    174:229:private void push(int,int,int,int,int,int,int)
    232:243:private void addStash(int)
    247:275:public boolean remove(int)
    279:287:boolean removeStash(int)
    292:295:void removeStashIndex(int)
    298:304:public void clear()
    307:316:public boolean contains(int)
    320:323:private boolean containsKeyStash(int)
    329:331:public void ensureCapacity(int)
    334:353:private void resize(int)
    356:357:private int hash2(int)
    361:362:private int hash3(int)
    394:407:public com.badlogic.gdx.utils.IntSet$IntSetIterator iterator()
com.badlogic.gdx.utils.IntSet$IntSetIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
    public boolean hasNext
    final com.badlogic.gdx.utils.IntSet set
    int nextIndex
    int currentIndex
    boolean valid
    429:432:public IntSet$IntSetIterator(com.badlogic.gdx.utils.IntSet)
    435:441:public void reset()
    444:452:void findNextIndex()
    455:466:public void remove()
    469:474:public int next()
    479:482:public com.badlogic.gdx.utils.IntArray toArray()
com.badlogic.gdx.utils.Json:
    private static final boolean debug
    private com.badlogic.gdx.utils.JsonWriter writer
    63:65:public Json(com.badlogic.gdx.utils.JsonWriter$OutputType)
    68:69:public void setIgnoreUnknownFields(boolean)
    72:73:public void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType)
    76:78:public void addClassTag(java.lang.String,java.lang.Class)
    81:86:public java.lang.Class getClass(java.lang.String)
    91:93:public java.lang.String getTag(java.lang.Class)
    107:107:public com.badlogic.gdx.utils.Json$Serializer getSerializer(java.lang.Class)
    115:120:public void setElementType(java.lang.Class,java.lang.String,java.lang.Class)
    153:153:public java.lang.String toJson(java.lang.Object)
    157:157:public java.lang.String toJson(java.lang.Object,java.lang.Class)
    163:165:public java.lang.String toJson(java.lang.Object,java.lang.Class,java.lang.Class)
    169:170:public void toJson(java.lang.Object,com.badlogic.gdx.files.FileHandle)
    174:175:public void toJson(java.lang.Object,java.lang.Class,com.badlogic.gdx.files.FileHandle)
    180:192:public void toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle)
    195:196:public void toJson(java.lang.Object,java.io.Writer)
    200:201:public void toJson(java.lang.Object,java.lang.Class,java.io.Writer)
    206:216:public void toJson(java.lang.Object,java.lang.Class,java.lang.Class,java.io.Writer)
    220:223:public void setWriter(java.io.Writer)
    226:226:public com.badlogic.gdx.utils.JsonWriter getWriter()
    230:262:public void writeFields(java.lang.Object)
    265:297:private java.lang.Object[] getDefaultValues(java.lang.Class)
    301:302:public void writeField(java.lang.Object,java.lang.String)
    306:307:public void writeField(java.lang.Object,java.lang.String,java.lang.Class)
    310:311:public void writeField(java.lang.Object,java.lang.String,java.lang.String)
    315:336:public void writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)
    341:349:public void writeValue(java.lang.String,java.lang.Object)
    355:360:public void writeValue(java.lang.String,java.lang.Object,java.lang.Class)
    367:372:public void writeValue(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Class)
    376:380:public void writeValue(java.lang.Object)
    385:386:public void writeValue(java.lang.Object,java.lang.Class)
    393:519:public void writeValue(java.lang.Object,java.lang.Class,java.lang.Class)
    523:528:public void writeObjectStart(java.lang.String)
    533:538:public void writeObjectStart(java.lang.String,java.lang.Class,java.lang.Class)
    542:546:public void writeObjectStart()
    551:556:public void writeObjectStart(java.lang.Class,java.lang.Class)
    560:564:public void writeObjectEnd()
    568:573:public void writeArrayStart(java.lang.String)
    577:581:public void writeArrayStart()
    585:589:public void writeArrayEnd()
    592:601:public void writeType(java.lang.Class)
    606:606:public java.lang.Object fromJson(java.lang.Class,java.io.Reader)
    613:613:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.Reader)
    619:619:public java.lang.Object fromJson(java.lang.Class,java.io.InputStream)
    626:626:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.InputStream)
    644:646:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle)
    653:653:public java.lang.Object fromJson(java.lang.Class,char[],int,int)
    660:660:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,char[],int,int)
    666:666:public java.lang.Object fromJson(java.lang.Class,java.lang.String)
    672:672:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.lang.String)
    676:677:public void readField(java.lang.Object,java.lang.String,com.badlogic.gdx.utils.JsonValue)
    680:681:public void readField(java.lang.Object,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue)
    684:685:public void readField(java.lang.Object,java.lang.String,java.lang.String,com.badlogic.gdx.utils.JsonValue)
    689:710:public void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue)
    760:760:public java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)
    767:769:public java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue)
    776:776:public java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue)
    919:920:private java.lang.String convertToString(java.lang.Object)
    948:948:public java.lang.String prettyPrint(java.lang.Object)
    952:952:public java.lang.String prettyPrint(java.lang.String)
    956:956:public java.lang.String prettyPrint(java.lang.Object,int)
    960:960:public java.lang.String prettyPrint(java.lang.String,int)
com.badlogic.gdx.utils.Json$ReadOnlySerializer:
    981:981:public void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class)
    public abstract java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class)
com.badlogic.gdx.utils.Json$Serializable:
    public abstract void write(com.badlogic.gdx.utils.Json)
com.badlogic.gdx.utils.Json$Serializer:
    public abstract void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class)
com.badlogic.gdx.utils.JsonReader:
    static final int json_start
    static final int json_first_final
    static final int json_error
    static final int json_en_object
    static final int json_en_array
    static final int json_en_main
    37:38:public com.badlogic.gdx.utils.JsonValue parse(java.lang.String)
com.badlogic.gdx.utils.JsonValue:
    73:79:public com.badlogic.gdx.utils.JsonValue require(int)
    95:105:public com.badlogic.gdx.utils.JsonValue remove(int)
    231:232:public com.badlogic.gdx.utils.JsonValue getChild(java.lang.String)
    250:251:public double getDouble(java.lang.String,double)
    256:257:public long getLong(java.lang.String,long)
    262:263:public int getInt(java.lang.String,int)
    268:269:public boolean getBoolean(java.lang.String,boolean)
    291:293:public double getDouble(java.lang.String)
    299:301:public long getLong(java.lang.String)
    307:309:public int getInt(java.lang.String)
    315:317:public boolean getBoolean(java.lang.String)
    323:325:public java.lang.String getString(int)
    339:341:public double getDouble(int)
    347:349:public long getLong(int)
    363:365:public boolean getBoolean(int)
    369:369:public com.badlogic.gdx.utils.JsonValue$ValueType type()
    373:375:public void setType(com.badlogic.gdx.utils.JsonValue$ValueType)
    446:447:public void setNext(com.badlogic.gdx.utils.JsonValue)
    452:452:public com.badlogic.gdx.utils.JsonValue prev()
    456:457:public void setPrev(com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.JsonValue$ValueType:
    576:576:public static com.badlogic.gdx.utils.JsonValue$ValueType valueOf(java.lang.String)
com.badlogic.gdx.utils.JsonWriter:
    private com.badlogic.gdx.utils.JsonWriter$OutputType outputType
    32:34:public JsonWriter(java.io.Writer)
    37:37:public java.io.Writer getWriter()
    41:42:public void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType)
    45:53:public com.badlogic.gdx.utils.JsonWriter name(java.lang.String)
    57:69:public com.badlogic.gdx.utils.JsonWriter object()
    73:85:public com.badlogic.gdx.utils.JsonWriter array()
    89:106:public com.badlogic.gdx.utils.JsonWriter value(java.lang.Object)
    110:110:public com.badlogic.gdx.utils.JsonWriter object(java.lang.String)
    114:114:public com.badlogic.gdx.utils.JsonWriter array(java.lang.String)
    118:118:public com.badlogic.gdx.utils.JsonWriter set(java.lang.String,java.lang.Object)
com.badlogic.gdx.utils.JsonWriter$JsonObject:
    boolean needsComma
    146:149:JsonWriter$JsonObject(com.badlogic.gdx.utils.JsonWriter,boolean)
com.badlogic.gdx.utils.JsonWriter$OutputType:
    156:156:public static com.badlogic.gdx.utils.JsonWriter$OutputType valueOf(java.lang.String)
com.badlogic.gdx.utils.LittleEndianInputStream:
    32:34:public LittleEndianInputStream(java.io.InputStream)
com.badlogic.gdx.utils.Logger:
    public static final int NONE
    public static final int ERROR
    public static final int INFO
    public static final int DEBUG
    36:37:public Logger(java.lang.String)
    49:50:public void debug(java.lang.String,java.lang.Exception)
    57:58:public void info(java.lang.String,java.lang.Exception)
    61:62:public void error(java.lang.String)
    72:73:public void setLevel(int)
com.badlogic.gdx.utils.LongArray:
    38:39:public LongArray(int)
    52:57:public LongArray(com.badlogic.gdx.utils.LongArray)
    62:63:public LongArray(long[])
    70:73:public LongArray(boolean,long[],int,int)
    76:79:public void add(long)
    82:83:public void addAll(com.badlogic.gdx.utils.LongArray)
    86:89:public void addAll(com.badlogic.gdx.utils.LongArray,int,int)
    92:93:public void addAll(long[])
    96:101:public void addAll(long[],int,int)
    104:105:public long get(int)
    109:111:public void set(int,long)
    114:123:public void insert(int,long)
    126:132:public void swap(int,int)
    135:139:public boolean contains(long)
    143:146:public int indexOf(long)
    150:153:public int lastIndexOf(char)
    157:164:public boolean removeValue(long)
    169:177:public long removeIndex(int)
    183:196:public boolean removeAll(com.badlogic.gdx.utils.LongArray)
    201:201:public long pop()
    206:206:public long peek()
    211:212:public long first()
    216:217:public void clear()
    222:223:public void shrink()
    229:231:public long[] ensureCapacity(int)
    235:239:protected long[] resize(int)
    243:244:public void sort()
    247:253:public void reverse()
    256:262:public void shuffle()
    267:268:public void truncate(int)
    272:273:public long random()
    277:279:public long[] toArray()
    308:316:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.LongMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.LongMap$Entries entries1
    private com.badlogic.gdx.utils.LongMap$Entries entries2
    private com.badlogic.gdx.utils.LongMap$Values values1
    private com.badlogic.gdx.utils.LongMap$Values values2
    private com.badlogic.gdx.utils.LongMap$Keys keys1
    private com.badlogic.gdx.utils.LongMap$Keys keys2
    63:64:public LongMap(int)
    87:156:public java.lang.Object put(long,java.lang.Object)
    160:162:public void putAll(com.badlogic.gdx.utils.LongMap)
    166:201:private void putResize(long,java.lang.Object)
    204:270:private void push(long,java.lang.Object,int,long,int,long,int,long)
    273:285:private void putStash(long,java.lang.Object)
    288:300:public java.lang.Object get(long)
    304:316:public java.lang.Object get(long,java.lang.Object)
    320:323:private java.lang.Object getStash(long,java.lang.Object)
    327:363:public java.lang.Object remove(long)
    367:376:java.lang.Object removeStash(long)
    392:402:public void clear()
    407:422:public boolean containsValue(java.lang.Object,boolean)
    426:435:public boolean containsKey(long)
    439:442:private boolean containsKeyStash(long)
    450:465:public long findKey(java.lang.Object,boolean,long)
    471:473:public void ensureCapacity(int)
    476:497:private void resize(int)
    500:501:private int hash2(long)
    505:506:private int hash3(long)
    539:552:public com.badlogic.gdx.utils.LongMap$Entries entries()
    558:571:public com.badlogic.gdx.utils.LongMap$Values values()
    577:590:public com.badlogic.gdx.utils.LongMap$Keys keys()
com.badlogic.gdx.utils.LongMap$Entries:
    658:659:public LongMap$Entries(com.badlogic.gdx.utils.LongMap)
    654:654:public bridge synthetic void reset()
com.badlogic.gdx.utils.LongMap$Keys:
    724:725:public LongMap$Keys(com.badlogic.gdx.utils.LongMap)
    728:733:public long next()
    738:741:public com.badlogic.gdx.utils.LongArray toArray()
    722:722:public bridge synthetic void reset()
com.badlogic.gdx.utils.LongMap$MapIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
    612:615:public LongMap$MapIterator(com.badlogic.gdx.utils.LongMap)
    618:624:public void reset()
com.badlogic.gdx.utils.LongMap$Values:
    689:690:public LongMap$Values(com.badlogic.gdx.utils.LongMap)
    715:718:public com.badlogic.gdx.utils.Array toArray()
    687:687:public bridge synthetic void reset()
com.badlogic.gdx.utils.NumberUtils:
    29:29:public static int floatToRawIntBits(float)
    33:33:public static int floatToIntColor(float)
    43:43:public static float intBitsToFloat(int)
    47:47:public static long doubleToLongBits(double)
    51:51:public static double longBitsToDouble(long)
com.badlogic.gdx.utils.ObjectFloatMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectFloatMap$Entries entries1
    private com.badlogic.gdx.utils.ObjectFloatMap$Entries entries2
    private com.badlogic.gdx.utils.ObjectFloatMap$Values values1
    private com.badlogic.gdx.utils.ObjectFloatMap$Values values2
    private com.badlogic.gdx.utils.ObjectFloatMap$Keys keys1
    private com.badlogic.gdx.utils.ObjectFloatMap$Keys keys2
    60:61:public ObjectFloatMap(int)
    84:141:public void put(java.lang.Object,float)
    144:146:public void putAll(com.badlogic.gdx.utils.ObjectFloatMap)
    151:180:private void putResize(java.lang.Object,float)
    183:250:private void push(java.lang.Object,float,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)
    253:265:private void putStash(java.lang.Object,float)
    269:278:public float get(java.lang.Object,float)
    282:285:private float getStash(java.lang.Object,float)
    291:302:public float getAndIncrement(java.lang.Object,float,float)
    306:314:private float getAndIncrementStash(java.lang.Object,float,float)
    318:343:public float remove(java.lang.Object,float)
    347:356:float removeStash(java.lang.Object,float)
    370:375:public void clear()
    380:383:public boolean containsValue(float)
    387:396:public boolean containsKey(java.lang.Object)
    400:403:private boolean containsKeyStash(java.lang.Object)
    409:412:public java.lang.Object findKey(float)
    418:420:public void ensureCapacity(int)
    423:444:private void resize(int)
    447:448:private int hash2(int)
    452:453:private int hash3(int)
    486:499:public com.badlogic.gdx.utils.ObjectFloatMap$Entries entries()
    505:518:public com.badlogic.gdx.utils.ObjectFloatMap$Values values()
    524:537:public com.badlogic.gdx.utils.ObjectFloatMap$Keys keys()
com.badlogic.gdx.utils.ObjectFloatMap$Entries:
    594:595:public ObjectFloatMap$Entries(com.badlogic.gdx.utils.ObjectFloatMap)
    590:590:public bridge synthetic void reset()
com.badlogic.gdx.utils.ObjectFloatMap$Keys:
    647:648:public ObjectFloatMap$Keys(com.badlogic.gdx.utils.ObjectFloatMap)
    669:672:public com.badlogic.gdx.utils.Array toArray()
    645:645:public bridge synthetic void reset()
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator:
    556:559:public ObjectFloatMap$MapIterator(com.badlogic.gdx.utils.ObjectFloatMap)
    562:565:public void reset()
com.badlogic.gdx.utils.ObjectFloatMap$Values:
    620:621:public ObjectFloatMap$Values(com.badlogic.gdx.utils.ObjectFloatMap)
    624:624:public boolean hasNext()
    628:633:public float next()
    638:641:public com.badlogic.gdx.utils.FloatArray toArray()
    618:618:public bridge synthetic void reset()
com.badlogic.gdx.utils.ObjectIntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectIntMap$Entries entries1
    private com.badlogic.gdx.utils.ObjectIntMap$Entries entries2
    private com.badlogic.gdx.utils.ObjectIntMap$Values values1
    private com.badlogic.gdx.utils.ObjectIntMap$Values values2
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys1
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys2
    60:61:public ObjectIntMap(int)
    144:146:public void putAll(com.badlogic.gdx.utils.ObjectIntMap)
    291:302:public int getAndIncrement(java.lang.Object,int,int)
    306:314:private int getAndIncrementStash(java.lang.Object,int,int)
    318:343:public int remove(java.lang.Object,int)
    347:356:int removeStash(java.lang.Object,int)
    380:383:public boolean containsValue(int)
    387:396:public boolean containsKey(java.lang.Object)
    400:403:private boolean containsKeyStash(java.lang.Object)
    409:412:public java.lang.Object findKey(int)
    418:420:public void ensureCapacity(int)
    486:499:public com.badlogic.gdx.utils.ObjectIntMap$Entries entries()
    505:518:public com.badlogic.gdx.utils.ObjectIntMap$Values values()
    524:537:public com.badlogic.gdx.utils.ObjectIntMap$Keys keys()
com.badlogic.gdx.utils.ObjectIntMap$Entries:
    594:595:public ObjectIntMap$Entries(com.badlogic.gdx.utils.ObjectIntMap)
    590:590:public bridge synthetic void reset()
com.badlogic.gdx.utils.ObjectIntMap$Keys:
    647:648:public ObjectIntMap$Keys(com.badlogic.gdx.utils.ObjectIntMap)
    669:672:public com.badlogic.gdx.utils.Array toArray()
    645:645:public bridge synthetic void reset()
com.badlogic.gdx.utils.ObjectIntMap$MapIterator:
    556:559:public ObjectIntMap$MapIterator(com.badlogic.gdx.utils.ObjectIntMap)
    562:565:public void reset()
com.badlogic.gdx.utils.ObjectIntMap$Values:
    620:621:public ObjectIntMap$Values(com.badlogic.gdx.utils.ObjectIntMap)
    624:624:public boolean hasNext()
    628:633:public int next()
    638:641:public com.badlogic.gdx.utils.IntArray toArray()
    618:618:public bridge synthetic void reset()
com.badlogic.gdx.utils.ObjectMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    154:157:public void putAll(com.badlogic.gdx.utils.ObjectMap)
    300:309:public java.lang.Object get(java.lang.Object,java.lang.Object)
    313:316:private java.lang.Object getStash(java.lang.Object,java.lang.Object)
    392:404:public boolean containsValue(java.lang.Object,boolean)
    432:444:public java.lang.Object findKey(java.lang.Object,boolean)
    450:452:public void ensureCapacity(int)
com.badlogic.gdx.utils.ObjectMap$Values:
    675:678:public com.badlogic.gdx.utils.Array toArray()
    683:685:public void toArray(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.ObjectSet:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    57:58:public ObjectSet(int)
    81:122:public boolean add(java.lang.Object)
    126:129:public void addAll(com.badlogic.gdx.utils.Array)
    132:135:public void addAll(com.badlogic.gdx.utils.ObjectSet)
    140:166:private void addResize(java.lang.Object)
    169:224:private void push(java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)
    227:238:private void addStash(java.lang.Object)
    242:264:public boolean remove(java.lang.Object)
    268:276:boolean removeStash(java.lang.Object)
    287:292:public void clear()
    295:304:public boolean contains(java.lang.Object)
    308:311:private boolean containsKeyStash(java.lang.Object)
    317:319:public void ensureCapacity(int)
    322:341:private void resize(int)
    344:345:private int hash2(int)
    349:350:private int hash3(int)
com.badlogic.gdx.utils.ObjectSet$SetIterator:
    453:456:public com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.OrderedMap:
    32:34:public OrderedMap(int)
    37:39:public OrderedMap(int,float)
    57:57:public com.badlogic.gdx.utils.Array orderedKeys()
com.badlogic.gdx.utils.PauseableThread:
    31:33:public PauseableThread(java.lang.Runnable)
    54:55:public void onPause()
    59:63:public void onResume()
    67:67:public boolean isPaused()
    72:74:public void stopThread()
com.badlogic.gdx.utils.PerformanceCounter:
    private static final float nano2seconds
    private long startTime
    private long lastTick
    public float current
    public boolean valid
    51:52:public PerformanceCounter(java.lang.String)
    54:58:public PerformanceCounter(java.lang.String,int)
    65:69:public void tick()
    76:88:public void tick(float)
    95:97:public void start()
    104:109:public void stop()
    115:121:public void reset()
com.badlogic.gdx.utils.PerformanceCounters:
    private static final float nano2seconds
    29:31:public com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String,int)
    35:37:public com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String)
    41:45:public void tick()
    48:50:public void tick(float)
    53:59:public com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder)
com.badlogic.gdx.utils.Pool:
    79:80:public void clear()
    84:84:public int getFree()
com.badlogic.gdx.utils.PooledLinkedList:
    private com.badlogic.gdx.utils.PooledLinkedList$Item head
    private com.badlogic.gdx.utils.PooledLinkedList$Item tail
    private com.badlogic.gdx.utils.PooledLinkedList$Item iter
    private com.badlogic.gdx.utils.PooledLinkedList$Item curr
    private int size
    private final com.badlogic.gdx.utils.Pool pool
    36:42:public PooledLinkedList(int)
    45:61:public void add(java.lang.Object)
    65:66:public void iter()
    72:77:public java.lang.Object next()
    82:112:public void remove()
    145:150:public void clear()
com.badlogic.gdx.utils.PooledLinkedList$1:
    final synthetic com.badlogic.gdx.utils.PooledLinkedList this$0
    37:37:PooledLinkedList$1(com.badlogic.gdx.utils.PooledLinkedList,int,int)
com.badlogic.gdx.utils.PooledLinkedList$Item:
    public java.lang.Object payload
    public com.badlogic.gdx.utils.PooledLinkedList$Item next
    public com.badlogic.gdx.utils.PooledLinkedList$Item prev
com.badlogic.gdx.utils.Pools:
    50:57:public static void freeAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.Predicate$PredicateIterable:
    94:96:public Predicate$PredicateIterable(java.lang.Iterable,com.badlogic.gdx.utils.Predicate)
    99:101:public void set(java.lang.Iterable,com.badlogic.gdx.utils.Predicate)
com.badlogic.gdx.utils.Predicate$PredicateIterator:
    37:38:public Predicate$PredicateIterator(java.lang.Iterable,com.badlogic.gdx.utils.Predicate)
    45:46:public void set(java.lang.Iterable,com.badlogic.gdx.utils.Predicate)
com.badlogic.gdx.utils.ReflectionPool:
    27:29:public ReflectionPool(java.lang.Class)
    37:39:public ReflectionPool(java.lang.Class,int)
com.badlogic.gdx.utils.Scaling:
    23:23:public static com.badlogic.gdx.utils.Scaling valueOf(java.lang.String)
    52:102:public com.badlogic.gdx.math.Vector2 apply(float,float,float,float)
com.badlogic.gdx.utils.ScreenUtils:
    40:42:public static com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture()
    56:68:public static com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture(int,int,int,int)
    78:80:public static byte[] getFrameBufferPixels(boolean)
    92:107:public static byte[] getFrameBufferPixels(int,int,int,int,boolean)
com.badlogic.gdx.utils.SerializationException:
    42:42:public boolean causedBy(java.lang.Class)
    46:49:private boolean causedBy(java.lang.Throwable,java.lang.Class)
com.badlogic.gdx.utils.SharedLibraryLoader:
    66:68:public SharedLibraryLoader(java.lang.String)
com.badlogic.gdx.utils.ShortArray:
    38:39:public ShortArray(int)
    52:57:public ShortArray(com.badlogic.gdx.utils.ShortArray)
    62:63:public ShortArray(short[])
    70:73:public ShortArray(boolean,short[],int,int)
    76:79:public void add(short)
    82:83:public void addAll(com.badlogic.gdx.utils.ShortArray)
    86:89:public void addAll(com.badlogic.gdx.utils.ShortArray,int,int)
    92:93:public void addAll(short[])
    96:101:public void addAll(short[],int,int)
    104:105:public short get(int)
    109:111:public void set(int,short)
    114:123:public void insert(int,short)
    126:132:public void swap(int,int)
    135:139:public boolean contains(short)
    143:146:public int indexOf(short)
    150:153:public int lastIndexOf(char)
    157:164:public boolean removeValue(short)
    169:177:public short removeIndex(int)
    183:196:public boolean removeAll(com.badlogic.gdx.utils.ShortArray)
    201:201:public short pop()
    206:206:public short peek()
    211:212:public short first()
    216:217:public void clear()
    222:223:public void shrink()
    229:231:public short[] ensureCapacity(int)
    235:239:protected short[] resize(int)
    243:244:public void sort()
    247:253:public void reverse()
    256:262:public void shuffle()
    267:268:public void truncate(int)
    272:273:public short random()
    277:279:public short[] toArray()
    308:316:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.SnapshotArray:
    48:49:public SnapshotArray(com.badlogic.gdx.utils.Array)
    56:57:public SnapshotArray(boolean,int)
    60:61:public SnapshotArray(boolean,java.lang.Object[],int,int)
    64:65:public SnapshotArray(java.lang.Class)
    68:69:public SnapshotArray(int)
    72:73:public SnapshotArray(java.lang.Object[])
    118:120:public void swap(int,int)
    143:145:public void sort()
    153:155:public void reverse()
    158:160:public void shuffle()
    163:165:public void truncate(int)
com.badlogic.gdx.utils.Sort:
    private com.badlogic.gdx.utils.ComparableTimSort comparableTimSort
    31:33:public void sort(com.badlogic.gdx.utils.Array)
    36:38:public void sort(java.lang.Object[])
    41:43:public void sort(java.lang.Object[],int,int)
    46:48:public void sort(com.badlogic.gdx.utils.Array,java.util.Comparator)
    51:53:public void sort(java.lang.Object[],java.util.Comparator)
com.badlogic.gdx.utils.SortedIntList:
    39:68:public java.lang.Object insert(int,java.lang.Object)
    76:86:public java.lang.Object get(int)
    99:99:public int size()
com.badlogic.gdx.utils.SortedIntList$Node:
    public java.lang.Object value
    public int index
com.badlogic.gdx.utils.SortedIntList$NodePool:
    173:178:public com.badlogic.gdx.utils.SortedIntList$Node obtain(com.badlogic.gdx.utils.SortedIntList$Node,com.badlogic.gdx.utils.SortedIntList$Node,java.lang.Object,int)
com.badlogic.gdx.utils.StringBuilder:
    static final int INITIAL_CAPACITY
    39:39:final char[] getValue()
    67:68:public StringBuilder(java.lang.CharSequence)
    70:74:public StringBuilder(com.badlogic.gdx.utils.StringBuilder)
    81:85:public StringBuilder(java.lang.String)
    169:169:public int capacity()
    185:199:final void delete0(int,int)
    203:211:final void deleteCharAt0(int)
    220:224:public void ensureCapacity(int)
    236:240:public void getChars(int,int,char[],int)
    243:251:final void insert0(int,char[])
    254:266:final void insert0(int,char[],int,int)
    270:277:final void insert0(int,char)
    280:293:final void insert0(int,java.lang.String)
    296:303:final void insert0(int,java.lang.CharSequence,int,int)
    313:324:private void move(int,int)
    327:353:final void replace0(int,int,java.lang.String)
    357:411:final void reverse0()
    419:423:public void setCharAt(int,char)
    451:459:public java.lang.String substring(int)
    510:510:public int indexOf(java.lang.String)
    522:553:public int indexOf(java.lang.String,int)
    565:565:public int lastIndexOf(java.lang.String)
    578:610:public int lastIndexOf(java.lang.String,int)
    618:623:public void trimToSize()
    634:637:public int codePointAt(int)
    649:652:public int codePointBefore(int)
    666:669:public int codePointCount(int,int)
    683:683:public int offsetByCodePoints(int,int)
    861:865:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder)
    883:887:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int)
    897:898:public com.badlogic.gdx.utils.StringBuilder appendCodePoint(int)
    909:910:public com.badlogic.gdx.utils.StringBuilder delete(int,int)
    920:921:public com.badlogic.gdx.utils.StringBuilder deleteCharAt(int)
    933:934:public com.badlogic.gdx.utils.StringBuilder insert(int,boolean)
    946:947:public com.badlogic.gdx.utils.StringBuilder insert(int,char)
    959:960:public com.badlogic.gdx.utils.StringBuilder insert(int,int)
    972:973:public com.badlogic.gdx.utils.StringBuilder insert(int,long)
    985:986:public com.badlogic.gdx.utils.StringBuilder insert(int,float)
    998:999:public com.badlogic.gdx.utils.StringBuilder insert(int,double)
    1011:1012:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object)
    1023:1024:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String)
    1036:1037:public com.badlogic.gdx.utils.StringBuilder insert(int,char[])
    1052:1053:public com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int)
    1066:1067:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence)
    1083:1084:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int)
    1097:1098:public com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String)
    1105:1106:public com.badlogic.gdx.utils.StringBuilder reverse()
com.badlogic.gdx.utils.TimSort:
    private static final int MIN_MERGE
    private static final int MIN_GALLOP
    private static final int INITIAL_TMP_STORAGE_LENGTH
    private static final boolean DEBUG
    152:171:private TimSort(java.lang.Object[],java.util.Comparator)
    179:180:static void sort(java.lang.Object[],java.util.Comparator)
    183:227:static void sort(java.lang.Object[],int,int,java.util.Comparator)
com.badlogic.gdx.utils.Timer:
    private static final int CANCELLED
    private static final int FOREVER
    65:66:public void postTask(com.badlogic.gdx.utils.Timer$Task)
    92:95:public void stop()
    108:113:public void clear()
    153:154:public static void post(com.badlogic.gdx.utils.Timer$Task)
    171:172:public static void schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int)
com.badlogic.gdx.utils.Timer$Task:
    public abstract void run()
com.badlogic.gdx.utils.XmlReader:
    static final int xml_start
    static final int xml_first_final
    static final int xml_error
    static final int xml_en_elementBody
    static final int xml_en_main
    43:44:public com.badlogic.gdx.utils.XmlReader$Element parse(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element:
    450:450:public com.badlogic.gdx.utils.ObjectMap getAttributes()
    498:499:public void removeChild(int)
    506:507:public void remove()
    569:576:public com.badlogic.gdx.utils.XmlReader$Element getChildByNameRecursive(java.lang.String)
    594:596:public com.badlogic.gdx.utils.Array getChildrenByNameRecursively(java.lang.String)
    600:606:private void getChildrenByNameRecursively(java.lang.String,com.badlogic.gdx.utils.Array)
    610:610:public float getFloatAttribute(java.lang.String)
    632:632:public boolean getBooleanAttribute(java.lang.String)
    636:638:public boolean getBooleanAttribute(java.lang.String,boolean)
    644:646:public java.lang.String get(java.lang.String)
    674:676:public int getInt(java.lang.String,int)
    682:684:public float getFloat(java.lang.String)
    690:692:public float getFloat(java.lang.String,float)
    698:700:public boolean getBoolean(java.lang.String)
    706:708:public boolean getBoolean(java.lang.String,boolean)
com.badlogic.gdx.utils.XmlWriter:
    50:52:public XmlWriter(java.io.Writer)
    62:67:public com.badlogic.gdx.utils.XmlWriter element(java.lang.String)
    71:71:public com.badlogic.gdx.utils.XmlWriter element(java.lang.String,java.lang.Object)
    84:90:public com.badlogic.gdx.utils.XmlWriter attribute(java.lang.String,java.lang.Object)
    94:103:public com.badlogic.gdx.utils.XmlWriter text(java.lang.Object)
com.badlogic.gdx.utils.compression.CRC:
    23:24:public void Init()
    27:29:public void Update(byte[],int,int)
    32:35:public void Update(byte[])
    38:39:public void UpdateByte(int)
    42:42:public int GetDigest()
com.badlogic.gdx.utils.compression.ICodeProgress:
    public abstract void SetProgress(long,long)
com.badlogic.gdx.utils.compression.Lzma:
    62:85:public static void compress(java.io.InputStream,java.io.OutputStream)
    93:109:public static void decompress(java.io.InputStream,java.io.OutputStream)
com.badlogic.gdx.utils.compression.Lzma$CommandLine:
    public static final int kEncode
    public static final int kDecode
    public static final int kBenchmak
    public java.lang.String InFile
    public java.lang.String OutFile
com.badlogic.gdx.utils.compression.lz.BinTree:
    int _cyclicBufferPos
    int _matchMaxLen
    int[] _son
    int[] _hash
    int _hashMask
    static final int kHash2Size
    static final int kHash3Size
    static final int kBT2HashSize
    static final int kStartMaxLen
    static final int kHash3Offset
    static final int kEmptyHashValue
    static final int kMaxValForNormalize
    34:44:public void SetType(int)
    47:52:public void Init()
    55:58:public void MovePos()
    61:89:public boolean Create(int,int,int,int)
    94:197:public int GetMatches(int[])
    203:274:public void Skip(int)
    277:285:void NormalizeLinks(int[],int,int)
    288:292:void Normalize()
    295:296:public void SetCutValue(int)
com.badlogic.gdx.utils.compression.lz.InWindow:
    public byte[] _bufferBase
    java.io.InputStream _stream
    int _posLimit
    boolean _streamEndWasReached
    int _pointerToLastSafePosition
    public int _bufferOffset
    public int _blockSize
    public int _pos
    int _keepSizeBefore
    int _keepSizeAfter
    public int _streamPos
    24:34:public void MoveBlock()
    37:52:public void ReadBlock()
    56:57:void Free()
    60:69:public void Create(int,int,int)
    72:73:public void SetStream(java.io.InputStream)
    76:77:public void ReleaseStream()
    80:85:public void Init()
    88:94:public void MovePos()
    97:97:public byte GetIndexByte(int)
    102:110:public int GetMatchLen(int,int,int)
    114:114:public int GetNumAvailableBytes()
    118:122:public void ReduceOffsets(int)
com.badlogic.gdx.utils.compression.lz.OutWindow:
    byte[] _buffer
    int _pos
    int _streamPos
    java.io.OutputStream _stream
    15:19:public void Create(int)
    22:24:public void SetStream(java.io.OutputStream)
    27:29:public void ReleaseStream()
    32:36:public void Init(boolean)
    39:44:public void Flush()
    47:54:public void CopyBlock(int,int)
    57:59:public void PutByte(byte)
    62:64:public byte GetByte(int)
com.badlogic.gdx.utils.compression.lzma.Base:
    public static final int kNumRepDistances
    public static final int kNumStates
    public static final int kNumPosSlotBits
    public static final int kDicLogSizeMin
    public static final int kNumLenToPosStatesBits
    public static final int kNumLenToPosStates
    public static final int kMatchMinLen
    public static final int kNumAlignBits
    public static final int kAlignTableSize
    public static final int kAlignMask
    public static final int kStartPosModelIndex
    public static final int kEndPosModelIndex
    public static final int kNumPosModels
    public static final int kNumFullDistances
    public static final int kNumLitPosStatesBitsEncodingMax
    public static final int kNumLitContextBitsMax
    public static final int kNumPosStatesBitsMax
    public static final int kNumPosStatesMax
    public static final int kNumPosStatesBitsEncodingMax
    public static final int kNumPosStatesEncodingMax
    public static final int kNumLowLenBits
    public static final int kNumMidLenBits
    public static final int kNumHighLenBits
    public static final int kNumLowLenSymbols
    public static final int kNumMidLenSymbols
    public static final int kNumLenSymbols
    public static final int kMatchMaxLen
    14:16:public static final int StateUpdateChar(int)
    20:20:public static final int StateUpdateMatch(int)
    24:24:public static final int StateUpdateRep(int)
    28:28:public static final int StateUpdateShortRep(int)
    32:32:public static final boolean StateIsCharState(int)
    46:48:public static final int GetLenToPosState(int)
com.badlogic.gdx.utils.compression.lzma.Decoder:
    int m_PosStateMask
    151:157:boolean SetDictionarySize(int)
    161:167:boolean SetLcLpPb(int,int,int)
    171:189:void Init()
    192:276:public boolean Code(java.io.InputStream,java.io.OutputStream,long)
    280:290:public boolean SetDecoderProperties(byte[])
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder:
    33:37:public void Create(int)
    40:46:public void Init()
    49:55:public int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder,int)
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder:
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2[] m_Coders
    int m_NumPrevBits
    int m_NumPosBits
    int m_PosMask
    99:107:public void Create(int,int)
    110:113:public void Init()
    116:116:com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 GetDecoder(int,byte)
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2:
    short[] m_Decoders
    final synthetic com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder this$1
    60:61:Decoder$LiteralDecoder$Decoder2(com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder)
    64:65:public void Init()
    68:72:public byte DecodeNormal(com.badlogic.gdx.utils.compression.rangecoder.Decoder)
    77:89:public byte DecodeWithMatchByte(com.badlogic.gdx.utils.compression.rangecoder.Decoder,byte)
com.badlogic.gdx.utils.compression.lzma.Encoder:
    public static final int EMatchFinderTypeBT2
    public static final int EMatchFinderTypeBT4
    static final int kIfinityPrice
    byte _previousByte
    static final int kDefaultDictionaryLogSize
    static final int kNumFastBytesDefault
    public static final int kNumLenSpecSymbols
    static final int kNumOpts
    int _longestMatchLength
    int _numDistancePairs
    int _additionalOffset
    int _optimumEndIndex
    int _optimumCurrentIndex
    boolean _longestMatchWasFound
    int _alignPriceCount
    long nowPos64
    boolean _finished
    java.io.InputStream _inStream
    int backRes
    public static final int kPropSize
    int _matchPriceCount
    45:47:static int GetPosSlot(int)
    51:53:static int GetPosSlot2(int)
    61:65:void BaseInit()
    345:358:void Create()
    368:369:void SetWriteEndMarkerMode(boolean)
    372:396:void Init()
    399:408:int ReadMatchDistances()
    412:416:void MovePos(int)
    419:419:int GetRepLen1Price(int,int)
    426:439:int GetPureRepPrice(int,int,int)
    443:444:int GetRepPrice(int,int,int,int)
    449:454:int GetPosLenPrice(int,int,int)
    458:483:int Backward(int)
    491:913:int GetOptimum(int)
    917:918:boolean ChangePair(int,int)
    922:936:void WriteEndMarker(int)
    939:943:void Flush(int)
    946:1078:public void CodeOneBlock(long[],long[],boolean[])
    1082:1086:void ReleaseMFStream()
    1089:1090:void SetOutStream(java.io.OutputStream)
    1093:1094:void ReleaseOutStream()
    1097:1099:void ReleaseStreams()
    1102:1120:void SetStreams(java.io.InputStream,java.io.OutputStream,long,long)
    1128:1140:public void Code(java.io.InputStream,java.io.OutputStream,long,long,com.badlogic.gdx.utils.compression.ICodeProgress)
    1148:1152:public void WriteCoderProperties(java.io.OutputStream)
    1158:1183:void FillDistancesPrices()
    1186:1189:void FillAlignPrices()
    1195:1195:public boolean SetAlgorithm(int)
    1199:1206:public boolean SetDictionarySize(int)
    1210:1212:public boolean SetNumFastBytes(int)
    1216:1223:public boolean SetMatchFinder(int)
    1227:1233:public boolean SetLcLpPb(int,int,int)
    1237:1238:public void SetEndMarkerMode(boolean)
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder:
    171:178:public void Init(int)
    182:196:public void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int)
    199:214:public void SetPrices(int,int,int[],int)
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder:
    int _tableSize
    225:226:public void SetTableSize(int)
    229:229:public int GetPrice(int,int)
    233:235:void UpdateTable(int)
    238:240:public void UpdateTables(int)
    244:246:public void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int)
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder:
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2[] m_Coders
    int m_NumPrevBits
    int m_NumPosBits
    int m_PosMask
    136:144:public void Create(int,int)
    147:150:public void Init()
    153:153:public com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 GetSubCoder(int,byte)
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2:
    short[] m_Encoders
    final synthetic com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder this$1
    71:72:Encoder$LiteralEncoder$Encoder2(com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder)
    75:76:public void Init()
    79:85:public void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte)
    89:102:public void EncodeMatched(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte,byte)
    105:126:public int GetPrice(boolean,byte,byte)
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal:
    public int State
    public boolean Prev1IsChar
    public boolean Prev2
    public int PosPrev2
    public int BackPrev2
    public int Price
    public int PosPrev
    public int BackPrev
    public int Backs0
    public int Backs1
    public int Backs2
    public int Backs3
    270:272:public void MakeAsChar()
    275:278:public void MakeAsShortRep()
    281:281:public boolean IsShortRep()
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder:
    29:30:public void Init()
    33:36:public int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder)
    40:48:public int ReverseDecode(com.badlogic.gdx.utils.compression.rangecoder.Decoder)
    53:61:public static int ReverseDecode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Decoder,int)
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder:
    31:32:public void Init()
    35:42:public void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int)
    45:52:public void ReverseEncode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int)
    55:63:public int GetPrice(int)
    67:75:public int ReverseGetPrice(int)
    79:87:public static int ReverseGetPrice(short[],int,int,int)
    92:99:public static void ReverseEncode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int)
com.badlogic.gdx.utils.compression.rangecoder.Decoder:
    static final int kTopMask
    static final int kNumBitModelTotalBits
    static final int kBitModelTotal
    static final int kNumMoveBits
    int Range
    int Code
    java.io.InputStream Stream
    34:35:public final void SetStream(java.io.InputStream)
    38:39:public final void ReleaseStream()
    42:46:public final void Init()
    49:61:public final int DecodeDirectBits(int)
    65:83:public int DecodeBit(short[],int)
    88:90:public static void InitBitModels(short[])
com.badlogic.gdx.utils.compression.rangecoder.Encoder:
    static final int kTopMask
    static final int kNumBitModelTotalBits
    static final int kBitModelTotal
    static final int kNumMoveBits
    java.io.OutputStream Stream
    long Low
    int Range
    int _cacheSize
    int _cache
    long _position
    static final int kNumMoveReducingBits
    public static final int kNumBitPriceShiftBits
    38:39:public void SetStream(java.io.OutputStream)
    42:43:public void ReleaseStream()
    46:51:public void Init()
    54:56:public void FlushData()
    59:60:public void FlushStream()
    63:75:public void ShiftLow()
    78:86:public void EncodeDirectBits(int,int)
    89:89:public long GetProcessedSizeAdd()
    96:98:public static void InitBitModels(short[])
    101:115:public void Encode(short[],int,int)
    130:130:public static int GetPrice(int,int)
    134:134:public static int GetPrice0(int)
    138:138:public static int GetPrice1(int)
com.badlogic.gdx.utils.reflect.ArrayReflection:
    15:15:public static int getLength(java.lang.Object)
    20:20:public static java.lang.Object get(java.lang.Object,int)
com.badlogic.gdx.utils.reflect.ClassReflection:
    26:26:public static boolean isInstance(java.lang.Class,java.lang.Object)
    58:63:public static com.badlogic.gdx.utils.reflect.Constructor[] getConstructors(java.lang.Class)
    69:73:public static varargs com.badlogic.gdx.utils.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])
    90:95:public static com.badlogic.gdx.utils.reflect.Method[] getMethods(java.lang.Class)
    101:105:public static varargs com.badlogic.gdx.utils.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])
    111:116:public static com.badlogic.gdx.utils.reflect.Method[] getDeclaredMethods(java.lang.Class)
    122:126:public static varargs com.badlogic.gdx.utils.reflect.Method getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class[])
    132:137:public static com.badlogic.gdx.utils.reflect.Field[] getFields(java.lang.Class)
    143:147:public static com.badlogic.gdx.utils.reflect.Field getField(java.lang.Class,java.lang.String)
    164:168:public static com.badlogic.gdx.utils.reflect.Field getDeclaredField(java.lang.Class,java.lang.String)
com.badlogic.gdx.utils.reflect.Constructor:
    18:18:public java.lang.Class[] getParameterTypes()
    27:27:public boolean isAccessible()
com.badlogic.gdx.utils.reflect.Field:
    30:30:public java.lang.Class getDeclaringClass()
    43:43:public boolean isDefaultAccess()
    48:48:public boolean isFinal()
    53:53:public boolean isPrivate()
    58:58:public boolean isProtected()
    63:63:public boolean isPublic()
    78:78:public boolean isVolatile()
    104:108:public java.lang.Object get(java.lang.Object)
com.badlogic.gdx.utils.reflect.Method:
    private final java.lang.reflect.Method method
    13:15:Method(java.lang.reflect.Method)
    19:19:public java.lang.String getName()
    24:24:public java.lang.Class getReturnType()
    29:29:public java.lang.Class[] getParameterTypes()
    34:34:public java.lang.Class getDeclaringClass()
    38:38:public boolean isAccessible()
    42:43:public void setAccessible(boolean)
    47:47:public boolean isAbstract()
    52:52:public boolean isDefaultAccess()
    57:57:public boolean isFinal()
    62:62:public boolean isPrivate()
    67:67:public boolean isProtected()
    72:72:public boolean isPublic()
    77:77:public boolean isNative()
    82:82:public boolean isStatic()
    87:87:public boolean isVarArgs()
    93:99:public varargs java.lang.Object invoke(java.lang.Object,java.lang.Object[])
com.badlogic.gdx.utils.reflect.ReflectionException:
    14:15:public ReflectionException(java.lang.String)
    18:19:public ReflectionException(java.lang.Throwable)
com.esotericsoftware.tablelayout.BaseTableLayout:
    public static final int CENTER
    public static final int TOP
    public static final int BOTTOM
    public static final int LEFT
    public static final int RIGHT
    private float[] columnMinWidth
    private float[] rowMinHeight
    private float[] columnPrefWidth
    private float[] rowPrefHeight
    private float tableMinWidth
    private float tableMinHeight
    private float tablePrefWidth
    private float tablePrefHeight
    private float[] columnWidth
    private float[] rowHeight
    private float[] expandWidth
    private float[] expandHeight
    private float[] columnWeightedWidth
    private float[] rowWeightedHeight
    com.esotericsoftware.tablelayout.Value padLeft
    com.esotericsoftware.tablelayout.Value padBottom
    com.esotericsoftware.tablelayout.Value padRight
    public abstract void invalidateHierarchy()
    87:128:public com.esotericsoftware.tablelayout.Cell add(java.lang.Object)
    134:141:public com.esotericsoftware.tablelayout.Cell row()
    145:154:private void endRow()
    159:170:public com.esotericsoftware.tablelayout.Cell columnDefaults(int)
    176:190:public void reset()
    219:219:public java.util.List getCells()
    223:224:public void setToolkit(com.esotericsoftware.tablelayout.Toolkit)
    228:228:public java.lang.Object getTable()
    238:239:public float getMinWidth()
    244:245:public float getMinHeight()
    250:251:public float getPrefWidth()
    256:257:public float getPrefHeight()
    262:262:public com.esotericsoftware.tablelayout.Cell defaults()
    267:272:public com.esotericsoftware.tablelayout.BaseTableLayout pad(com.esotericsoftware.tablelayout.Value)
    276:281:public com.esotericsoftware.tablelayout.BaseTableLayout pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    286:288:public com.esotericsoftware.tablelayout.BaseTableLayout padTop(com.esotericsoftware.tablelayout.Value)
    293:295:public com.esotericsoftware.tablelayout.BaseTableLayout padLeft(com.esotericsoftware.tablelayout.Value)
    300:302:public com.esotericsoftware.tablelayout.BaseTableLayout padBottom(com.esotericsoftware.tablelayout.Value)
    307:309:public com.esotericsoftware.tablelayout.BaseTableLayout padRight(com.esotericsoftware.tablelayout.Value)
    314:319:public com.esotericsoftware.tablelayout.BaseTableLayout pad(float)
    323:328:public com.esotericsoftware.tablelayout.BaseTableLayout pad(float,float,float,float)
    333:335:public com.esotericsoftware.tablelayout.BaseTableLayout padTop(float)
    340:342:public com.esotericsoftware.tablelayout.BaseTableLayout padLeft(float)
    347:349:public com.esotericsoftware.tablelayout.BaseTableLayout padBottom(float)
    354:356:public com.esotericsoftware.tablelayout.BaseTableLayout padRight(float)
    362:363:public com.esotericsoftware.tablelayout.BaseTableLayout align(int)
    368:369:public com.esotericsoftware.tablelayout.BaseTableLayout center()
    374:376:public com.esotericsoftware.tablelayout.BaseTableLayout top()
    381:383:public com.esotericsoftware.tablelayout.BaseTableLayout left()
    388:390:public com.esotericsoftware.tablelayout.BaseTableLayout bottom()
    395:397:public com.esotericsoftware.tablelayout.BaseTableLayout right()
    402:404:public com.esotericsoftware.tablelayout.BaseTableLayout debug()
    409:411:public com.esotericsoftware.tablelayout.BaseTableLayout debugTable()
    416:418:public com.esotericsoftware.tablelayout.BaseTableLayout debugCell()
    423:425:public com.esotericsoftware.tablelayout.BaseTableLayout debugWidget()
    430:435:public com.esotericsoftware.tablelayout.BaseTableLayout debug(com.esotericsoftware.tablelayout.BaseTableLayout$Debug)
    439:439:public com.esotericsoftware.tablelayout.BaseTableLayout$Debug getDebug()
    443:443:public com.esotericsoftware.tablelayout.Value getPadTopValue()
    451:451:public com.esotericsoftware.tablelayout.Value getPadLeftValue()
    455:455:public float getPadLeft()
    459:459:public com.esotericsoftware.tablelayout.Value getPadBottomValue()
    463:463:public float getPadBottom()
    467:467:public com.esotericsoftware.tablelayout.Value getPadRightValue()
    471:471:public float getPadRight()
    475:475:public int getAlign()
    480:502:public int getRow(float)
    506:509:private float[] ensureSize(float[],int)
    513:513:private float w(com.esotericsoftware.tablelayout.Value)
    517:517:private float h(com.esotericsoftware.tablelayout.Value)
    521:521:private float w(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Cell)
    525:525:private float h(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Cell)
    529:688:private void computeSize()
    693:915:public void layout(float,float,float,float)
com.esotericsoftware.tablelayout.BaseTableLayout$Debug:
    44:44:public static com.esotericsoftware.tablelayout.BaseTableLayout$Debug[] values()
    44:44:public static com.esotericsoftware.tablelayout.BaseTableLayout$Debug valueOf(java.lang.String)
com.esotericsoftware.tablelayout.Cell:
    float widgetX
    float widgetY
    float widgetWidth
    float widgetHeight
    int column
    int row
    float computedPadTop
    float computedPadLeft
    float computedPadBottom
    float computedPadRight
    67:90:void set(com.esotericsoftware.tablelayout.Cell)
    93:117:void merge(com.esotericsoftware.tablelayout.Cell)
    127:127:public java.lang.Object getWidget()
    132:132:public boolean hasWidget()
    137:143:public com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value)
    148:154:public com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    159:160:public com.esotericsoftware.tablelayout.Cell size(float)
    165:166:public com.esotericsoftware.tablelayout.Cell size(float,float)
    171:174:public com.esotericsoftware.tablelayout.Cell width(com.esotericsoftware.tablelayout.Value)
    179:180:public com.esotericsoftware.tablelayout.Cell width(float)
    185:188:public com.esotericsoftware.tablelayout.Cell height(com.esotericsoftware.tablelayout.Value)
    193:194:public com.esotericsoftware.tablelayout.Cell height(float)
    199:201:public com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value)
    206:208:public com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    212:213:public com.esotericsoftware.tablelayout.Cell minWidth(com.esotericsoftware.tablelayout.Value)
    217:218:public com.esotericsoftware.tablelayout.Cell minHeight(com.esotericsoftware.tablelayout.Value)
    223:225:public com.esotericsoftware.tablelayout.Cell minSize(float)
    230:232:public com.esotericsoftware.tablelayout.Cell minSize(float,float)
    236:237:public com.esotericsoftware.tablelayout.Cell minWidth(float)
    241:242:public com.esotericsoftware.tablelayout.Cell minHeight(float)
    247:249:public com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value)
    254:256:public com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    260:261:public com.esotericsoftware.tablelayout.Cell prefWidth(com.esotericsoftware.tablelayout.Value)
    265:266:public com.esotericsoftware.tablelayout.Cell prefHeight(com.esotericsoftware.tablelayout.Value)
    271:273:public com.esotericsoftware.tablelayout.Cell prefSize(float,float)
    278:280:public com.esotericsoftware.tablelayout.Cell prefSize(float)
    284:285:public com.esotericsoftware.tablelayout.Cell prefWidth(float)
    289:290:public com.esotericsoftware.tablelayout.Cell prefHeight(float)
    295:297:public com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value)
    302:304:public com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    308:309:public com.esotericsoftware.tablelayout.Cell maxWidth(com.esotericsoftware.tablelayout.Value)
    313:314:public com.esotericsoftware.tablelayout.Cell maxHeight(com.esotericsoftware.tablelayout.Value)
    319:321:public com.esotericsoftware.tablelayout.Cell maxSize(float)
    326:328:public com.esotericsoftware.tablelayout.Cell maxSize(float,float)
    332:333:public com.esotericsoftware.tablelayout.Cell maxWidth(float)
    337:338:public com.esotericsoftware.tablelayout.Cell maxHeight(float)
    343:347:public com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value)
    351:355:public com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    359:360:public com.esotericsoftware.tablelayout.Cell spaceTop(com.esotericsoftware.tablelayout.Value)
    364:365:public com.esotericsoftware.tablelayout.Cell spaceLeft(com.esotericsoftware.tablelayout.Value)
    369:370:public com.esotericsoftware.tablelayout.Cell spaceBottom(com.esotericsoftware.tablelayout.Value)
    374:375:public com.esotericsoftware.tablelayout.Cell spaceRight(com.esotericsoftware.tablelayout.Value)
    380:386:public com.esotericsoftware.tablelayout.Cell space(float)
    390:398:public com.esotericsoftware.tablelayout.Cell space(float,float,float,float)
    402:404:public com.esotericsoftware.tablelayout.Cell spaceTop(float)
    408:410:public com.esotericsoftware.tablelayout.Cell spaceLeft(float)
    414:416:public com.esotericsoftware.tablelayout.Cell spaceBottom(float)
    420:422:public com.esotericsoftware.tablelayout.Cell spaceRight(float)
    427:431:public com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value)
    435:439:public com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    443:444:public com.esotericsoftware.tablelayout.Cell padTop(com.esotericsoftware.tablelayout.Value)
    448:449:public com.esotericsoftware.tablelayout.Cell padLeft(com.esotericsoftware.tablelayout.Value)
    453:454:public com.esotericsoftware.tablelayout.Cell padBottom(com.esotericsoftware.tablelayout.Value)
    458:459:public com.esotericsoftware.tablelayout.Cell padRight(com.esotericsoftware.tablelayout.Value)
    464:469:public com.esotericsoftware.tablelayout.Cell pad(float)
    473:477:public com.esotericsoftware.tablelayout.Cell pad(float,float,float,float)
    481:482:public com.esotericsoftware.tablelayout.Cell padTop(float)
    486:487:public com.esotericsoftware.tablelayout.Cell padLeft(float)
    491:492:public com.esotericsoftware.tablelayout.Cell padBottom(float)
    496:497:public com.esotericsoftware.tablelayout.Cell padRight(float)
    502:504:public com.esotericsoftware.tablelayout.Cell fill()
    509:510:public com.esotericsoftware.tablelayout.Cell fillX()
    515:516:public com.esotericsoftware.tablelayout.Cell fillY()
    520:522:public com.esotericsoftware.tablelayout.Cell fill(java.lang.Float,java.lang.Float)
    527:529:public com.esotericsoftware.tablelayout.Cell fill(boolean,boolean)
    534:536:public com.esotericsoftware.tablelayout.Cell fill(boolean)
    542:543:public com.esotericsoftware.tablelayout.Cell align(java.lang.Integer)
    548:549:public com.esotericsoftware.tablelayout.Cell center()
    554:560:public com.esotericsoftware.tablelayout.Cell top()
    565:571:public com.esotericsoftware.tablelayout.Cell left()
    576:582:public com.esotericsoftware.tablelayout.Cell bottom()
    587:593:public com.esotericsoftware.tablelayout.Cell right()
    598:600:public com.esotericsoftware.tablelayout.Cell expand()
    605:606:public com.esotericsoftware.tablelayout.Cell expandX()
    611:612:public com.esotericsoftware.tablelayout.Cell expandY()
    616:618:public com.esotericsoftware.tablelayout.Cell expand(java.lang.Integer,java.lang.Integer)
    623:625:public com.esotericsoftware.tablelayout.Cell expand(boolean,boolean)
    629:630:public com.esotericsoftware.tablelayout.Cell ignore(java.lang.Boolean)
    635:636:public com.esotericsoftware.tablelayout.Cell ignore()
    640:640:public boolean getIgnore()
    644:645:public com.esotericsoftware.tablelayout.Cell colspan(java.lang.Integer)
    650:652:public com.esotericsoftware.tablelayout.Cell uniform()
    657:658:public com.esotericsoftware.tablelayout.Cell uniformX()
    663:664:public com.esotericsoftware.tablelayout.Cell uniformY()
    668:670:public com.esotericsoftware.tablelayout.Cell uniform(java.lang.Boolean,java.lang.Boolean)
    674:674:public float getWidgetX()
    678:679:public void setWidgetX(float)
    682:682:public float getWidgetY()
    686:687:public void setWidgetY(float)
    690:690:public float getWidgetWidth()
    694:695:public void setWidgetWidth(float)
    698:698:public float getWidgetHeight()
    702:703:public void setWidgetHeight(float)
    706:706:public int getColumn()
    710:710:public int getRow()
    715:715:public com.esotericsoftware.tablelayout.Value getMinWidthValue()
    719:719:public float getMinWidth()
    724:724:public com.esotericsoftware.tablelayout.Value getMinHeightValue()
    728:728:public float getMinHeight()
    733:733:public com.esotericsoftware.tablelayout.Value getPrefWidthValue()
    737:737:public float getPrefWidth()
    742:742:public com.esotericsoftware.tablelayout.Value getPrefHeightValue()
    746:746:public float getPrefHeight()
    751:751:public com.esotericsoftware.tablelayout.Value getMaxWidthValue()
    755:755:public float getMaxWidth()
    760:760:public com.esotericsoftware.tablelayout.Value getMaxHeightValue()
    764:764:public float getMaxHeight()
    769:769:public com.esotericsoftware.tablelayout.Value getSpaceTopValue()
    773:773:public float getSpaceTop()
    778:778:public com.esotericsoftware.tablelayout.Value getSpaceLeftValue()
    782:782:public float getSpaceLeft()
    787:787:public com.esotericsoftware.tablelayout.Value getSpaceBottomValue()
    791:791:public float getSpaceBottom()
    796:796:public com.esotericsoftware.tablelayout.Value getSpaceRightValue()
    800:800:public float getSpaceRight()
    805:805:public com.esotericsoftware.tablelayout.Value getPadTopValue()
    809:809:public float getPadTop()
    814:814:public com.esotericsoftware.tablelayout.Value getPadLeftValue()
    818:818:public float getPadLeft()
    823:823:public com.esotericsoftware.tablelayout.Value getPadBottomValue()
    827:827:public float getPadBottom()
    832:832:public com.esotericsoftware.tablelayout.Value getPadRightValue()
    836:836:public float getPadRight()
    841:841:public java.lang.Float getFillX()
    846:846:public java.lang.Float getFillY()
    851:851:public java.lang.Integer getAlign()
    856:856:public java.lang.Integer getExpandX()
    861:861:public java.lang.Integer getExpandY()
    866:866:public java.lang.Integer getColspan()
    871:871:public java.lang.Boolean getUniformX()
    876:876:public java.lang.Boolean getUniformY()
    881:881:public boolean isEndRow()
    886:886:public float getComputedPadTop()
    891:891:public float getComputedPadLeft()
    896:896:public float getComputedPadBottom()
    901:901:public float getComputedPadRight()
    905:905:public com.esotericsoftware.tablelayout.Cell row()
    909:909:public com.esotericsoftware.tablelayout.BaseTableLayout getLayout()
    914:937:public void clear()
com.esotericsoftware.tablelayout.Toolkit:
    public abstract float getMinWidth(java.lang.Object)
    public abstract float getMinHeight(java.lang.Object)
    public abstract float getPrefWidth(java.lang.Object)
    public abstract float getPrefHeight(java.lang.Object)
    public abstract float getMaxWidth(java.lang.Object)
    public abstract float getMaxHeight(java.lang.Object)
    public abstract float getWidth(java.lang.Object)
    public abstract float getHeight(java.lang.Object)
    public abstract void clearDebugRectangles(com.esotericsoftware.tablelayout.BaseTableLayout)
    public abstract void addDebugRectangle(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.BaseTableLayout$Debug,float,float,float,float)
    80:80:public float width(float)
com.esotericsoftware.tablelayout.Value:
    public abstract float get(com.esotericsoftware.tablelayout.Cell)
    43:43:public float width(java.lang.Object)
    53:53:public float width(com.esotericsoftware.tablelayout.Cell)
    58:58:public float height(com.esotericsoftware.tablelayout.Cell)
    172:172:public static com.esotericsoftware.tablelayout.Value percentWidth(float)
    181:181:public static com.esotericsoftware.tablelayout.Value percentHeight(float)
    190:190:public static com.esotericsoftware.tablelayout.Value percentWidth(float,java.lang.Object)
    203:203:public static com.esotericsoftware.tablelayout.Value percentHeight(float,java.lang.Object)
com.esotericsoftware.tablelayout.Value$1:
    64:64:public float get(com.esotericsoftware.tablelayout.Cell)
com.esotericsoftware.tablelayout.Value$10
com.esotericsoftware.tablelayout.Value$11
com.esotericsoftware.tablelayout.Value$2:
    113:116:public float get(com.esotericsoftware.tablelayout.Cell)
com.esotericsoftware.tablelayout.Value$3:
    123:126:public float get(com.esotericsoftware.tablelayout.Cell)
com.esotericsoftware.tablelayout.Value$4:
    133:136:public float get(com.esotericsoftware.tablelayout.Cell)
com.esotericsoftware.tablelayout.Value$5:
    143:146:public float get(com.esotericsoftware.tablelayout.Cell)
com.esotericsoftware.tablelayout.Value$6:
    153:156:public float get(com.esotericsoftware.tablelayout.Cell)
com.esotericsoftware.tablelayout.Value$7:
    163:166:public float get(com.esotericsoftware.tablelayout.Cell)
com.esotericsoftware.tablelayout.Value$8
com.esotericsoftware.tablelayout.Value$9
com.esotericsoftware.tablelayout.Value$FixedValue
com.esotericsoftware.tablelayout.Value$TableValue
